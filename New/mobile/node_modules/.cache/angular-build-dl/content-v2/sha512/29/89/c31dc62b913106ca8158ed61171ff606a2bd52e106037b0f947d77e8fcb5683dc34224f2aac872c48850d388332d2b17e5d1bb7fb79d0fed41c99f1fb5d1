{"version":3,"file":"mobile_src_app_modules_features_coverages_coverage-tabs_plans_plan-tabs_plan-tabs_module_ts-es2015.js","mappings":"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QACzB,uKAAoC;;KAErC,CAAC;GACW,YAAY,CA8DxB;AA9DwB;;;;;;;;;;;;;;;;;ACrBlB;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,oCAAoC;AAC9B;AACP;AACA;AACA;AACA,CAAC,0CAA0C;AACpC;AACP;AACA;AACA;AACA;AACA,CAAC,4CAA4C;;;;;;;;;;;;;;;;;;;;ACzBI;AACjD,eAAe,+DAAc;AAC7B,eAAe,6JAAe;AAC9B,CAAC;AAC6B;AACZ;;;;;;;;;;;;;;;;;;;ACLyB;AACH;AACG;AACI;AACxC,kCAAkC,mDAAK;AAC9C,0BAA0B,oDAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAU;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,kEAAuB;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sEAA2B;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACjF4C;AACM;AAC3C,2BAA2B,2DAAc,CAAC,qDAAW;AACrD;;;;;;;;;;;;;;;ACHA;AACP;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACFuD;AACqD;AAC3E;AAGiD;IAOrE,aAAa,SAAb,aAAa;IASxB,YAAoB,cAAoC;QAApC,mBAAc,GAAd,cAAc,CAAsB;QARxD,YAAO,GAAU,4GAAwB,CAAC;QAE1C,gBAAW,GAAG,mCAAM,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;IAME,CAAC;IAE5D,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,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","sources":["./mobile/src/app/modules/features/coverages/coverage-tabs/plans/plan-tabs/plan-tabs-routing.module.ts","./mobile/src/app/modules/features/coverages/coverage-tabs/plans/plan-tabs/plan-tabs.module.ts","./mobile/src/app/modules/features/coverages/coverage-tabs/plans/plan-tabs/plan-tabs.page.ts","./node_modules/@capacitor/camera/dist/esm/definitions.js","./node_modules/@capacitor/camera/dist/esm/index.js","./node_modules/rxjs/_esm2015/internal/operators/delay.js","./node_modules/rxjs/_esm2015/internal/scheduler/async.js","./node_modules/rxjs/_esm2015/internal/util/isDate.js","./shared-lib/components/coverages/plan-tabs/plan-details/as-of/as-of.component.ts","./shared-lib/components/coverages/plan-tabs/plan-details/as-of/as-of.module.ts","./shared-lib/components/coverages/plan-tabs/plan-details/cov-explanations/cov-explanations.component.ts","./shared-lib/components/coverages/plan-tabs/plan-details/cov-explanations/cov-explanations.module.ts","./shared-lib/components/coverages/plan-tabs/plan-details/cov-extra-details/cov-extra-details.component.ts","./shared-lib/components/coverages/plan-tabs/plan-details/cov-extra-details/cov-extra-details.module.ts","./shared-lib/components/coverages/plan-tabs/plan-details/dependents/dependents.component.ts","./shared-lib/components/coverages/plan-tabs/plan-details/dependents/dependents.module.ts","./shared-lib/components/coverages/plan-tabs/plan-details/my-id-card/card-modal/card-modal.component.ts","./shared-lib/components/coverages/plan-tabs/plan-details/my-id-card/my-id-card.component.ts","./shared-lib/components/coverages/plan-tabs/plan-details/my-id-card/my-id-card.module.ts","./shared-lib/components/coverages/plan-tabs/plan-details/plan-details-routing.module.ts","./shared-lib/components/coverages/plan-tabs/plan-details/plan-details.component.ts","./shared-lib/components/coverages/plan-tabs/plan-details/plan-details.module.ts","./web/src/app/modules/features/coverages/add-card/add-card.component.ts","./web/src/app/modules/features/coverages/add-card/card/card.component.ts","./mobile/src/app/modules/features/coverages/coverage-tabs/plans/plan-tabs/plan-tabs.page.html","./shared-lib/components/coverages/plan-tabs/plan-details/as-of/as-of.component.html","./shared-lib/components/coverages/plan-tabs/plan-details/cov-explanations/cov-explanations.component.html","./shared-lib/components/coverages/plan-tabs/plan-details/cov-extra-details/cov-extra-details.component.html","./shared-lib/components/coverages/plan-tabs/plan-details/dependents/dependents.component.html","./shared-lib/components/coverages/plan-tabs/plan-details/my-id-card/card-modal/card-modal.component.html","./shared-lib/components/coverages/plan-tabs/plan-details/my-id-card/my-id-card.component.html","./shared-lib/components/coverages/plan-tabs/plan-details/plan-details.component.html","./web/src/app/modules/features/coverages/add-card/add-card.component.html","./web/src/app/modules/features/coverages/add-card/card/card.component.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {PlanDetailsComponent} from '@shared-lib/components/coverages/plan-tabs/plan-details/plan-details.component';\nimport {PlanTransactionsComponent} from '@shared-lib/components/coverages/plan-tabs/plan-transactions/plan-transactions.component';\nimport {PlanTabsPage} from './plan-tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlanTabsPage,\n\n    children: [\n      {\n        path: 'details',\n        component: PlanDetailsComponent,\n      },\n      {\n        path: 'transactions',\n        component: PlanTransactionsComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlanTabsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {PlanTabsPageRoutingModule} from './plan-tabs-routing.module';\nimport {PlanTransactionsModule} from '@shared-lib/components/coverages/plan-tabs/plan-transactions/plan-transactions.module';\nimport {PlanTabsPage} from './plan-tabs.page';\nimport {AsOfComponentModule} from '@shared-lib/components/coverages/plan-tabs/plan-details/as-of/as-of.module';\nimport {PlanDetailsModule} from '@shared-lib/components/coverages/plan-tabs/plan-details/plan-details.module';\nimport {LoadingTextComponentModule} from '@shared-lib/components/loading-text/loading-text.module';\nimport {ConsentRequiredComponentModule} from '@shared-lib/components/coverages/consent-required/consent-required.module';\nimport {DependentsComponentModule} from '@shared-lib/components/coverages/plan-tabs/plan-details/dependents/dependents.module';\nimport {CovExplanationsModule} from '@shared-lib/components/coverages/plan-tabs/plan-details/cov-explanations/cov-explanations.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PlanTabsPageRoutingModule,\n    LoadingTextComponentModule,\n    PlanDetailsModule,\n    AsOfComponentModule,\n    ConsentRequiredComponentModule,\n    PlanTransactionsModule,\n    DependentsComponentModule,\n    CovExplanationsModule,\n  ],\n  declarations: [PlanTabsPage],\n})\nexport class PlanTabsPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport {HeaderTypeService} from '@shared-lib/services/header-type/header-type.service';\nimport {SubHeaderTab} from 'shared-lib/models/tab-sub-header.model';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport * as pageText from '@shared-lib/constants/coverage.json';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  DependentsData,\n  Benefit,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {ActionOptions} from '@shared-lib/models/ActionOptions.model';\nimport {AccessService} from '@shared-lib/services/access/access.service';\n\n@Component({\n  selector: 'app-plan-tabs',\n  templateUrl: './plan-tabs.page.html',\n  styleUrls: ['./plan-tabs.page.scss'],\n})\nexport class PlanTabsPage implements OnInit {\n  pageText: Record<string, string> = pageText;\n\n  tabs: SubHeaderTab[] = [];\n\n  actionOption: ActionOptions = {\n    headername: '',\n    btnright: true,\n    btnleft: true,\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n    buttonLeft: {\n      name: '',\n      link: this.pageText.backLink,\n    },\n  };\n\n  selectedBenefit: Benefit;\n\n  selectedTab = 'details';\n\n  constructor(\n    private headerType: HeaderTypeService,\n    private footerType: FooterTypeService,\n    private router: Router,\n    private benefitsService: BenefitsService,\n    private accessService: AccessService\n  ) {}\n\n  ngOnInit() {\n    this.tabs.push({\n      label: this.pageText.detailsLabel,\n      link: 'details',\n    });\n    this.accessService.checkMyvoyageAccess().then(result => {\n      if (result.enableBST === 'Y') {\n        this.tabs.push({\n          label: this.pageText.claimsLabel,\n          link: 'transactions',\n        });\n      }\n    });\n  }\n\n  dependent: DependentsData;\n\n  ionViewWillEnter() {\n    this.selectedBenefit = this.benefitsService.getSelectedBenefit();\n    this.actionOption.headername = this.selectedBenefit.name;\n    this.footerType.publish({type: FooterType.tabsnav});\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n    this.router.navigateByUrl('/coverages/plan-tabs/details');\n  }\n\n  handleClick(selectedTab: SubHeaderTab) {\n    this.selectedTab = selectedTab.link;\n  }\n}\n","export var CameraSource;\n(function (CameraSource) {\n    /**\n     * Prompts the user to select either the photo album or take a photo.\n     */\n    CameraSource[\"Prompt\"] = \"PROMPT\";\n    /**\n     * Take a new photo using the camera.\n     */\n    CameraSource[\"Camera\"] = \"CAMERA\";\n    /**\n     * Pick an existing photo from the gallery or photo album.\n     */\n    CameraSource[\"Photos\"] = \"PHOTOS\";\n})(CameraSource || (CameraSource = {}));\nexport var CameraDirection;\n(function (CameraDirection) {\n    CameraDirection[\"Rear\"] = \"REAR\";\n    CameraDirection[\"Front\"] = \"FRONT\";\n})(CameraDirection || (CameraDirection = {}));\nexport var CameraResultType;\n(function (CameraResultType) {\n    CameraResultType[\"Uri\"] = \"uri\";\n    CameraResultType[\"Base64\"] = \"base64\";\n    CameraResultType[\"DataUrl\"] = \"dataUrl\";\n})(CameraResultType || (CameraResultType = {}));\n","import { registerPlugin } from '@capacitor/core';\nconst Camera = registerPlugin('Camera', {\n    web: () => import('./web').then(m => new m.CameraWeb()),\n});\nexport * from './definitions';\nexport { Camera };\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nexport function delay(delay, scheduler = async) {\n    const absoluteDelay = isDate(delay);\n    const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);\n    return (source) => source.lift(new DelayOperator(delayFor, scheduler));\n}\nclass DelayOperator {\n    constructor(delay, scheduler) {\n        this.delay = delay;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n    }\n}\nclass DelaySubscriber extends Subscriber {\n    constructor(destination, delay, scheduler) {\n        super(destination);\n        this.delay = delay;\n        this.scheduler = scheduler;\n        this.queue = [];\n        this.active = false;\n        this.errored = false;\n    }\n    static dispatch(state) {\n        const source = state.source;\n        const queue = source.queue;\n        const scheduler = state.scheduler;\n        const destination = state.destination;\n        while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n            queue.shift().notification.observe(destination);\n        }\n        if (queue.length > 0) {\n            const delay = Math.max(0, queue[0].time - scheduler.now());\n            this.schedule(state, delay);\n        }\n        else {\n            this.unsubscribe();\n            source.active = false;\n        }\n    }\n    _schedule(scheduler) {\n        this.active = true;\n        const destination = this.destination;\n        destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {\n            source: this, destination: this.destination, scheduler: scheduler\n        }));\n    }\n    scheduleNotification(notification) {\n        if (this.errored === true) {\n            return;\n        }\n        const scheduler = this.scheduler;\n        const message = new DelayMessage(scheduler.now() + this.delay, notification);\n        this.queue.push(message);\n        if (this.active === false) {\n            this._schedule(scheduler);\n        }\n    }\n    _next(value) {\n        this.scheduleNotification(Notification.createNext(value));\n    }\n    _error(err) {\n        this.errored = true;\n        this.queue = [];\n        this.destination.error(err);\n        this.unsubscribe();\n    }\n    _complete() {\n        this.scheduleNotification(Notification.createComplete());\n        this.unsubscribe();\n    }\n}\nclass DelayMessage {\n    constructor(time, notification) {\n        this.time = time;\n        this.notification = notification;\n    }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\nexport const async = asyncScheduler;\n","export function isDate(value) {\n    return value instanceof Date && !isNaN(+value);\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport * as planText from '@shared-lib/components/coverages/plan-tabs/plan-details/constants/planText.json';\nimport * as moment from 'moment';\nimport {Plan} from '../model/plan.model';\nimport {DeductibleObj} from '@shared-lib/services/benefits/models/benefits.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Benefit} from '../../../../../services/benefits/models/benefits.model';\n@Component({\n  selector: 'app-as-of',\n  templateUrl: './as-of.component.html',\n  styleUrls: ['./as-of.component.scss'],\n})\nexport class AsOfComponent implements OnInit {\n  content: Plan = (planText as any).default;\n\n  currentDate = moment(Date.now()).format('MMMM DD, YYYY');\n\n  @Input() benefit: Benefit;\n  @Input() coverageDeduct: DeductibleObj;\n  isWeb: boolean;\n\n  constructor(private utilityService: SharedUtilityService) {}\n\n  ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n}\n","//as-of.module\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {AsOfComponent} from './as-of.component';\nimport {LoadingTextComponentModule} from '@shared-lib/components/loading-text/loading-text.module';\nimport {LoadingComponentModule} from '@shared-lib/components/loading/loading.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoadingTextComponentModule,\n    LoadingComponentModule,\n  ],\n  declarations: [AsOfComponent],\n  exports: [AsOfComponent],\n})\nexport class AsOfComponentModule {}\n","import {Component, Input} from '@angular/core';\nimport {CoverageExplanationsOOPDeductible} from '@shared-lib/services/benefits/models/message.model';\nimport * as planText from '@shared-lib/components/coverages/plan-tabs/plan-details/constants/planText.json';\nimport {Plan} from '../model/plan.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n@Component({\n  selector: 'app-cov-explanations',\n  templateUrl: './cov-explanations.component.html',\n  styleUrls: ['./cov-explanations.component.scss'],\n})\nexport class CovExplanationsComponent {\n  content: Plan = (planText as any).default;\n  isWeb: boolean;\n\n  @Input() covExp: CoverageExplanationsOOPDeductible;\n  @Input() cType: string;\n\n  constructor(private utilityService: SharedUtilityService) {}\n\n  ngOnInit(): void {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n}\n","//as-of.module\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {CovExplanationsComponent} from './cov-explanations.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule],\n  declarations: [CovExplanationsComponent],\n  exports: [CovExplanationsComponent],\n})\nexport class CovExplanationsModule {}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {\n  FootNote,\n  PlanSumGroup,\n} from '../../../../../services/benefits/models/benefits.model';\n\n@Component({\n  selector: 'app-cov-extra-details',\n  templateUrl: './cov-extra-details.component.html',\n  styleUrls: ['./cov-extra-details.component.scss'],\n})\nexport class CovExtraDetailsComponent implements OnInit {\n  @Input() planSummaryGroup: PlanSumGroup;\n  @Input() notes: FootNote[];\n  expanded = false;\n  isWeb = false;\n\n  constructor(private utilityService: SharedUtilityService) {}\n\n  ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  toggle() {\n    this.expanded = !this.expanded;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {CovExtraDetailsComponent} from './cov-extra-details.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, FormsModule],\n  declarations: [CovExtraDetailsComponent],\n  exports: [CovExtraDetailsComponent],\n})\nexport class CovExtraDetailsModule {}\n","import {Component, Input} from '@angular/core';\nimport * as planText from '@shared-lib/components/coverages/plan-tabs/plan-details/constants/planText.json';\nimport {Plan} from '../model/plan.model';\nimport {Dependents} from '@shared-lib/services/benefits/models/benefits.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'app-dependents',\n  templateUrl: './dependents.component.html',\n  styleUrls: ['./dependents.component.scss'],\n})\nexport class DependentsComponent {\n  content: Plan = (planText as any).default;\n\n  @Input() dependent: Dependents[];\n  isWeb: boolean;\n\n  constructor(private utilityService: SharedUtilityService) {}\n\n  ngOnInit(): void {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n}\n","//as-of.module\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {LoadingTextComponentModule} from '@shared-lib/components/loading-text/loading-text.module';\nimport {DependentsComponent} from './dependents.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, LoadingTextComponentModule],\n  declarations: [DependentsComponent],\n  exports: [DependentsComponent],\n})\nexport class DependentsComponentModule {}\n","import {Component, Input} from '@angular/core';\nimport {ModalController} from '@ionic/angular';\nimport {BenefitsService} from '../../../../../../services/benefits/benefits.service';\n\n@Component({\n  selector: '',\n  templateUrl: './card-modal.component.html',\n  styleUrls: ['./card-modal.component.scss'],\n})\nexport class CardModalComponent {\n  @Input() delete = false;\n  @Input() yesText: string;\n  @Input() noText: string;\n  @Input() description: string;\n  @Input() header: string;\n\n  constructor(\n    private modalController: ModalController,\n    private benefitService: BenefitsService\n  ) {}\n\n  deleteCard() {\n    if (this.delete) {\n      this.benefitService.deleteMedicalCard();\n    }\n\n    this.closeModal();\n  }\n\n  closeModal() {\n    this.modalController.dismiss();\n  }\n}\n","import {Component, Input, OnInit, SimpleChanges} from '@angular/core';\nimport {IdCardContent} from './models/idCardModel';\nimport idCard from './constants/idCard.json';\nimport {card, upload_from} from './constants/camera.enum';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Router} from '@angular/router';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  Camera,\n  CameraResultType,\n  CameraSource,\n  Photo,\n  PermissionStatus,\n} from '@capacitor/camera';\nimport {\n  ActionSheetController,\n  LoadingController,\n  ModalController,\n} from '@ionic/angular';\nimport {trigger, state, style, transition, animate} from '@angular/animations';\nimport {Subscription} from 'rxjs';\nimport {MyIDCard} from '@shared-lib/services/benefits/models/benefits.model';\nimport {DeleteModalContent} from './card-modal/constants/delete.model';\nimport pageText from './card-modal/constants/pageText.json';\nimport {CardModalComponent} from './card-modal/card-modal.component';\n@Component({\n  selector: 'app-my-id-card',\n  templateUrl: './my-id-card.component.html',\n  styleUrls: ['./my-id-card.component.scss'],\n  animations: [\n    trigger('flipState', [\n      state(\n        'back',\n        style({\n          transform: 'rotateY(179deg)',\n        })\n      ),\n      state(\n        'front',\n        style({\n          transform: 'rotateY(0)',\n        })\n      ),\n      transition('back => front', animate('500ms ease-out')),\n      transition('front => back', animate('500ms ease-in')),\n    ]),\n  ],\n})\nexport class MyIdCardComponent implements OnInit {\n  content: IdCardContent = idCard;\n  cardImage: MyIDCard = {\n    cardFront: '',\n    cardBack: '',\n  };\n  private camera = Camera;\n  flip = 'front';\n  private subscription = new Subscription();\n  deleteContent: DeleteModalContent = pageText;\n  @Input() benefitId: string;\n  private benefitCards: Record<string, MyIDCard>;\n  private firstLoad = true;\n\n  constructor(\n    private loadingCtrl: LoadingController,\n    private actionSheetCtrl: ActionSheetController,\n    private utilService: SharedUtilityService,\n    private router: Router,\n    private modalController: ModalController,\n    private benefit: BenefitsService\n  ) {}\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.benefitId) {\n      this.setCardImages();\n    }\n  }\n\n  addACard() {\n    if (this.utilService.getIsWeb()) {\n      const selectedBenefit = this.benefit.getSelectedBenefit();\n      this.router.navigateByUrl(\n        '/coverages/view-plans/' + selectedBenefit.id + '/details/add-card'\n      );\n    } else {\n      this.presentActionSheet();\n    }\n  }\n\n  private setCardImages() {\n    if (this.benefitId && this.benefitCards) {\n      this.cardImage.cardFront =\n        this.benefitCards[this.benefitId]?.cardFront || '';\n      this.cardImage.cardBack =\n        this.benefitCards[this.benefitId]?.cardBack || '';\n      if (\n        this.cardImage.cardFront === '' &&\n        this.cardImage.cardBack === '' &&\n        this.firstLoad\n      ) {\n        this.benefit.getIdCard();\n      }\n      this.firstLoad = false;\n    }\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.benefit\n        .getCardImages()\n        .subscribe((res: Record<string, MyIDCard>) => {\n          this.benefitCards = res;\n          this.setCardImages();\n        })\n    );\n    this.subscription.add(\n      this.benefit.getFlipCardSubject().subscribe((res: string) => {\n        this.flip = res;\n      })\n    );\n  }\n\n  async openSource(type: upload_from): Promise<Photo | undefined> {\n    try {\n      const image: Photo = await this.camera.getPhoto({\n        quality: 90,\n        allowEditing: true,\n        source:\n          type === upload_from.CAMERA\n            ? CameraSource.Camera\n            : CameraSource.Photos,\n        resultType: CameraResultType.Base64,\n      });\n      return image;\n    } catch (error) {\n      return undefined;\n    }\n  }\n\n  private async checkPermissionAndRequest(type: upload_from) {\n    const permission = await this.camera.checkPermissions();\n    const permissionType = type === upload_from.CAMERA ? 'camera' : 'photos';\n    let result = await this.checkPermission(permission, type);\n    if (!result && permission[permissionType] !== 'denied') {\n      const requestPermission = await this.camera.requestPermissions({\n        permissions: [permissionType],\n      });\n      result = await this.checkPermission(requestPermission, type);\n    }\n    return result;\n  }\n\n  private async checkPermission(\n    permission: PermissionStatus,\n    type: string\n  ): Promise<boolean> {\n    let result = false;\n    if (permission[type] === 'granted' || permission[type] === 'limited') {\n      result = true;\n    } else if (permission[type] === 'denied') {\n      const header =\n        (type === 'camera' ? 'Camera' : 'Photo library') +\n        ' permission is denied';\n\n      const description =\n        'Please enable ' +\n        (type === 'camera' ? 'camera' : 'photo library') +\n        ' permission from the device settings of the app to use this feature.';\n      this.showModal({\n        yesText: 'Okay',\n        description: description,\n        header: header,\n      });\n    }\n    return result;\n  }\n\n  async presentActionSheet() {\n    const actionSheet = await this.actionSheetCtrl.create({\n      buttons: [\n        {\n          text: idCard.actionsheet.fromPhotos,\n          handler: () => {\n            this.startLoader(card.FRONT, upload_from.PHOTOS);\n          },\n        },\n        {\n          text: idCard.actionsheet.fromCamera,\n          handler: () => {\n            this.startLoader(card.FRONT, upload_from.CAMERA);\n          },\n        },\n        {\n          text: idCard.actionsheet.cancel,\n          role: 'cancel',\n        },\n      ],\n    });\n    await actionSheet.present();\n  }\n\n  async startLoader(cardSide: card, type: upload_from) {\n    const permission = await this.checkPermissionAndRequest(type);\n    if (permission) {\n      this.load(cardSide, type);\n    }\n  }\n\n  private async load(cardSide: card, type: upload_from) {\n    const loaderMessage =\n      type === upload_from.CAMERA\n        ? idCard.loaderMessagefromCamera\n        : idCard.loaderMessagefromPhotos;\n    const loading = await this.loadingCtrl.create({\n      message: loaderMessage.replace('$cardSide', cardSide),\n      showBackdrop: true,\n      cssClass: 'card-overlay',\n    });\n    loading.present().then(async () => {\n      setTimeout(async () => {\n        const image = await this.openSource(type);\n        if (image) {\n          if (cardSide === card.FRONT) {\n            this.cardImage.cardFront = image.base64String\n              ? image.base64String\n              : '';\n            await this.startLoader(card.BACK, type);\n          }\n          this.setCardBack(cardSide, image);\n        }\n        loading.dismiss();\n      }, 5000);\n    });\n  }\n\n  setCardBack(cardSide: card, image: Photo) {\n    if (cardSide === card.BACK) {\n      this.cardImage.cardBack = image.base64String ? image.base64String : '';\n      if (this.cardImage.cardFront !== '' && this.cardImage.cardBack !== '') {\n        this.benefit.uploadMyIdCard(this.cardImage);\n      }\n    }\n  }\n\n  toggleFlip() {\n    this.benefit.flipCard(this.flip);\n  }\n\n  private async showModal(componentProps: Record<string, string | boolean>) {\n    const modal = await this.modalController.create({\n      component: CardModalComponent,\n      cssClass: 'modal-not-fullscreen',\n      swipeToClose: false,\n      componentProps: componentProps,\n    });\n    modal.present();\n  }\n\n  deleteImage() {\n    this.showModal({\n      header: this.deleteContent.titleMessage,\n      yesText: this.deleteContent.yes,\n      noText: this.deleteContent.no,\n      delete: true,\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","//as-of.module\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {MyIdCardComponent} from './my-id-card.component';\nimport {CardModalComponent} from './card-modal/card-modal.component';\nimport {NgxIonicImageViewerModule} from 'ngx-ionic-image-viewer';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, NgxIonicImageViewerModule],\n  declarations: [MyIdCardComponent, CardModalComponent],\n  exports: [MyIdCardComponent],\n})\nexport class MyIdCardModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {AddCardComponent} from '../../../../../web/src/app/modules/features/coverages/add-card/add-card.component';\nimport {PlanDetailsComponent} from './plan-details.component';\nconst routes: Routes = [\n  {\n    path: '',\n    component: PlanDetailsComponent,\n  },\n  {\n    path: 'add-card',\n    component: AddCardComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PlanDetailsPageRoutingModule {}\n","import {Component, ElementRef, OnInit, ViewChild} from '@angular/core';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  BenefitsSummaryContent,\n  DeductibleObj,\n  Dependents,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {CoverageExplanationsOOPDeductible} from '@shared-lib/services/benefits/models/message.model';\nimport * as planText from '@shared-lib/components/coverages/plan-tabs/plan-details/constants/planText.json';\nimport {Plan} from './model/plan.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {EventManagerService} from '@shared-lib/modules/event-manager/event-manager/event-manager.service';\nimport {Subscription} from 'rxjs';\nimport {eventKeys} from '@shared-lib/constants/event-keys';\nimport {delay} from 'rxjs/operators';\nimport {Benefit} from '../../../../services/benefits/models/benefits.model';\n@Component({\n  selector: 'app-plan-details',\n  templateUrl: './plan-details.component.html',\n  styleUrls: ['./plan-details.component.scss'],\n})\nexport class PlanDetailsComponent implements OnInit {\n  content: Plan = (planText as any).default;\n  benefitContent: BenefitsSummaryContent;\n  selectedBenefit: Benefit;\n  subscription = new Subscription();\n  isWeb: boolean;\n  @ViewChild('topmostElement', {read: ElementRef}) topmostElement: ElementRef;\n  deductible: DeductibleObj;\n\n  constructor(\n    private benefitsService: BenefitsService,\n    private utilityService: SharedUtilityService,\n    private eventManagerService: EventManagerService\n  ) {}\n\n  dependentsData: Dependents[];\n  covExplanation: CoverageExplanationsOOPDeductible;\n\n  ngOnInit(): void {\n    this.isWeb = this.utilityService.getIsWeb();\n    if (!this.utilityService.getIsWeb()) {\n      this.fetchData();\n    }\n  }\n\n  fetchData() {\n    this.selectedBenefit = this.benefitsService.getSelectedBenefit();\n    this.dependentsData = this.selectedBenefit.planDetails.dependents;\n    this.getBenefitContent();\n    this.fetchCovExp();\n  }\n\n  async getBenefitContent(): Promise<void> {\n    return this.benefitsService\n      .getBenefitContent()\n      .then((res: BenefitsSummaryContent) => {\n        this.benefitContent = res;\n      });\n  }\n\n  async fetchCovExp() {\n    this.benefitsService\n      .getCovExp()\n      .then((data: CoverageExplanationsOOPDeductible) => {\n        this.covExplanation = data;\n      });\n  }\n\n  ionViewDidEnter() {\n    if (this.utilityService.getIsWeb()) {\n      this.eventManagerService\n        .createSubscriber(eventKeys.refreshCoveragePlansDetails)\n        .pipe(delay(100))\n        .subscribe(() => {\n          this.fetchData();\n          this.utilityService.scrollToTop(this.topmostElement);\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {PlanDetailsPageRoutingModule} from './plan-details-routing.module';\nimport {PlanDetailsComponent} from './plan-details.component';\nimport {LoadingTextComponentModule} from '@shared-lib/components/loading-text/loading-text.module';\nimport {AsOfComponentModule} from './as-of/as-of.module';\nimport {DependentsComponentModule} from './dependents/dependents.module';\nimport {CovExplanationsModule} from './cov-explanations/cov-explanations.module';\nimport {MedDisclaimerModule} from '../../med-disclaimer/med-disclaimer.module';\nimport {MyIdCardModule} from '../plan-details/my-id-card/my-id-card.module';\nimport {AddCardComponent} from '../../../../../web/src/app/modules/features/coverages/add-card/add-card.component';\nimport {CardComponent} from '../../../../../web/src/app/modules/features/coverages/add-card/card/card.component';\nimport {CovExtraDetailsModule} from './cov-extra-details/cov-extra-details.module';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PlanDetailsPageRoutingModule,\n    LoadingTextComponentModule,\n    AsOfComponentModule,\n    DependentsComponentModule,\n    CovExplanationsModule,\n    MedDisclaimerModule,\n    MyIdCardModule,\n    CovExtraDetailsModule,\n  ],\n  declarations: [PlanDetailsComponent, AddCardComponent, CardComponent],\n  exports: [PlanDetailsComponent],\n})\nexport class PlanDetailsModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {Location} from '@angular/common';\nimport * as pageContent from './constants/content.json';\nimport {PageContent} from './constants/model';\nimport {card} from '@shared-lib/components/coverages/plan-tabs/plan-details/my-id-card/constants/camera.enum';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {MyIDCard} from '@shared-lib/services/benefits/models/benefits.model';\nimport {Subscription} from 'rxjs';\n@Component({\n  selector: 'mobile-add-card',\n  templateUrl: './add-card.component.html',\n  styleUrls: ['./add-card.component.scss'],\n})\nexport class AddCardComponent implements OnInit {\n  constructor(private location: Location, private benefit: BenefitsService) {}\n  pageContent: PageContent = pageContent;\n  cardSide = card;\n  loading: boolean;\n  private subscription = new Subscription();\n  cardFront = '';\n  cardBack = '';\n\n  ngOnInit(): void {\n    let firstLoad = true;\n    this.subscription.add(\n      this.benefit\n        .getCardImages()\n        .subscribe((res: Record<string, MyIDCard>) => {\n          const selectedBenefit = this.benefit.getSelectedBenefit();\n          this.cardFront = res[selectedBenefit.id]?.cardFront || '';\n          this.cardBack = res[selectedBenefit.id]?.cardBack || '';\n\n          if (this.cardFront === '' && this.cardBack === '' && firstLoad) {\n            this.benefit.getIdCard();\n          }\n          firstLoad = false;\n        })\n    );\n  }\n\n  addCard(imgBase64: string, cardSide: card) {\n    this.cardFront = cardSide === card.FRONT ? imgBase64 : this.cardFront;\n    this.cardBack = cardSide === card.BACK ? imgBase64 : this.cardBack;\n  }\n\n  async uploadCard() {\n    const newCard: MyIDCard = {\n      cardFront: this.benefit.trimBase64MetaData(this.cardFront),\n      cardBack: this.benefit.trimBase64MetaData(this.cardBack),\n    };\n    this.loading = !this.loading;\n    await this.benefit.uploadMyIdCard(newCard);\n    this.loading = false;\n    this.close();\n  }\n\n  close() {\n    this.benefit.flipCard('back');\n    this.location.back();\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import {\n  AfterViewInit,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport * as pageContent from './constants/content.json';\nimport {PageContent} from './constants/model';\nimport {card} from '@shared-lib/components/coverages/plan-tabs/plan-details/my-id-card/constants/camera.enum';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\n@Component({\n  selector: 'card-component',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent implements AfterViewInit {\n  @ViewChild('fileInput', {static: false}) fileInput: ElementRef;\n  pageContent: PageContent = pageContent;\n  @Input() side: string;\n  @Output() fileBase64 = new EventEmitter<string>();\n  cardSide = card;\n  imgUrl: string;\n  @Input() imageBase64: string;\n\n  constructor(private benefit: BenefitsService) {}\n\n  ngAfterViewInit(): void {\n    this.imgUrl = this.imageBase64\n      ? this.benefit.appendBase64MetaData(this.imageBase64)\n      : undefined;\n  }\n\n  openFileBrowser() {\n    this.fileInput.nativeElement.click();\n  }\n\n  selectFile(event: Event) {\n    const file = (event.target as HTMLInputElement).files[0];\n    const reader = new FileReader();\n\n    reader.readAsDataURL(file);\n    reader.onload = () => {\n      const imageData = reader.result as string;\n      this.imgUrl = imageData;\n      const base64Image = this.benefit.trimBase64MetaData(imageData);\n      this.fileBase64.emit(base64Image);\n    };\n  }\n\n  changeCard() {\n    this.openFileBrowser();\n  }\n}\n","export default \"<ng-container\\n  *ngIf=\\\"selectedBenefit?.type == 'medical_plan'; else noMedicalPlan \\\"\\n>\\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-tab-button\\n        *ngFor=\\\"let tab of tabs\\\"\\n        [ngClass]=\\\"{'selectedRipple': selectedTab === tab.link || selectedTab === tab.routerLink}\\\"\\n        (click)=\\\"handleClick(tab)\\\"\\n        class=\\\"lightgrey\\\"\\n        [tab]=\\\"tab.link\\\"\\n        id=\\\"cov-plan-tab1\\\"\\n      >\\n        <ion-label>{{tab.label}}</ion-label>\\n      </ion-tab-button>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n</ng-container>\\n\\n<ng-template #noMedicalPlan>\\n  <ion-tabs>\\n    <ion-tab-bar slot=\\\"top\\\">\\n      <ion-tab-button class=\\\"lightgrey selectedRipple\\\" id=\\\"cov-plan-tab2\\\">\\n        <ion-label>{{pageText.detailsLabel}}</ion-label>\\n      </ion-tab-button>\\n    </ion-tab-bar>\\n  </ion-tabs>\\n</ng-template>\\n\";","export default \"<div [ngClass]=\\\"isWeb ? 'web-as-of' : 'mobile-as-of'\\\">\\n  <ion-row>\\n    <ion-col>\\n      <div class=\\\"ion-text-start As-of-date\\\">\\n        <p>{{ content.basic.asOf }} {{ currentDate }}</p>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-card class=\\\"card-wrap as-of-wrap\\\">\\n    <app-loading [loading]=\\\"!benefit\\\" [center]=\\\"true\\\">\\n      <ion-grid>\\n        <ion-row\\n          class=\\\"asofdata-row\\\"\\n          *ngIf=\\\"benefit?.coverageType\\\"\\n          [ngClass]=\\\"\\n            (benefit?.coverageType).length > 12 ? 'margin-bottom-10' : ''\\n          \\\"\\n        >\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.coverage_type }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            {{ benefit?.coverageType }}\\n          </ion-col>\\n        </ion-row>\\n        <ion-row class=\\\"asofdata-row\\\" *ngIf=\\\"benefit?.coverage_start_date\\\">\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.coverage_start_date }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            {{ benefit?.coverage_start_date | date: 'MM/dd/yyy' }}\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row\\n          class=\\\"asofdata-row last-two-values\\\"\\n          *ngIf=\\\"benefit?.coverage_end_date\\\"\\n        >\\n          <ion-col class=\\\"ion-text-start\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.coverage_end_date }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            {{ benefit?.coverage_end_date | date: 'MM/dd/yyy' }}\\n          </ion-col>\\n        </ion-row>\\n\\n        <ng-container *ngIf=\\\"isWeb\\\">\\n          <ion-row\\n            *ngIf=\\\"coverageDeduct?.individual > 0 || coverageDeduct?.family > 0\\\"\\n            class=\\\"asofdata-row\\\"\\n          >\\n            <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n              <span>{{ content.dependents.coverageDeductible }}</span>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row\\n            *ngIf=\\\"coverageDeduct?.individual > 0\\\"\\n            class=\\\"asofdata-row deduct-row\\\"\\n          >\\n            <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n              <span>{{ content.dependents.individual }}</span>\\n            </ion-col>\\n            <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n              <app-loading-text [isLoading]=\\\"!coverageDeduct\\\">\\n                {{ coverageDeduct?.individual | currency: 'USD':'symbol' }}\\n              </app-loading-text>\\n            </ion-col>\\n          </ion-row>\\n          <ion-row\\n            *ngIf=\\\"coverageDeduct?.family > 0\\\"\\n            class=\\\"asofdata-row deduct-row\\\"\\n          >\\n            <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n              <span>{{ content.dependents.family }}</span>\\n            </ion-col>\\n            <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n              <app-loading-text [isLoading]=\\\"!coverageDeduct\\\">\\n                {{ coverageDeduct?.family | currency: 'USD':'symbol' }}\\n              </app-loading-text>\\n            </ion-col>\\n          </ion-row>\\n        </ng-container>\\n        <ion-row class=\\\"asofdata-row\\\" *ngIf=\\\"benefit?.deduction_start_date\\\">\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.deduction_start_date }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            <app-loading-text [isLoading]=\\\"!benefit\\\">\\n              {{ benefit?.deduction_start_date | date: 'MM/dd/yyy' }}\\n            </app-loading-text>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row class=\\\"asofdata-row\\\" *ngIf=\\\"benefit?.deduction_end_date\\\">\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.deduction_end_date }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            <app-loading-text [isLoading]=\\\"!benefit\\\"\\n              >{{ benefit?.deduction_end_date | date: 'MM/dd/yyy' }}\\n            </app-loading-text>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row\\n          *ngIf=\\\"isWeb && coverageDeduct?.coinsurance > 0\\\"\\n          class=\\\"asofdata-row\\\"\\n        >\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.coinsurance }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            <app-loading-text [isLoading]=\\\"!coverageDeduct\\\"\\n              >{{ coverageDeduct?.coinsurance }}%\\n            </app-loading-text>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row\\n          *ngIf=\\\"isWeb && coverageDeduct?.copay > 0\\\"\\n          class=\\\"asofdata-row\\\"\\n        >\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.copay }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            <app-loading-text [isLoading]=\\\"!coverageDeduct\\\"\\n              >{{ coverageDeduct?.copay | currency: 'USD':'symbol' }}\\n            </app-loading-text>\\n          </ion-col>\\n        </ion-row>\\n\\n        <div class=\\\"h-line\\\" *ngIf=\\\"isWeb\\\"></div>\\n\\n        <ion-row class=\\\"asofdata-row\\\" *ngIf=\\\"benefit?.premium\\\">\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.premium }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            {{ benefit?.premium | currency: 'USD':'symbol' }}\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row class=\\\"asofdata-row\\\" *ngIf=\\\"benefit?.employer_premium\\\">\\n          <ion-col class=\\\"ion-text-start last-two-values\\\" size=\\\"7\\\">\\n            <span>{{ content.dependents.employer_premium }}</span>\\n          </ion-col>\\n          <ion-col class=\\\"ion-text-end last-two-values\\\" size=\\\"5\\\">\\n            {{ benefit?.employer_premium | currency: 'USD':'symbol' }}\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n    </app-loading>\\n  </ion-card>\\n</div>\\n\";","export default \"<div [ngClass]=\\\"isWeb ? 'web-cov-explanations' : 'mobile-explanations'\\\">\\n  <ion-row>\\n    <ion-col>\\n      <div class=\\\"ion-text-start exp-head\\\">\\n        <p automation-id=\\\"coverage-explanation-header\\\">\\n          {{ content.explanation.heading }}\\n        </p>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-card class=\\\"card-wrap exp-wrap\\\">\\n    <ng-container *ngFor=\\\"let data of covExp?.Benefit\\\">\\n      <ion-grid *ngIf=\\\"data.benefit_type == cType\\\">\\n        <ion-row class=\\\"exp-row\\\" *ngFor=\\\"let exp of data.explanations\\\">\\n          <h4 automation-id=\\\"outOfPocketTitle\\\" *ngIf=\\\"exp?.outOfPocketTitle\\\">\\n            {{ exp.outOfPocketTitle }}\\n          </h4>\\n          <p *ngIf=\\\"exp?.outOfPocketDescription\\\">\\n            {{ exp.outOfPocketDescription }}\\n          </p>\\n          <h4 automation-id=\\\"deductibleTitle\\\" *ngIf=\\\"exp?.deductibleTitle\\\">\\n            {{ exp.deductibleTitle }}\\n          </h4>\\n          <p *ngIf=\\\"exp?.deductibleDescription\\\">\\n            {{ exp.deductibleDescription }}\\n          </p>\\n        </ion-row>\\n      </ion-grid>\\n    </ng-container>\\n  </ion-card>\\n</div>\\n\";","export default \"<ion-card [ngClass]=\\\"isWeb ? 'isWeb' : ''\\\">\\n  <ion-row (click)=\\\"toggle()\\\" class=\\\"header-row\\\">\\n    <div class=\\\"header\\\">{{ planSummaryGroup?.label }}</div>\\n    <img *ngIf=\\\"!expanded\\\" src=\\\"assets/icon/plus.svg\\\" alt=\\\"expand\\\" />\\n    <img *ngIf=\\\"expanded\\\" src=\\\"assets/icon/minus.svg\\\" alt=\\\"collapse\\\" />\\n  </ion-row>\\n  <ion-grid class=\\\"content\\\" [ngClass]=\\\"expanded ? 'expanded' : ''\\\">\\n    <ion-row *ngFor=\\\"let row of planSummaryGroup?.items\\\" class=\\\"content-row\\\">\\n      <ion-col size=\\\"6\\\" class=\\\"ion-no-padding row-text label\\\">{{\\n        row.label\\n      }}</ion-col>\\n      <ion-col size=\\\"6\\\" class=\\\"ion-no-padding row-text value\\\">{{\\n        row.description\\n      }}</ion-col>\\n    </ion-row>\\n    <br />\\n    <ion-row *ngFor=\\\"let note of notes\\\">\\n      <ion-text>Note: {{ note.note }}</ion-text>\\n    </ion-row>\\n  </ion-grid>\\n</ion-card>\\n\";","export default \"<div [ngClass]=\\\"isWeb ? 'web-dependents' : 'mobile-dependents'\\\">\\n  <ion-row>\\n    <ion-col>\\n      <div class=\\\"ion-text-start dependents-head\\\">\\n        <p automation-id=\\\"dependents-header\\\">\\n          {{ content.dependents.heading }}\\n        </p>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-card class=\\\"card-wrap dep-wrap\\\" *ngIf=\\\"dependent\\\">\\n    <ion-grid>\\n      <ion-row class=\\\"dep-row\\\" *ngFor=\\\"let info of dependent; let i = index\\\">\\n        <h4>{{ info.first_name }} {{ info.last_name }}</h4>\\n        <ion-row class=\\\"info-row\\\">\\n          <ion-col size=\\\"7\\\"\\n            ><span> {{ content.dependents.relationship }} </span></ion-col\\n          ><ion-col class=\\\"value\\\" size=\\\"5\\\">\\n            <app-loading-text [isLoading]=\\\"!info\\\"\\n              >{{ info?.relationship }}\\n            </app-loading-text>\\n          </ion-col>\\n        </ion-row>\\n\\n        <ion-row class=\\\"info-row\\\">\\n          <ion-col size=\\\"7\\\"\\n            ><span> {{ content.dependents.age }} </span></ion-col\\n          ><ion-col class=\\\"value\\\" size=\\\"5\\\">\\n            <app-loading-text [isLoading]=\\\"!info\\\"\\n              >{{ info?.age }}\\n            </app-loading-text>\\n          </ion-col>\\n        </ion-row>\\n\\n        <div class=\\\"h-line\\\" *ngIf=\\\"i < dependent.length - 1 && isWeb\\\"></div>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-card>\\n</div>\\n\";","export default \"<ion-card class=\\\"alert-dialog\\\">\\n  <ion-card-header>\\n    <ion-card-title>\\n      <span class=\\\"x-button\\\" (click)=\\\"closeModal()\\\" automation-id=\\\"close-btn\\\"\\n        ><img src=\\\"assets/icon/exit.svg\\\" alt=\\\"Close dialog\\\"/></span\\n    ></ion-card-title>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <p class=\\\"title-message\\\">{{ header }}</p>\\n    <p class=\\\"description-message\\\" *ngIf=\\\"description\\\">{{ description }}</p>\\n    <div>\\n      <ion-button\\n        class=\\\"font-18 save-button\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        (click)=\\\"deleteCard()\\\"\\n        automation-id=\\\"yes-btn\\\"\\n      >\\n        {{ yesText }}\\n      </ion-button>\\n      <ion-button\\n        (click)=\\\"closeModal()\\\"\\n        class=\\\"cancel-button\\\"\\n        automation-id=\\\"no-btn\\\"\\n        *ngIf=\\\"noText\\\"\\n      >\\n        {{ noText }}\\n      </ion-button>\\n    </div>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<div>\\n  <ion-row>\\n    <ion-col>\\n      <div class=\\\"ion-text-start dependents-head\\\">\\n        <div class=\\\"background\\\">\\n          <ion-text automation-id=\\\"app-my-id-card-header\\\">\\n            {{ content.header }}\\n          </ion-text>\\n          <div\\n            *ngIf=\\\"\\n              cardImage.cardFront === '' && cardImage.cardBack === '';\\n              else cardBlock\\n            \\\"\\n          >\\n            <p>{{ content.desc }}</p>\\n            <ion-button\\n              automation-id=\\\"app-my-id-card-button\\\"\\n              (click)=\\\"addACard()\\\"\\n            >\\n              <ion-icon\\n                class=\\\"font\\\"\\n                slot=\\\"start\\\"\\n                name=\\\"add-circle-outline\\\"\\n              ></ion-icon>\\n              {{ content.button }}\\n            </ion-button>\\n          </div>\\n        </div>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n</div>\\n<ng-template #cardBlock>\\n  <button\\n    slot=\\\"start\\\"\\n    fill=\\\"clear\\\"\\n    class=\\\"btn-primary\\\"\\n    (click)=\\\"toggleFlip()\\\"\\n    automation-id=\\\"flip-btn\\\"\\n  >\\n    <img\\n      class=\\\"img-flip\\\"\\n      src=\\\"assets/icon/account-type/flip.svg\\\"\\n      alt=\\\"flip-btn\\\"\\n    />\\n    {{ content.flipBtn }}\\n  </button>\\n  <div class=\\\"tp-wrapper\\\">\\n    <div class=\\\"tp-box\\\" [@flipState]=\\\"flip\\\">\\n      <div class=\\\"tp-box__side tp-box__front\\\">\\n        <ion-img-viewer\\n          [slideOptions]=\\\"{zoom: {maxRatio: 7}}\\\"\\n          [src]=\\\"cardImage.cardFront\\\"\\n          *ngIf=\\\"cardImage.cardFront !== ''\\\"\\n          alt=\\\"card front\\\"\\n        >\\n        </ion-img-viewer>\\n      </div>\\n      <div class=\\\"tp-box__side tp-box__back\\\">\\n        <ion-img-viewer\\n          [slideOptions]=\\\"{zoom: {maxRatio: 7}}\\\"\\n          [src]=\\\"cardImage.cardBack\\\"\\n          *ngIf=\\\"cardImage.cardBack !== ''\\\"\\n          alt=\\\"card back\\\"\\n        >\\n        </ion-img-viewer>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"text-center\\\">\\n    <button\\n      slot=\\\"start\\\"\\n      fill=\\\"clear\\\"\\n      class=\\\"btn-sec update\\\"\\n      (click)=\\\"addACard()\\\"\\n      automation-id=\\\"update-btn\\\"\\n    >\\n      {{ content.updateBtn }}\\n    </button>\\n  </div>\\n  <div class=\\\"text-center\\\">\\n    <button\\n      slot=\\\"start\\\"\\n      fill=\\\"clear\\\"\\n      class=\\\"btn-sec delete\\\"\\n      (click)=\\\"deleteImage()\\\"\\n      automation-id=\\\"delete-btn\\\"\\n    >\\n      {{ content.deleteBtn }}\\n    </button>\\n  </div>\\n</ng-template>\\n\";","export default \"<div [ngClass]=\\\"isWeb ? 'web-plans-details' : 'mobile-plans-details'\\\">\\n  <ion-row class=\\\"outerContainer bg-color\\\">\\n    <div class=\\\"inner-container\\\">\\n      <div class=\\\"half-bg\\\" #topmostElement></div>\\n      <ion-grid class=\\\"basic-wrap\\\">\\n        <ion-row>\\n          <ion-col size=\\\"8\\\">\\n            <div class=\\\"ion-text-start display-name\\\">\\n              <app-loading-text [isLoading]=\\\"!covExplanation\\\">\\n                <ng-container *ngFor=\\\"let data of covExplanation?.Benefit\\\">\\n                  <p *ngIf=\\\"selectedBenefit?.type == data.benefit_type\\\">\\n                    {{ data.benefit_type_title }}\\n                  </p>\\n                </ng-container>\\n              </app-loading-text>\\n            </div>\\n          </ion-col>\\n          <ion-col size=\\\"4\\\" class=\\\"logo-c\\\">\\n            <img\\n              src=\\\"{{ (benefitContent?.iconMapping)[selectedBenefit?.type] }}\\\"\\n              alt=\\\"\\\"\\n            />\\n          </ion-col>\\n        </ion-row>\\n      </ion-grid>\\n\\n      <app-as-of\\n        class=\\\"inputComponent\\\"\\n        [benefit]=\\\"selectedBenefit\\\"\\n        [coverageDeduct]=\\\"deductible\\\"\\n      ></app-as-of>\\n\\n      <app-my-id-card [benefitId]=\\\"selectedBenefit?.id\\\"></app-my-id-card>\\n\\n      <app-dependents\\n        class=\\\"inputComponent\\\"\\n        [dependent]=\\\"dependentsData\\\"\\n      ></app-dependents>\\n\\n      <div *ngFor=\\\"let group of selectedBenefit?.plan_summary?.groups\\\">\\n        <app-cov-extra-details\\n          [planSummaryGroup]=\\\"group\\\"\\n          [notes]=\\\"selectedBenefit?.plan_summary.footnotes\\\"\\n        ></app-cov-extra-details>\\n      </div>\\n\\n      <app-cov-explanations\\n        class=\\\"inputComponent\\\"\\n        [covExp]=\\\"covExplanation\\\"\\n        [cType]=\\\"this.selectedBenefit?.type\\\"\\n      >\\n      </app-cov-explanations>\\n    </div>\\n  </ion-row>\\n  <app-med-disclaimer></app-med-disclaimer>\\n</div>\\n\";","export default \"<ion-grid>\\n  <ion-row class=\\\"header-row\\\">\\n    <ion-col\\n      size=\\\"2\\\"\\n      class=\\\"close-btn\\\"\\n      automation-id=\\\"add-card-close-btn\\\"\\n      tabindex=\\\"0\\\"\\n      (keydown.enter)=\\\"close()\\\"\\n      (click)=\\\"close()\\\"\\n      >{{ pageContent.closeBtn }}</ion-col\\n    >\\n    <ion-col size=\\\"8\\\" class=\\\"card-header\\\">{{ pageContent.header }}</ion-col>\\n    <ion-col size=\\\"2\\\"></ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col class=\\\"card-front\\\" size=\\\"12\\\" size-md=\\\"6\\\">\\n      <card-component\\n        (fileBase64)=\\\"addCard($event, cardSide.FRONT)\\\"\\n        [side]=\\\"cardSide.FRONT\\\"\\n        [imageBase64]=\\\"cardFront\\\"\\n      ></card-component>\\n    </ion-col>\\n    <ion-col class=\\\"card-back\\\" size=\\\"12\\\" size-md=\\\"6\\\">\\n      <card-component\\n        (fileBase64)=\\\"addCard($event, cardSide.BACK)\\\"\\n        [side]=\\\"cardSide.BACK\\\"\\n        [imageBase64]=\\\"cardBack\\\"\\n      ></card-component>\\n    </ion-col>\\n  </ion-row>\\n\\n  <ion-row\\n    class=\\\"ion-justify-content-center save-button\\\"\\n    (click)=\\\"uploadCard()\\\"\\n    automation-id=\\\"upload-card\\\"\\n  >\\n    <ion-col size=\\\"4\\\">\\n      <button\\n        *ngIf=\\\"!loading\\\"\\n        [class.active]=\\\"cardFront != '' && cardBack != ''\\\"\\n        automation-id=\\\"save-my-card\\\"\\n        [disabled]=\\\"cardFront === '' || cardBack === ''\\\"\\n      >\\n        {{ pageContent.saveBtn }}\\n      </button>\\n      <div class=\\\"container\\\" *ngIf=\\\"loading\\\">\\n        <div class=\\\"text\\\">\\n          {{ pageContent.uploading }}\\n        </div>\\n        <div class=\\\"image\\\">\\n          <img src=\\\"assets/icon/loader.svg\\\" alt=\\\"loader\\\" />\\n        </div>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<div\\n  *ngIf=\\\"imgUrl === undefined; else showCard\\\"\\n  class=\\\"card-section\\\"\\n  [ngClass]=\\\"side === cardSide.BACK ? 'align-right' : ''\\\"\\n>\\n  <div class=\\\"header\\\">\\n    {{ pageContent.cardSection.header.upload }}&nbsp;<span class=\\\"card-side\\\">\\n      {{\\n        side === cardSide.FRONT\\n          ? pageContent.cardSection.header.frontSide\\n          : pageContent.cardSection.header.backSide\\n      }}&nbsp; </span\\n    >{{ pageContent.common.card }}\\n  </div>\\n  <div class=\\\"sub-header\\\">{{ pageContent.cardSection.subHeader }}</div>\\n  <div class=\\\"image-placeholder\\\">\\n    <img class=\\\"placeholder\\\" src=\\\"assets/icon/image-placeholder.svg\\\" alt=\\\"\\\" />\\n    <div class=\\\"browse-text\\\">\\n      <span\\n        tabindex=\\\"0\\\"\\n        (keydown.enter)=\\\"openFileBrowser()\\\"\\n        (click)=\\\"openFileBrowser()\\\"\\n        automation-id=\\\"open-file-browser\\\"\\n        ><span class=\\\"browse-title\\\">{{\\n          pageContent.cardSection.browse.browse\\n        }}</span>\\n        <input\\n          #fileInput\\n          type=\\\"file\\\"\\n          accept=\\\"image/png, image/jpeg, image/tiff\\\"\\n          class=\\\"input\\\"\\n          (change)=\\\"selectFile($event)\\\"\\n        />\\n      </span>\\n      {{ pageContent.cardSection.browse.choose }}\\n    </div>\\n  </div>\\n</div>\\n\\n<ng-template #showCard>\\n  <div\\n    class=\\\"card-section\\\"\\n    [ngClass]=\\\"side === cardSide.BACK ? 'align-right' : ''\\\"\\n  >\\n    <div class=\\\"header\\\">\\n      <span class=\\\"card-side\\\">\\n        {{\\n          side === cardSide.FRONT\\n            ? pageContent.card.header.frontSide\\n            : pageContent.card.header.backSide\\n        }}&nbsp; </span\\n      >{{ pageContent.common.card }}\\n      <span\\n        class=\\\"change\\\"\\n        tabindex=\\\"0\\\"\\n        (keydown.enter)=\\\"changeCard()\\\"\\n        (click)=\\\"changeCard()\\\"\\n        automation-id=\\\"change-card\\\"\\n        >{{ pageContent.card.header.change }}\\n        <input\\n          #fileInput\\n          type=\\\"file\\\"\\n          accept=\\\"image/png, image/jpeg, image/tiff\\\"\\n          class=\\\"input\\\"\\n          (change)=\\\"selectFile($event)\\\"\\n        />\\n      </span>\\n    </div>\\n    <div class=\\\"card-image\\\">\\n      <img\\n        [src]=\\\"imgUrl\\\"\\n        [alt]=\\\"\\n          side === cardSide.FRONT\\n            ? 'Front side of your card'\\n            : 'Back side of your card'\\n        \\\"\\n      />\\n    </div>\\n  </div>\\n</ng-template>\\n\";"],"names":[],"sourceRoot":"webpack:///"}