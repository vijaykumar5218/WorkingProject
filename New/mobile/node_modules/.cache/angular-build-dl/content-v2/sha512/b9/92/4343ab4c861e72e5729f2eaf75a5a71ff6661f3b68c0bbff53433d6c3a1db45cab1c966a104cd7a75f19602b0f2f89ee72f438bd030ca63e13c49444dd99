{"version":3,"file":"shared-lib_components_settings_components_notification-settings_notification-settings_module_ts-es2015.js","mappings":"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","sources":["./shared-lib/components/settings/components/notification-settings/components/notification-events/notification-events.component.ts","./shared-lib/components/settings/components/notification-settings/components/notification-events/notification-events.module.ts","./shared-lib/components/settings/components/notification-settings/notification-settings-routing.module.ts","./shared-lib/components/settings/components/notification-settings/notification-settings.module.ts","./shared-lib/components/settings/components/notification-settings/notification-settings.page.ts","./shared-lib/services/header-footer-type/headerFooterType.service.ts","./shared-lib/components/settings/components/notification-settings/components/notification-events/notification-events.component.html","./shared-lib/components/settings/components/notification-settings/notification-settings.page.html"],"sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {CommonContent} from '@shared-lib/services/notification-setting/models/common-content.model';\nimport {\n  PartyIds,\n  SectionChecked,\n} from '@shared-lib/services/notification-setting/models/party-ids.model';\nimport * as commonContent from '@shared-lib/services/notification-setting/constants/common-content.json';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-notification-events',\n  templateUrl: './notification-events.component.html',\n  styleUrls: ['../../common.scss'],\n})\nexport class NotificationEventsComponent implements OnInit, OnDestroy {\n  @Input() title: string;\n  @Input() subTitle: string;\n  @Input() basePropName: string;\n\n  commonContent: CommonContent = (commonContent as any).default;\n  sectionActive = false;\n  pushChecked = false;\n  textChecked = false;\n  emailChecked = false;\n\n  private subscription: Subscription;\n\n  constructor(private settingService: NotificationsSettingService) {}\n\n  async ngOnInit() {\n    this.subscription = this.settingService.notificationPrefsChanged$.subscribe(\n      this.partyIdsUpdated.bind(this)\n    );\n  }\n\n  partyIdsUpdated(partyIds: PartyIds) {\n    const sectionChecked: SectionChecked = this.settingService.getCheckedAndActive(\n      partyIds,\n      this.basePropName\n    );\n    this.pushChecked = sectionChecked.pushChecked;\n    this.emailChecked = sectionChecked.emailChecked;\n    this.textChecked = sectionChecked.textChecked;\n    this.sectionActive = sectionChecked.sectionActive;\n  }\n\n  updateSetting(checked: boolean, fieldName: string) {\n    this.settingService.updateSettings(checked, fieldName);\n  }\n\n  toggleSection(): void {\n    if (!this.sectionActive) {\n      this.settingService.updateSettings(\n        false,\n        this.basePropName + 'MobileContactId-DONT_TEXT'\n      );\n      this.settingService.updateSettings(\n        false,\n        this.basePropName + 'EmailContactId-DONT_EMAIL'\n      );\n      this.settingService.updateSettings(\n        false,\n        this.basePropName + 'PushContactId-DONT_PUSH'\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationEventsComponent} from './notification-events.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [FormsModule, CommonModule, IonicModule],\n  declarations: [NotificationEventsComponent],\n  exports: [NotificationEventsComponent],\n})\nexport class NotificationEventsPageModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {NotificationSettingsPage} from './notification-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationSettingsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationSettingsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationSettingsPageRoutingModule} from './notification-settings-routing.module';\nimport {NotificationSettingsPage} from './notification-settings.page';\nimport {FormsModule} from '@angular/forms';\nimport {NotificationEventsPageModule} from './components/notification-events/notification-events.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    IonicModule,\n    NotificationSettingsPageRoutingModule,\n    NotificationEventsPageModule,\n  ],\n  declarations: [NotificationSettingsPage],\n  exports: [NotificationSettingsPage],\n})\nexport class NotificationSettingsPageModule {}\n","import {Component, OnDestroy} from '@angular/core';\nimport {SettingsContent} from '@shared-lib/services/notification-setting/models/notification-settings-content.model';\nimport {PartyIds} from '@shared-lib/services/notification-setting/models/party-ids.model';\nimport * as commonContent from '@shared-lib/services/notification-setting/constants/common-content.json';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {LoadingController} from '@ionic/angular';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PlatformService} from '@shared-lib/services/platform/platform.service';\nimport {JourneyService} from '@shared-lib/services/journey/journey.service';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {HeaderFooterTypeService} from '../../../../services/header-footer-type/headerFooterType.service';\nimport {ActionOptions} from '../../../../models/ActionOptions.model';\nimport {HeaderType} from '../../../../constants/headerType.enum';\n\n@Component({\n  selector: 'app-notification-settings',\n  templateUrl: './notification-settings.page.html',\n  styleUrls: ['./notification-settings.page.scss'],\n})\nexport class NotificationSettingsPage implements OnDestroy {\n  content = (commonContent as any).default;\n  actionOption: ActionOptions = {\n    headername: this.content.headername,\n    btnleft: true,\n    btnright: true,\n    buttonLeft: {\n      name: '',\n      link: 'settings',\n    },\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n  isWeb: boolean;\n  isDesktop: boolean;\n\n  settingsHeader: string;\n  settingsFooter: string;\n  partyIdVals: PartyIds;\n  settingsContent: SettingsContent;\n  subscription = new Subscription();\n  savePath = '/settings';\n\n  constructor(\n    private headerFooterType: HeaderFooterTypeService,\n    private settingService: NotificationsSettingService,\n    private loadingController: LoadingController,\n    private router: Router,\n    private utilityService: SharedUtilityService,\n    private platformService: PlatformService,\n    private journeyService: JourneyService\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.platformService.isDesktop().subscribe(data => {\n      this.isDesktop = data;\n    });\n  }\n\n  ngOnInit() {\n    this.initData();\n  }\n\n  async ionViewWillEnter() {\n    const backLink = this.journeyService.getJourneyBackButton();\n    if (backLink) {\n      this.actionOption.buttonLeft.link = backLink;\n      this.savePath = backLink;\n    } else {\n      this.actionOption.buttonLeft.link = 'settings';\n      this.savePath = '/settings';\n    }\n    this.headerFooterType.publishType(\n      {\n        type: HeaderType.navbar,\n        actionOption: this.actionOption,\n      },\n      {type: FooterType.tabsnav, selectedTab: 'settings'}\n    );\n    this.journeyService.setJourneyBackButton(undefined);\n  }\n\n  async initData() {\n    this.settingsContent = await this.settingService.getSettingsContent();\n    this.settingService.setPrefsSettings();\n  }\n\n  async saveSettings(): Promise<void> {\n    const loading = await this.loadingController.create({\n      translucent: true,\n    });\n    await loading.present();\n\n    await this.settingService.saveNotificationPrefs();\n    this.settingService.getNotificationSettings(true);\n    const rootPath = this.isWeb && !this.isDesktop ? 'more' : this.savePath;\n    this.router.navigateByUrl(rootPath);\n    loading.dismiss();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FooterInfo} from '@shared-lib/modules/footer/models/footerInfo.model';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport {HeaderInfo} from '../../models/headerInfo.model';\nimport {HeaderTypeService} from '../header-type/header-type.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeaderFooterTypeService {\n  constructor(\n    private headerTypeService: HeaderTypeService,\n    private footerTypeService: FooterTypeService\n  ) {}\n\n  publishType(headerInfo: HeaderInfo, footerInfo: FooterInfo): void {\n    this.headerTypeService.publish(headerInfo);\n    this.footerTypeService.publish(footerInfo);\n  }\n}\n","export default \"<div class=\\\"settings-section-wrapper\\\">\\n  <div>\\n    <ion-toggle\\n      (ionChange)=\\\"toggleSection()\\\"\\n      [(ngModel)]=\\\"sectionActive\\\"\\n      id=\\\"{{ 'toogle-btn-' + basePropName }}\\\"\\n    ></ion-toggle>\\n    <h4>{{ title }}</h4>\\n    <p class=\\\"settings-subtext\\\">\\n      {{ subTitle }}\\n    </p>\\n  </div>\\n  <div *ngIf=\\\"sectionActive\\\">\\n    <div class=\\\"settings-section\\\">\\n      <!-- PUSH notifications -->\\n      <ion-row>\\n        <ion-checkbox\\n          id=\\\"{{ basePropName + 'PushContactId' }}\\\"\\n          name=\\\"{{ basePropName + 'PushContactId' }}\\\"\\n          color=\\\"btncolor\\\"\\n          class=\\\"settings-checkbox\\\"\\n          [(ngModel)]=\\\"pushChecked\\\"\\n          (ionChange)=\\\"\\n            updateSetting(pushChecked, basePropName + 'PushContactId-DONT_PUSH')\\n          \\\"\\n          mode=\\\"md\\\"\\n        >\\n        </ion-checkbox>\\n        <ion-label class=\\\"settings-checkbox-label\\\"\\n          >{{ commonContent.pushNotification }}\\n        </ion-label>\\n      </ion-row>\\n      <!-- TEXT notifications -->\\n      <ion-row>\\n        <ion-checkbox\\n          id=\\\"{{ basePropName + 'MobileContactId' }}\\\"\\n          name=\\\"{{ basePropName + 'MobileContactId' }}\\\"\\n          color=\\\"btncolor\\\"\\n          [(ngModel)]=\\\"textChecked\\\"\\n          (ionChange)=\\\"\\n            updateSetting(\\n              textChecked,\\n              basePropName + 'MobileContactId-DONT_TEXT'\\n            )\\n          \\\"\\n          class=\\\"settings-checkbox\\\"\\n          mode=\\\"md\\\"\\n        >\\n        </ion-checkbox>\\n        <ion-label class=\\\"settings-checkbox-label\\\">{{\\n          commonContent.textLabel\\n        }}</ion-label>\\n      </ion-row>\\n      <!-- EMAIL notifications -->\\n      <ion-row>\\n        <ion-checkbox\\n          id=\\\"{{ basePropName + 'EmailContactId' }}\\\"\\n          name=\\\"{{ basePropName + 'EmailContactId' }}\\\"\\n          color=\\\"btncolor\\\"\\n          [(ngModel)]=\\\"emailChecked\\\"\\n          (ionChange)=\\\"\\n            updateSetting(\\n              emailChecked,\\n              basePropName + 'EmailContactId-DONT_EMAIL'\\n            )\\n          \\\"\\n          class=\\\"settings-checkbox\\\"\\n          mode=\\\"md\\\"\\n        >\\n        </ion-checkbox>\\n        <ion-label class=\\\"settings-checkbox-label\\\"\\n          >{{ commonContent.emailLabel }}\\n        </ion-label>\\n      </ion-row>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div\\n  [ngClass]=\\\"isWeb? 'web-notification-settings':'mobile-notification-settings'\\\"\\n  id=\\\"notification-settings\\\"\\n>\\n  <ion-grid class=\\\"ion-no-padding ion-no-margin\\\">\\n    <ion-row>\\n      <ion-col>\\n        <label class=\\\"ion-no-padding font-18 font-w-600\\\"> </label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <p *ngIf=\\\"settingsContent\\\" class=\\\"settings-header\\\">\\n          {{settingsContent.NotificationSettingsDescription}}\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n    <form name=\\\"HPNotificationSettingsForm\\\" id=\\\"HPNotificationSettingsForm\\\">\\n      <app-notification-events\\n        [title]=\\\"content.highPriority\\\"\\n        [subTitle]=\\\"settingsContent?.HighPriorityEventsDescription\\\"\\n        [basePropName]=\\\"'HPPref'\\\"\\n      ></app-notification-events>\\n      <app-notification-events\\n        [title]=\\\"content.accountActivity\\\"\\n        [subTitle]=\\\"settingsContent?.AccountActivitiesDescription\\\"\\n        [basePropName]=\\\"'AAPref'\\\"\\n      ></app-notification-events>\\n      <app-notification-events\\n        [title]=\\\"content.insights\\\"\\n        [subTitle]=\\\"settingsContent?.InsightsRecommendationsDescription\\\"\\n        [basePropName]=\\\"'INPref'\\\"\\n      ></app-notification-events>\\n      <ion-row class=\\\"button-row\\\">\\n        <ion-col class=\\\"cancel-button\\\">\\n          <ion-button\\n            id=\\\"cancel-button\\\"\\n            class=\\\"cancel-button\\\"\\n            shape=\\\"round\\\"\\n            expand=\\\"block\\\"\\n            fill=\\\"outline\\\"\\n            [routerLink]=\\\"savePath\\\"\\n          >\\n            {{content.cancelLabel}}</ion-button\\n          >\\n        </ion-col>\\n        <ion-col class=\\\"continue-button\\\">\\n          <ion-button\\n            id=\\\"save-button\\\"\\n            class=\\\"save-button\\\"\\n            shape=\\\"round\\\"\\n            expand=\\\"block\\\"\\n            fill=\\\"outline\\\"\\n            (click)=\\\"saveSettings()\\\"\\n            >{{content.saveLabel}}</ion-button\\n          >\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <div\\n            class=\\\"settings-footer\\\"\\n            *ngIf=\\\"settingsContent\\\"\\n            [innerHtml]=\\\"settingsContent.NotificationSettingsFooterTxt\\\"\\n          ></div>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n  </ion-grid>\\n</div>\\n\";"],"names":[],"sourceRoot":"webpack:///"}