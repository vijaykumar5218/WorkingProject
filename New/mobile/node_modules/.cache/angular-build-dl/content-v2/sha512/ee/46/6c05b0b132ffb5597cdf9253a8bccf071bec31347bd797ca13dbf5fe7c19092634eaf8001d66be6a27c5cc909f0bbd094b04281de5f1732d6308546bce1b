{"version":3,"file":"shared-lib_modules_notification_notification_module_ts-es2015.js","mappings":"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","sources":["./shared-lib/components/loading/loading.component.ts","./shared-lib/components/loading/loading.module.ts","./shared-lib/modules/notification/components/notification-item/notification-item.component.ts","./shared-lib/modules/notification/components/notification-item/notification-item.module.ts","./shared-lib/modules/notification/notification-routing.module.ts","./shared-lib/modules/notification/notification.module.ts","./shared-lib/modules/notification/notification.page.ts","./shared-lib/components/loading/loading.component.html","./shared-lib/modules/notification/components/notification-item/notification-item.component.html","./shared-lib/modules/notification/notification.page.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent {\n  @Input() public loading: boolean;\n  @Input() public center = false;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {LoadingComponent} from './loading.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [LoadingComponent],\n  exports: [LoadingComponent],\n})\nexport class LoadingComponentModule {}\n","import {Component, Input} from '@angular/core';\nimport * as text from '../../constants/notification.json';\nimport {HighPriority} from '@shared-lib/services/notification/models/notification.model';\nimport {SharedUtilityService} from '../../../../services/utility/utility.service';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-notification-item',\n  templateUrl: './notification-item.component.html',\n  styleUrls: ['./notification-item.component.scss'],\n})\nexport class NotificationItemComponent {\n  pageText: Record<string, string> = JSON.parse(JSON.stringify(text)).default;\n\n  @Input() lastRow: boolean;\n  @Input() notificationList: HighPriority[];\n  isWeb: boolean;\n  constructor(\n    private utilityService: SharedUtilityService,\n    private route: Router\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n  handleNotificationUrlClick(url: string) {\n    this.route.navigateByUrl(url);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationItemComponent} from './notification-item.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule],\n  declarations: [NotificationItemComponent],\n  exports: [NotificationItemComponent],\n})\nexport class NotificationItemComponentModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {NotificationPage} from './notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationPageRoutingModule} from './notification-routing.module';\nimport {NotificationPage} from './notification.page';\nimport {NotificationItemComponentModule} from './components/notification-item/notification-item.module';\nimport {LoadingComponentModule} from '@shared-lib/components/loading/loading.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationPageRoutingModule,\n    NotificationItemComponentModule,\n    LoadingComponentModule,\n  ],\n  declarations: [NotificationPage],\n  exports: [NotificationPage],\n})\nexport class NotificationPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport * as text from './constants/notification.json';\nimport {Notification} from '@shared-lib/services/notification/models/notification.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {HeaderType} from '../../constants/headerType.enum';\nimport {ActionOptions} from '../../models/ActionOptions.model';\nimport {HeaderTypeService} from '../../services/header-type/header-type.service';\nimport {NotificationService} from '../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-shared-notification',\n  templateUrl: './notification.page.html',\n  styleUrls: ['./notification.page.scss'],\n})\nexport class NotificationPage implements OnInit {\n  pageText: Record<string, string> = JSON.parse(JSON.stringify(text)).default;\n  actionOption: ActionOptions = {\n    headername: this.pageText.pageTitle,\n    btnright: false,\n    btnleft: true,\n    buttonLeft: {\n      name: '',\n      link: 'back',\n    },\n  };\n  notifications: Notification;\n  isWeb: boolean;\n  previousRootPath: string;\n\n  constructor(\n    private footerType: FooterTypeService,\n    private headerType: HeaderTypeService,\n    private notificationService: NotificationService,\n    private sharedUtilityService: SharedUtilityService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n  }\n\n  ngOnInit() {\n    if (this.isWeb) {\n      this.getNotificationData();\n    }\n\n    this.footerType.publish(null);\n    if (this.isWeb) {\n      this.activatedRoute.queryParams.subscribe(data => {\n        this.previousRootPath = data.previousRootPath;\n      });\n    }\n  }\n\n  async getNotificationData() {\n    this.notifications = await this.notificationService.getNotification();\n    this.notificationService.savePageVisit();\n  }\n\n  ionViewWillEnter() {\n    this.getNotificationData();\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.isWeb) {\n      if (this.previousRootPath) {\n        this.footerType.publish({\n          type: FooterType.tabsnav,\n          selectedTab: this.previousRootPath,\n        });\n      } else {\n        this.footerType.publish(null);\n      }\n    } else {\n      this.footerType.publish({type: FooterType.tabsnav});\n    }\n  }\n}\n","export default \"<div *ngIf=\\\"loading\\\">\\n  <ion-spinner [class.center]=\\\"center\\\"></ion-spinner>\\n</div>\\n<div *ngIf=\\\"!loading\\\">\\n  <ng-content></ng-content>\\n</div>\\n\";","export default \"<div [ngClass]=\\\"isWeb ? 'webNotificationItem' : ''\\\">\\n  <ion-item lines=\\\"none\\\" *ngFor=\\\"let notification of notificationList\\\">\\n    <ion-row>\\n      <ion-col size=\\\"auto\\\">\\n        <div class=\\\"dot\\\" [ngClass]=\\\"{dot: true, new: notification.new}\\\"></div>\\n      </ion-col>\\n      <ion-col>\\n        <div class=\\\"mid-text-wrap\\\">\\n          <ion-label class=\\\"item-header\\\">\\n            {{ notification.Title }}\\n          </ion-label>\\n          <p class=\\\"item-desc\\\">\\n            {{ notification.Description }}\\n          </p>\\n          <span\\n            class=\\\"item-link\\\"\\n            *ngIf=\\\"notification.Link_name && notification.Link_url\\\"\\n            (click)=\\\"handleNotificationUrlClick(notification.Link_url)\\\"\\n          >\\n            {{ notification.Link_name }}\\n          </span>\\n        </div>\\n      </ion-col>\\n      <ion-col class=\\\"time-label-col\\\">\\n        <span class=\\\"time-label\\\">{{ notification?.eventAge }}</span>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n</div>\\n\";","export default \"<app-loading [loading]=\\\"notifications == null\\\">\\n  <div [ngClass]=\\\"isWeb? 'webNotifications':''\\\">\\n    <ng-container *ngIf=\\\"isWeb\\\">\\n      <ion-card *ngIf=\\\"notifications?.highPriority.length > 0\\\">\\n        <ng-container *ngTemplateOutlet=\\\"highPriority\\\"> </ng-container>\\n      </ion-card>\\n      <ion-card *ngIf=\\\"notifications?.recent?.length > 0\\\">\\n        <ng-container *ngTemplateOutlet=\\\"recent\\\"> </ng-container>\\n      </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!isWeb\\\">\\n      <ng-container *ngTemplateOutlet=\\\"highPriority\\\"> </ng-container>\\n      <ng-container *ngTemplateOutlet=\\\"recent\\\"> </ng-container>\\n    </ng-container>\\n\\n    <ng-template #highPriority>\\n      <div class=\\\"high-priority\\\" *ngIf=\\\"notifications?.highPriority.length > 0\\\">\\n        <ion-list-header>\\n          <ion-label>{{pageText.highPriority}}</ion-label>\\n        </ion-list-header>\\n        <ion-list scroll=\\\"false\\\">\\n          <ng-container>\\n            <app-notification-item\\n              [notificationList]=\\\"notifications?.highPriority\\\"\\n            ></app-notification-item>\\n          </ng-container>\\n        </ion-list>\\n      </div>\\n    </ng-template>\\n\\n    <ng-template #recent>\\n      <div class=\\\"recent-notifications\\\">\\n        <ion-list-header\\n          class=\\\"recent\\\"\\n          *ngIf=\\\"notifications?.recent?.length > 0\\\"\\n        >\\n          <ion-label>{{pageText.recent}}</ion-label>\\n        </ion-list-header>\\n        <ion-list scroll=\\\"false\\\">\\n          <ng-container>\\n            <app-notification-item\\n              [notificationList]=\\\"notifications?.recent\\\"\\n            ></app-notification-item>\\n          </ng-container>\\n        </ion-list>\\n      </div>\\n    </ng-template>\\n    <ion-card\\n      class=\\\"no-notifications\\\"\\n      *ngIf=\\\"(notifications?.recent?.length === 0) && (notifications?.highPriority?.length === 0)\\\"\\n    >\\n      <ion-text>\\n        You do not have any notifications at this time.\\n      </ion-text>\\n    </ion-card>\\n  </div>\\n</app-loading>\\n\";"],"names":[],"sourceRoot":"webpack:///"}