{"version":3,"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AA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACAC,mBADA,GACAD,IADA;AACAE,kBADA,GACAF,IADA;AACAG,iBADA,GACAH,IADA;AAEAI;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACAC;AACA;;AAEA,oFAAwE;AACxE,+CADwE,CAC7B;;;AAE3C,4BAAsBC,kBAAtB,EAA0CA,MAA1C,EAA0C;AAC1C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACAD;AACA;;AAEAH;AACA;;AAEA;AACA;;AAEA,wBAAkBf,eAAlB,EAAmCA,MAAnC,EAAmC;AACnC;;AAEA;AACA,wBAAkBW,iBAAlB,EAAqCA,MAArC,EAAqC;AACrC;AACA;AACA;;AACAL;AACAS,kCADA;AAEAK;AAFA;;AAIAd;AACA;AACA,WAXA,MAWM;AACN;AACA,wBAAkBK,iBAAlB,EAAqCA,MAArC,EAAqC;AACrC;AACA;AACA;;AACAL;AACAS,kCADA;AAEAK;AAFA;;AAIAd;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AAAA;AAAAO;AAAA;;AACA;AAAA;AAAA;AAAA;;AAEA;AACAC,mBADA,GACAD,IADA;AACAE,kBADA,GACAF,IADA;AACAG,iBADA,GACAH,IADA;AAEAI;AACA;;AAEA;AACA;;AAEA,wBAAkBjB,iBAAlB,EAAqCA,MAArC,EAAqC;AACrC;;AAEA,0BAAoBW,eAApB,EAAqCA,MAArC,EAAqC;AACrC;AACA;;AAEA;AACAU;AACA,aAFA,MAEQ;AACRA;AACA;;AAEA;AACA,gDAA0CF,MAA1C,EAAkDA,MAAlD,EAAkD;AAClD;;AAEA;AACAb;AACAe;AACA,iBAHA,MAGY;AACZf;AACAe;AACA,iBAHY,MAGA;AACZf;AACAe;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AADA;AAAAR;AAAA;;AAEA;AAAA;AAAA;AAAA;;AAEA;AACAS,mBADA,GACAT,IADA;AACAE,kBADA,GACAF,IADA;AACAG,iBADA,GACAH,IADA;AAEAI;AACA;;AAEA;AAAA;AAAAM;AAAA;;AACAR;AACAS;;AAEA;AACA;AACA;AACA;;AAEAC;AACA;AACA;;AAEA;AACA,qBAAiB,wDAAjB;;AADA;AAAAZ;AAAA;;AAEA;AACA;;AAEA,wBAAkBb,iBAAlB,EAAqCA,MAArC,EAAqC;AACrC;;AAEA,0BAAoBW,eAApB,EAAqCA,MAArC,EAAqC;AACrC;;AAEA;AACA;AACAe,iCADA;AAEAC,6BAFA;AAGAC;AAHA;AAKAtB;AAAA;AAAA;AACAA;AACAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACAuB;AACAL;AACA;;AAEA;AACAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACAK;AACAL;AACA;;AAEA;AACAA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACAK;AACAL;AACA;;AAEA;AACAA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAiB,wDAAjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAiB,wDAAjB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,wBAAmB,wDAAnB;;AACA,0BAAqB,0DAArB;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,gDADA;AAEAC;AAFA;AAIA;;AAEA;AACA;;AAEA;AACA,wBAAkB/B,eAAlB,EAAmCA,MAAnC,EAAmC;AACnC;AACA;;AAEA;AACA;;AAEA;AACA,qBAAiB,wDAAjB;;AAEA,wBAAkBA,eAAlB,EAAmCA,MAAnC,EAAmC;AACnC;;AAEA;AACAM;AACA;;AAEA;AACA;AACAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAiB,wDAAjB;AACA;AACA;AACA;;AAEA;AACA,qBAAiB,wDAAjB;AACA;;AAEA;AACA;AACA;AACA;AACA,WAHA,MAGM;AACN;AACA,wBAAkBN,eAAlB,EAAmCA,MAAnC,EAAmC;AACnC;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A;AACA;AACA;AACA;AACA;AACA;AACAxE;;AAEA;AACAyE;AACA;AACA,+BAHA,CAG0B;;AAE1B;AACAC;AACA;AACA;;AAEA;AACAvB;AACA;;AAEA;AACA;AACAK;AACA;;AAEAE;AACA;AACA;AACArE;AACA;AACAyE;AACAa;AACA,iCAIctE,QAJd;AAAA,sBACA+D,YADA,YACAA,YADA;AAAA,sBAEAE,UAFA,YAEAA,UAFA;AAAA,sBAGAD,IAHA,YAGAA,IAHA;AAKAhE;AACA;;AAEA;AACAA;AACAuE;;AAEA;AACAvE;AACAwE;AACA;;AAEA;AACAzB;AACA;AACA;;AAEA;AACApD;AACA;AACA;;AAEAK;AACW,iBAhCX;AAiCS,eApCT;AAqCA,+BAxDA,CAwD0B;;AAE1BL;AACA;;AAEAA;AACA;AACA;AAjKA;;AAqKA;AACA;AACA;;AAEA;;AAEA,wBAAkBD,qBAAlB,EAAyCA,MAAzC,EAAyC;AACzC;AACA+E;AACA,WAFA,MAEM9E;AACN;;AAEA;AACA8E;AACA;;AAEA;AACAA;AACA,SAFA,MAEI;AACJA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,wBAAkB/E,cAAlB,EAAkCA,MAAlC,EAAkC;AAClC;AACA4C;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AAAA;AAAA/B;AAAA;;AACA;AACA,4BAAsBb,eAAtB,EAAuCA,MAAvC,EAAuC;AACvC;AACA,0DAA+C;AAC/CG;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;AAEA;;;AAAA6E,uCAAe7E,EAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACx9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;AACA;AACA,+BACA,uBADA,IAEA,oBAFA,IAGA8E,0BAHA;AAIA;;AACA,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;AACAoO,2BADA;AAEAC,2BAFA;AAGAC,6BAHA;AAIAC;AAJA;AAMAiH,kCAA4B,wDAA5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACAA;AACAA;AACA;AACA;AACA,WAPA,MAOM;AACN;AACA;AACA;;AAEA;AACA,qDAA+C,4DAACc,QAAD,EAACO,EAAD,CAACrB,sBAAD,CAA/C,EAAgD;AAChDA;AACAlM;AACA;AACA;AACA;;AAEA;AACAA;AACA;;AAEA;AACA6E;AACAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACAqH;AACA,WAFA,MAEM;AACN;AACA;AACAnD;AACAmD;AACA;AACA;AACA;;AAEA;AACAlM;AACA;;AAEA;AACA;AACAkM;AACA;AACA;;AAEA;AACAA;AACA;AACA;;AAEA;AACA;AACA;;AAEAlM;;AAEA;AACAgN;AACA;;AAEA;AACAA;AACA;;AAEA;AACA;AACAhN;AACA;;AAEAkM;AACAlM;;AAEA;AACAA;AACA;;AAEAkM,2CAZA,CAYsC;;AAEtC;AACAlM;AACA;;AAEAA;AACA;;AAEAA;AACAkM;AACA;AACArH;AACAK;AACA;AACAlF;AACAkM;AACA;AACA;;AAEA;AACArC;AACA;;AAEA;AACA2D;AACA;AACA,SAHA,MAGI;AACJA;AACA;AACA;;AAEA;AACAR;AACA,SA5Ke,CA4KX;;;AAGJ;AACAd;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA,SAzLe,CAyLX;;;AAGJ;AACA;AACA;AACAA;AACArH;AACAA;AACAqH;AACArH;AACA;AACA;AACA,WATA,MASM;AACNqH;AACA;AACA;AACA;;AAEA,2DA5Me,CA4MuC;;AAEtD;AACAlM;AACAA;AACA;;AAEA;AACAA;AACA,SArNe,CAqNX;;;AAGJA,qDAxNe,CAwNiC;;AAEhDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cC5N6C;;;AAE7C;AAAA;;AACA;AACA,4BAAsB,0DAAtB,IAAiCtI,OAAa,wDAA9C,EAAuD;AACvD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAE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SAC,kCATA;AAUAC,iDAVA;AAWAC,4CAXA;AAYAC,8BAZA;AAaApV;AAbA;AADA;AAiBAQ;AACA6U;AADA;AAGA;;AAEA;AACA;AACA;AACAC;AACAA;AACA;;AAEA;AAAA;;AACA;AAAA;AAAA;;AAEA;AACA;;AAEA;AACA3U;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACA;AACA;AACA,0BAAsB,4DAAC6M,QAAD,CAAtB;;AAEA;AACA;AACAhN;AACA;;AAEA;AACA+U;AACA,aAFA,MAEQ;AACRA;AACA;AACA;;AAEA;AACA;AACA/U;AACA;;AAEA;AACA+U;AACA,aAFA,MAEQ;AACRA;AACA;AACA;;AAEA,gDAA0C,4EAAiB/U,oCAAjB,CAA1C,GAA2D;AAC3DyN;AACA;AACA;;AAEA;AACA;AACA,mCAGMzN,iBAHN;AAAA,cACAgV,OADA,sBACAA,OADA;AAAA,cAEAC,OAFA,sBAEAA,OAFA;;AAKA;AACA;AACAC;AACAC;AACA,aAHA,MAGQ;AACRC;AACAC;AACA;AACA;;AAEA;AACA;AACAH;AACAC;AACA,aAHA,MAGQ;AACRC;AACAC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACArV;AACA,4BAAwB,4DAACsV,QAAD,CAAxB;;AAEA;AACAD;;AAEA;AACAE;AACAC,8FAAqFC,qBAArF;AACA;AACA;;AAEA,wCAA2BzV,0CAA3B,IAAsE;AACtEyV;AACA,aAFA,MAEQ;AACRA;AACA;AACK,WAjBL;AAkBA;;AAEA;AACAJ;;AAEA;AACAE;AACApV;AACA;;AAEAqV;AACAE;AACA,SAVA;;AAYA;AACA1V;AACA,SAFA;;AAIA;AACAV;AACAA;AACA;AACAU;AACA;AACO,aAJP;AAKK,WANL;AAOA,SARA;;AAUA;AACA;AACA,oDAAyCA,wBAAzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAA;AACA,WAFA,MAEM;AACNA;AACA;;AAEAA;AACA,SAhBA;;AAkBA;AACA;;AAEA;AACA2V,iCAA2B,4DAAC3V,aAAD,CAA3B,EAA4BnF,iCAA5B;AACA;;AAEA;AACA0a,sBAAgB,4DAACvV,aAAD,CAAhB,EAAiBnF,gBAAjB;AACA;;AAEA;AAAA;AAAA;;AAEA;AACAmF;AACA,6BAAyB,4DAACuF,OAAD,CAAzB;AACA;AACA,uFAAgFkL,cAAhF,EAAgFmF,OAAhF,CAAgF,sBAAhF,EAAgIC,YAAhI;AACAL;AACO,aALP;AAMA;AACA,SArBA;;AAuBA;AACA;AACAxV,wCAFA,CAEmC;;AAEnC;;AAEA;AACA2V;AACA;;AAEA;AACAH;AACA,WAZA,CAYM;;;AAGN;AACA,yFAA8EM,mBAA9E;AACA;AACAC;AACAC,sCAnBA,CAmBiC;;AAEjCC,uBArBA,CAqBkB;;AAElB;AACA;;AAEA;AACAjB;AACA;;AAEA;AACAC;AACA;;AAEA;AACAiB;AACA;;AAEA;AACAA;AACA,WAxCA,CAwCM;;;AAGN;AACAlW,gDAA0C,4EAAiBA,oCAAjB,CAA1C,EAA2DmW,iBAA3D;AACA,WA7CA,CA6CM;;;AAGNnW;AACAA;AACAA;AACA,SAnDA;;AAqDA;AACA;AACA;AACA;;AAEA;AACAgV;AACA;;AAEA;AACAC;AACA;;AAEA;AACAD;AACA;;AAEA;AACAC;AACA,WAnBA,CAmBM;;;AAGN;AACAjV,iDAA2C,4EAAiBA,oCAAjB,CAA3C,EAA4DmW,iBAA5D;AACA,WAxBA,CAwBM;;;AAGNnW;AACAA;AACAA;AACA;;AAEAmC;AACAiU,uBAAiB,oFAAkBpW,oCAAlB,6DAAjB;AACG,SAFH;AAGAmC;AACA;AACA0E;AACG,SAHH;AAIA1E;AACA;AACA8T;AACG,SAHH;AAIA9T;AACA;AACAkU;AACG,SAHH;AAIAlU;AACA;AACAmU;AACG,SAHH;AAIAnU;AACA;AACAoU;AACG,SAHH;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9VA;;AAEA;;;AAGe,+BAKd;AAAA,YAJDvW,MAIC,SAJDA,MAIC;AAAA,YAHDiC,YAGC,SAHDA,YAGC;AAAA,YAFDE,EAEC,SAFDA,EAEC;AAAA,YADDG,IACC,SADDA,IACC;AACD;AACAtC;AACAwW,wBADA;AAEAC;AAFA;AAIAxU;AACAyU;AACA/T,0BADA;AAEAgU,uBAFA;AAGAC,mCAHA;AAIAC,sCAJA;AAKAC,kCALA;AAMAC,mCANA;AAOAC;AAPA;AADA;;AAYA;AACA;AACAhX;AACAA;AACA;AACA;;AAEA;AACA;;AAEA;AACA2W;AACA;;AAEAvX;AACA6X,oBAAc,4DAAQ;AACtB;;AAEA;AACA;AACAjX;AACAkX;AACA5U;AACA,eAJA,MAIU;AACV4U;AACA5U;AACA,eAHU,MAGA;AACV4U;AACA5U;AACA,eAHU,MAGA;AACVlH;AACA;AACA,aAdA,MAcQ;AACR4E;AACAkX;AACA5U;AACA,aAJQ,MAIA;AACR4U;AACA5U;AACA,aAHQ,MAGA;AACR4U;AACA5U;AACA,aAHQ,MAGA;AACRlH;AACA;;AAEA,6EAAkE;AAClE+b;AACA;AACK,WAlCS,EAkCTR,KAlCS,CAAd;AAmCA;;AAEA;AACA;AACA;AACA3W;AACAsC;AACA6U;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA/X;AACA6X;AACA;;AAEAjX;AACAsC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAtC;;AAEA;AACAA;AACAmX;AACA,WAHA,MAGM;AACN;AACAnX;AACO,aAFP;AAGA;AACA;;AAEA;AACA,yBAAqB,0DAArB;;AAEA;AACAoX;AACA;;AAEA;AACAD;AACAnX;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAA;AACK,WAFL;AAGAA;;AAEA;AACA5E;AACA,WAFA,MAEM;AACN+b;AACA;AACA;;AAEA;AACA;AACA/b;AACA,WAFA,MAEM;AACNkH;AACA8U;AACA;;AAEA;AACApX;AACK,WAFL;AAGA;;AAEA;AACA;AACA;AACA;;AAEAA;AACAsC;AACA6U;AACA;;AAEA;AACA;AACAnX;AACAA;AACA;AACA;;AAEA;AACAA;AACAA;AACA;;AAEAmC;AACA;AACAqB;;AACA,6BAAuB,0DAAvB;;AACAnF;;AACAgZ;AACA;AACG,SAPH;AAQAlV;AACA;AACA;AACAnC;AACA,aAFA,MAEQ;AACR5E;AACA;AACA;AACG,SARH;AASA+G;AACA;AACA;AACA/G;AACA,aAFA,MAEQ;AACRgc;AACA;AACA;AACG,SARH;AASAjV;AACA;AACAgV;AACA;AACG,SAJH;AAKAhV;AACAmV;;AAEA;AACAlc;AACA;;AAEA,yBAAqB,0DAArB;AACAiD;AACG,SATH;AAUA3H;AACA0gB,sBADA;AAEAD,kBAFA;AAGA3T,sBAHA;AAIApI;AAJA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrOA;;;AAEe,iCAId;AAAA,YAHD4E,MAGC,SAHDA,MAGC;AAAA,YAFDiC,YAEC,SAFDA,YAEC;AAAA,YADDE,EACC,SADDA,EACC;AACDF;AACAsV;AACAC,8BADA;AAEAC,0BAFA;AAGAC,uBAHA,CAGA;;AAHA;AADA;AAQA1X;AACAwX;AADA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACAG;AACAC;;AAEA;AACAC;;AAEA;AACAF;AACA,iBAFA,MAEY;AACZC;AACA;AACA;;AAEA;AACA,aAfA;AAgBK,WApBL;;AAsBA;AACA;AACA,wCAzBA,CAyBmC;AACnC;AACA;;AAEA;AACA;;AAEA;AACA,8BADA,CACyB;;AAEzBE;AACAC,wBAJA,CAImB;AACnB;;AAEA;AACA,WARA;;AAUA;AACA,SAxDC,CAwDG;;;AAGJ;AACA;AACA/X;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAgY,wCADA,CACmC;AACnC;;AAEAC;AACA;;AAEA;AACAC;AACAD;AACA;;AAEA;AACAA;AACA;;AAEAE;AACAA;AACAA;AACAA;AACA;;AAEA;AACA,4BAAsB/gB,qBAAtB,EAA6CA,MAA7C,EAA6C;AAC7C;AACAghB;AACA;AACA;AACA,WANA,MAMM;AACNA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACAD;;AAEA;AACAA;;AAEA;AACU,4EA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;AACA;AACA;AACA;AACA;AACAA;AACAA;;AAEA;AACAA;AACA,eAVA,CAUU;AACV;;;AAGA,gCAA0B,2DAAGwd,kBAAH,GAAG,GAA7B,EAA6B;AAC7Bxd;AACA;AACA,aAjBA,MAiBQ;AACRA;AACA;;AAEAA;AACAkM;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAuR;AACA;;AAEAC;AACAC;AACAzR;AACA,eARA,MAQU;AACVuR;AACA;;AAEA;AACA,aAdA,MAcQ;AACR;AACA;AACAA;AACA;;AAEAC;AACAC;AACAzR;AACA,eARA,MAQU;AACVuR;AACA;;AAEA;AACA,aAdQ,MAcA;AACR;;AAEA,8BAAwB1lB,mBAAxB,EAA6CA,MAA7C,EAA6C;AAC7C;AACA+b;AACA;AACA;AACA;;AAEA;AACA2J;AACA,eAFA,MAEU;AACVA;AACA;;AAEAA;AACA;;AAEA;AACArb;AACApC;AACS,eAFT;AAGA,aApFA,CAoFQ;;;AAGR;AACA;AACA4d;AACA,eAFA,MAEU;AACVA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACAA;AACA,iBAFA,MAEY;AACZA;AACA,iBAFY,MAEA;AACZA;AACA;AACA;AACA,aA1BA,MA0BQ;AACR5d;AACA;AACA;;AAEA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAkG;AACA;AACA5D;AACAtC;AACAb;AACAa;AACAkG;AACA;AACAlG;AACa,mBAHb;AAIW,iBANX,EAMW,CANX;AAOS,eAXT;AAYA,aAlBA,MAkBQ;AACRsC;AACAtC;AACAA;AACAA;AACAA;;AAEA;AACAA;AACAkG;AACA;AACAlG;AACW,iBAHX;AAIA;AACA,aAdQ,MAcA;AACRA;AACA;;AAEAA;AACAA;AACA,WA5JA,MA4JM;AACNA;AACA;AACA,WAHM,MAGA;AACNsC;AACA;;AAEA;AACAtC;AACAA;AACAA;AACA;AACA;;AAEAtJ;AACAqmB;AACAc,sCADA;AAEAC,oCAFA;AAGAC;AAHA;AADA;AAOA;;;;;;;;;;;;;;;;;;;;;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CA;AACA;AACA;AACA,qBANA,CAMgB;;AAEhB;AACA,qBATA,CASgB;AAChB;;AAEA;AACAigB;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAC;AACA,WA1BA,CA0BM;;;AAGN;AACAA;AACAD;AACA;;AAEAE;AACAC;;AAEA;AACAA;AACA;;AAEA;AACAD;AACA;;AAEA;AACA;AACAA;AACAC;AACA;;AAEA;AACA;AACA;AACAD;AACAC;AACA,aAJA,MAIQ;AACR;AACAD;AACAC;AACA;AACA,WA7DA,CA6DM;;;AAGN;AACAF;AACA;;AAEA;AACAD;AACA;;AAEA;AACAI,qBADA;AAEAC,qBAFA;AAGAC,sBAHA;AAIAC;AAJA;AAMA;;AAEA;AACA;AACAnjB;AACA;;AAEA;AACA;AACAA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,wDAAkD,2DAAGojB,cAAH,GAAGpjB,sCAArD,EAAqD;AACrD;AACA;AACA,WATA,CASM;AACN;AACA;;;AAGA,qCAA+B,2DAAGojB,cAAH,GAAG,EAAlC,EAAkC;AAClC;AACA;AACA,WAjBA,CAiBM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACApjB;AACAsC;AACA;AACA,WALA,MAKM;AACNtC;AACAsC;AACA,WAvCA,CAuCM;;;AAGN8gB,uDA1CA,CA0CkD;;AAElD;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,WALA,MAKM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACApW;AACA;;AAEA;;AAEA;AACA1Q,qBAAe,4DAAC0D,qCAAD,CAAf;AACA;;AAEA;AACA,mDAjBA,CAiB8C;;AAE9C;AACA;AACA;;AAEA;AACA;AACA,uGAA4F;AAC5F,aAFA,MAEQ,6EAA6E;AACrF,WAJA,MAIM;AACNqjB;AACA;;AAEA;AACA,4CAhCA,CAgCuC;;AAEvC;AACA;AACA,oFApCA,CAoC+E;AAC/E;AACA;AACA;AACA;AACA;AACA;;AAEA7V;AACA;;AAEA;AACA;AACA;AACA1R,oBAAc,wDADd;AAEAunB,oCAFA;AAGAvc,yCAHA;AAIAwc;AAJA,cAFA,CAOS;;AAET;AACAC,wCADA,CACmC;AACnC;;AAEA;AACAA,6CAdA,CAcwC;AACxC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACAC;AACA;AACA,aAJA,MAIQ;AACRA;AACA,aA3BA,CA2BQ;AACR;;;AAGA;AACA;AACA;AACA,WAlCA,MAkCM;AACN;AACA;AACA;AACA;AACA;AACA;AACA1nB,oBAAc,wDADd;AAEAunB,oCAFA;AAGAvc;AAHA;AAKA;;AAEA;AACA2c;;AAEA;AACAzjB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAA;AACAA;AACAA;AACAA;AACAA;;AAEA;AACAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAZ;AACA6X;;AAEA;AACAsM,4CADA,CACuC;AACvC;;AAEA;;AACA;AACAA;;AAEA;AACA;AACAA;AACA,iBAHA,MAGY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAE;AACAF;AACAtM,4BAAsB,4DAAQ;AAC9BjX;AACa,mBAFS,EAET,CAFS,CAAtB,CAVY,CAYO;AACnB;;AAEA;AACA;AACA;AACA;AACAiX,4BAAsB,4DAAQ;AAC9B;AACAwM;AACAF;AACAvjB;AACa,mBALS,EAKT,GALS,CAAtB;AAMA;AACA,eA1EA,CA0EU;;;AAGV,wDA7EA,CA6EmD;;AAEnD,+GA/EA,CA+E0G;;AAE1G;AACA;AACA;;AAEA,wDAA6CgN;AAC7C;AACA;;AAEA;AACA;;AAEA;AACA1Q,qBAAe,4DAAC0D,qCAAD,CAAf;AACA;;AAEA1D;AACAA;AACAA;AACA;;AAEA;AACA;AACA0D;AACA;AACA;;AAEA;AACA0B;AACA1B;AACA;AACA;;AAEA;AACA;AACAA;AACA;AACA;;AAEA;AACA0B;AACA1B;AACA;AACA;;AAEAmC;AACA;AACAyd;AACA;;AAEA;AACG,SANH;AAOAzd;AACA;AACAwd;AACA;;AAEA;AACG,SAN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AAe;AACf;AACS,eAHT;AAIA;AACA;;AAEA;AACAG;AACA;;AAEAA;AACAA;;AAEA;AACAA,mCAAsBtF,oBAAtB,SAA6CA,WAA7C;AACAorB;;AAEA;AACAprB;AACA;AACA;;AAEA;AACAsF;AACA;;AAEA;AACAA,4BAAsB,4EAAiBtF,kBAAjB,CAAtB,EAAuC;AACvCmS;AACA,0BAAoB,4DAAC,IAAD,EAACuD,KAAD,KAACvQ,4BAArB;AACA;AACAA;AACO,aALP;AAMA;;AAEAtJ;AACAyJ,oBADA;AAEAzI;AAFA;;AAKA;AACAyI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAA;AACAA;AACAA;AACA;;AAEA;AACAA,6BAAuB,4EAAiBtF,kBAAjB,CAAvB;AACA;AACA;;AAEAsH;AACA;AACA;AACAyd;AACA,WAHA,MAGM;AACN/Y;AACAmgB;AACA5lB;AACA;AACG,SATH;AAUAe;AACA;AACAf;AACA,WAFA,MAEM;AACNA;AACA;AACG,SANH;AAOAe;AACA;AACAf;AACA;AACG,SAJH;AAKAe;AACA;AACA6kB;AACA5lB;AACA;AACG,SALH;AAMAe;AACA;AACA6kB;AACA5lB;AACA;AACG,SALH;AAMAe;AACAoU;AACG,SAFH;AAGApU;AACA,cACAhC,GADA,GAEMH,iBAFN,CACAG,GADA;;AAIA;AACAA;AACA;AACG,SARH;AASAgC;AACAf;AACG,SAFH;AAGAe;AACA;AACA,cACAhC,GADA,GAEMH,iBAFN,CACAG,GADA;;AAIA,+GAAyG,4DAACgkB,QAAD,EAAC8C,QAAD,CAACjnB,oCAAD,CAAzG,EAA0G;AAC1G;AACA;;AAEA;AACAsC;AACA,aAFA,MAEQ;AACRA;AACA;;AAEAnC;AACA;AACG,SAlBH;;AAoBA;AACAH;;AAEA;AACAA;AACA;;AAEA6G;AACAmgB;AACA5lB;AACA,SAVA;;AAYA;AACApB;;AAEA;AACAA;AACA;;AAEAuW;AACA,SARA;;AAUA7f;AACAipB,wBADA;AAEAC,0BAFA;AAGAoH,wBAHA;AAIA5lB,wBAJA;AAKAyF,oBALA;AAMA0P;AANA;AAQA;;;;;;;;;;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,wEAA2DpB,UAA3D;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEAkB;AACAC;AACA;;AAEA;AACAnB;AACAoB,wGAA2FpB,UAA3F;AACAlE;AACAuF;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA1e;AACAA;AACAA;AACA;;AAEA;AACA;AACA;AACAjO;AACA;;AAEA;AACAiO;AACAA;AACAA,2BAAqB,gEAAYye,uBAAZ,EAAY,GAAZ,KAAY,CAAjC;AACAze,2BAAqB,gEAAYye,uBAAZ,EAAY,GAAZ,KAAY,CAAjC;AACAA;AACAA;AACAA;AACA,WAdA,CAcM;;;AAGN;AACA;AACA;AACAze;AACAA;AACAA;AACAA;AACAA;AACAA;;AAEA;AACA;AACAA;AACA;AACA;;AAEA;AACAA;AACA;AACA;AACA;;AAEA;AACAjB;AACA;;AAEAA;AACAiB;AACAA;AACAA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA;;AAEA;AACAA;AACA,WA9DA,CA8DM;;;AAGN;AACA;AACA;AACA3K;AACAA;AACA;AACA;AACAA;AACAA;AACAA;AACAopB,+DAAkDze,cAAlD,iBAAuEA,cAAvE;AACA;;AAEA;AACA;AACA;;AAEA;AACAA;AACAA;AACA;AACA;;AAEAA;AACAA;AACA;AACA;AACA;AACA;AACA;AACA,gEAjBA,CAiB6D;;AAE7D;AACA;AACA;AACAA;AACAA,wCAvBA,CAuBmC;;AAEnC;AACA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAA;AACAye,4FAA+Eze,cAA/E,iBAAoGA,cAApG;AACA;;AAEA;AACA;;AAEA;AACA;AACAye;AACA;;AAEA;AACAA;AACA;;AAEApB;AACAlE;AACAsF;AACAA;AACAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACAA,iCAA2B,4DAAC1f,QAAD,EAACnT,OAAD,YAAwBmG,wBAAxB,EAA3B;AACA;;AAEA;AACA;AACA0sB,yEAA4D1sB,8BAA5D;AACA,eAFA,MAEU;AACV0sB;A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","names":["Object","get","set","value","proto","Dom7","makeReactive","Array","arr","res","i","a","tempParent","$","classes","classNames","el","length","key","dataset","values","j","duration","args","eventType","listener","capture","targetSelector","eventData","k","proxyListener","handlers","eventName","eventArgs","dom","onceHandler","detail","bubbles","cancelable","callback","top","left","compareWith","newChild","tempDiv","before","after","nextEls","prevEls","parents","parent","closest","foundElements","children","els","easing","currentTop","currentLeft","maxTop","newTop","maxLeft","newLeft","startTime","done","window","props","initialProps","params","initialParams","elements","animating","que","easingProgress","progress","stop","complete","animate","container","initialFullValue","initialValue","unit","finalValue","finalFullValue","currentValue","time","began","easeProgress","propsDone","elementsDone","animateInstance","__webpack_exports__","obj","target","src","isObject","extend","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","childNodes","style","setAttribute","getElementsByTagName","createElementNS","importNode","location","hash","host","hostname","href","origin","pathname","protocol","search","document","navigator","userAgent","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","matchMedia","requestAnimationFrame","cancelAnimationFrame","id","point","points","matches","breakpoint","setBreakpoint","getBreakpoint","activeIndex","swiper","initialized","loopedSlides","$el","breakpointParams","allowTouchMove","allowSlideNext","allowSlidePrev","wasLocked","isLocked","slidesOffsetBefore","checkOverflow","entries","resultClasses","rtl","device","support","addClasses","removeClasses","eventsEmitter","update","translate","transition","slide","loop","grabCursor","events","breakpoints","images","Swiper","each","swipers","mod","extendParams","allModulesParams","on","once","off","emit","_defaults_js__WEBPACK_IMPORTED_MODULE_20__","swiperParams","extendedDefaults","_shared_dom_js__WEBPACK_IMPORTED_MODULE_1__","enabled","slides","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","realIndex","isBeginning","isEnd","previousTranslate","velocity","touchEvents","start","move","end","cancel","touchEventsData","isTouched","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","isTouchEvent","startMoving","allowClick","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","join","updates","slideEl","swiperSize","size","slideSize","spv","setTranslate","translated","newDirection","currentDirection","addClass","getWrapperSelector","$wrapperEl","wrapper","wrapperEl","mounted","rtlTranslate","wrongRTL","newDefaults","modules","module","_modules_resize_resize_js__WEBPACK_IMPORTED_MODULE_6__","_modules_observer_observer_js__WEBPACK_IMPORTED_MODULE_7__","init","direction","touchEventsTarget","initialSlide","speed","cssMode","updateOnWindowResize","resizeObserver","nested","createElements","width","height","preventInteractionOnTransition","url","edgeSwipeDetection","edgeSwipeThreshold","autoHeight","setWrapperSize","virtualTranslate","effect","breakpointsBase","spaceBetween","slidesPerView","slidesPerGroup","slidesPerGroupSkip","slidesPerGroupAuto","centeredSlides","centeredSlidesBounds","slidesOffsetAfter","normalizeSlideIndex","centerInsufficientSlides","watchOverflow","roundLengths","touchRatio","touchAngle","simulateTouch","shortSwipes","longSwipes","longSwipesRatio","longSwipesMs","followFinger","threshold","touchMoveStopPropagation","touchStartPreventDefault","touchStartForcePreventDefault","touchReleaseOnEdges","uniqueNavElements","resistance","resistanceRatio","watchSlidesProgress","preventClicks","preventClicksPropagation","slideToClickedSlide","preloadImages","updateOnImagesReady","loopAdditionalSlides","loopedSlidesLimit","loopFillGroupWithBlank","loopPreventsSlide","rewind","swipeHandler","noSwiping","noSwipingClass","noSwipingSelector","passiveListeners","maxBackfaceHiddenSlides","containerModifierClass","slideClass","slideBlankClass","slideActiveClass","slideDuplicateActiveClass","slideVisibleClass","slideDuplicateClass","slideNextClass","slideDuplicateNextClass","slidePrevClass","slideDuplicatePrevClass","wrapperClass","runCallbacksOnInit","_emitClasses","handler","priority","self","onAny","offAny","data","context","eventsArray","eventHandler","passive","_onResize_js__WEBPACK_IMPORTED_MODULE_4__","_onTouchStart_js__WEBPACK_IMPORTED_MODULE_1__","_onTouchMove_js__WEBPACK_IMPORTED_MODULE_2__","_onTouchEnd_js__WEBPACK_IMPORTED_MODULE_3__","_onScroll_js__WEBPACK_IMPORTED_MODULE_6__","_onClick_js__WEBPACK_IMPORTED_MODULE_5__","dummyEventAttached","attachEvents","detachEvents","e","newProgress","currentPos","stopIndex","groupSize","rewindLastIndex","rewindFirstIndex","is","disableParentSwiper","$targetEl","eventPath","event","preventDefault","setGrabCursor","unsetGrabCursor","loadImage","imageEl","image","onReady","loopCreate","loopFix","loopDestroy","$selector","remove","appendSlides","prependSlides","newIndex","auto","options","observer","attributes","childList","characterData","observers","attach","observeParents","observeSlideChildren","animationFrame","contentBoxSize","contentRect","newWidth","newHeight","resizeHandler","createObserver","removeObserver","slideTo","slideToLoop","slideNext","slidePrev","slideReset","slideToClosest","perGroup","prevSnapIndex","prevSnap","prevIndex","index","previousIndex","slideIndex","targetPosition","side","isH","t","attr","slideToIndex","eq","setTransition","transitionStart","transitionEnd","runCallbacks","step","dir","axis","getTranslate","minTranslate","maxTranslate","translateTo","x","y","z","newTranslate","updateSize","updateSlides","updateAutoHeight","updateSlidesOffset","updateSlidesProgress","updateProgress","updateSlidesClasses","updateActiveIndex","updateClickedSlide","previousRealIndex","previousSnapIndex","snapIndex","activeSlides","slideFound","property","offsetBefore","offsetAfter","marginLeft","marginBottom","marginTop","marginRight","clientWidth","offsetWidth","slidePosition","prevSlideSize","getDirectionLabel","newSlidesGrid","css","allSlidesSize","activeSlide","nextSlide","prevSlide","slideOffset","a11y","notificationClass","prevSlideMessage","nextSlideMessage","firstSlideMessage","lastSlideMessage","paginationBulletMessage","slideLabelMessage","containerMessage","containerRoleDescriptionMessage","itemRoleDescriptionMessage","slideRole","clicked","notification","notify","$nextEl","$prevEl","disableEl","makeElNotFocusable","enableEl","makeElFocusable","bulletEl","addElRole","addElLabel","$bulletEl","addElControls","addElRoleDescription","replace","slidesLength","getRandomNumber","addElId","addElLive","initSlides","initNavEl","onEnterOrSpaceKey","liveRegion","updateNavigation","updatePagination","destroy","running","paused","autoplay","delay","waitForTransition","disableOnInteraction","stopOnLastSlide","reverseDirection","pauseOnMouseEnter","timeout","autoplayResult","run","pause","attachMouseEvents","detachMouseEvents","controller","control","inverse","by","minIndex","maxIndex","guess","i3","i1","getInterpolateFunction","controlledTranslate","multiplier","c","setControlledTranslate","setControlledTransition","removeSpline","cardsEffect","slideShadows","transformEl","rotate","perSlideRotate","perSlideOffset","offset","scale","tXAdd","tY","tX","tZ","scaleString","$shadowEl","$slideEl","$transitionElements","perspective","overwriteParams","coverflowEffect","stretch","depth","modifier","swiperWidth","swiperHeight","translateX","translateY","translateZ","rotateX","rotateY","$shadowBeforeEl","$shadowAfterEl","creativeEffect","limitProgress","shadowPerProgress","progressMultiplier","prev","opacity","next","margin","originalProgress","custom","getTranslateValue","Math","r","translateString","rotateString","allSlides","cubeEffect","shadow","shadowOffset","shadowScale","shadowBefore","shadowAfter","createSlideShadows","browser","$cubeShadowEl","slideAngle","round","tx","tz","ty","wrapperRotate","scale1","scale2","zFactor","recreateShadows","getEffectParams","fadeEffect","crossFade","transform","flipEffect","limitRotation","freeMode","momentum","momentumRatio","momentumBounce","momentumBounceRatio","momentumVelocityRatio","sticky","minimumVelocity","position","lastMoveEvent","newPosition","afterBouncePosition","doBounce","momentumDuration","onTouchStart","onTouchMove","onTouchEnd","grid","rows","fill","slidesPerRow","numFullColumns","slidesNumberEvenToRows","row","column","newSlideOrderIndex","order","updateSlide","updateWrapperSize","hashNavigation","watchState","newHash","onHashChange","setHash","root","keepQuery","paths","scrollToSlide","setHistory","keyboard","onlyInViewport","pageUpDown","inView","handle","enable","disable","lazy","checkInView","loadPrevNext","loadPrevNextAmount","loadOnTransitionStart","scrollingElement","elementClass","loadingClass","loadedClass","preloaderClass","$images","$imageEl","background","$pictureEl","sourceEl","$source","slideOriginalIndex","loadInSlide","load","$scrollElement","scrollHandlerAttached","checkInViewOnLoad","removeClass","appendSlide","_methods_appendSlide_js__WEBPACK_IMPORTED_MODULE_0__","prependSlide","_methods_prependSlide_js__WEBPACK_IMPORTED_MODULE_1__","addSlide","_methods_addSlide_js__WEBPACK_IMPORTED_MODULE_2__","removeSlide","_methods_removeSlide_js__WEBPACK_IMPORTED_MODULE_3__","removeAllSlides","_methods_removeAllSlides_js__WEBPACK_IMPORTED_MODULE_4__","activeIndexBuffer","currentSlide","slidesBuffer","newActiveIndex","slidesIndexes","indexToRemove","mousewheel","releaseOnEdges","invert","forceToAxis","sensitivity","eventsTarget","thresholdDelta","thresholdTime","sY","sX","pX","pY","spinX","spinY","pixelX","pixelY","lastScrollTime","delta","raw","recentWheelEvents","animateSlider","lastEventBeforeSnap","navigation","nextEl","prevEl","hideOnClick","disabledClass","hiddenClass","lockClass","navigationDisabledClass","toggleEl","targetEl","isHidden","pagination","bulletElement","clickable","renderBullet","renderProgressbar","renderFraction","renderCustom","progressbarOpposite","type","dynamicBullets","dynamicMainBullets","formatFractionCurrent","formatFractionTotal","bulletClass","pfx","bulletActiveClass","modifierClass","currentClass","totalClass","progressbarFillClass","progressbarOppositeClass","clickableClass","horizontalClass","verticalClass","paginationDisabledClass","bullets","current","bulletSize","dynamicBulletIndex","firstIndex","lastIndex","midIndex","suffix","bullet","$bullet","setSideBullets","bulletsOffset","text","progressbarDirection","scaleX","scaleY","numberOfBullets","paginationHTML","render","hasClass","parallax","parseInt","currentScale","setTransform","slideProgress","find","parallaxEl","$parallaxEl","scrollbar","dragSize","hide","draggable","snapOnRelease","dragClass","scrollbarDisabledClass","dragEl","$dragEl","newPos","newSize","trackSize","divider","positionRatio","dragStartPos","setDragPosition","dragTimeout","touchEventsTouch","touchEventsDesktop","$swiperEl","enableDraggable","disableDraggable","thumbs","multipleActiveThumbs","autoScrollOffset","slideThumbActiveClass","thumbsContainerClass","clickedSlide","thumbsSwiper","currentIndex","thumbsParams","swiperCreated","thumbsToActivate","thumbActiveClass","currentThumbsIndex","newThumbsIndex","virtual","cache","renderSlide","renderExternal","renderExternalUpdate","addSlidesBefore","addSlidesAfter","from","to","previousFrom","previousTo","previousSlidesGrid","previousOffset","offsetProp","slidesAfter","slidesBefore","slidesToRender","onRendered","appendIndexes","prependIndexes","numberOfNewSlides","$cachedEl","newCache","cssModeTimeout","zoom","maxRatio","minRatio","toggle","containerClass","zoomedSlideClass","slideWidth","slideHeight","$imageWrapEl","minX","minY","maxX","maxY","touchesStart","touchesCurrent","prevPositionX","prevPositionY","prevTime","fakeGestureTouched","fakeGestureMoved","gesture","isScaling","touchX","touchY","offsetX","offsetY","diffX","diffY","imageWidth","imageHeight","scaledWidth","scaledHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomOut","zoomIn","passiveListener","activeListenerWithCapture","getListeners","gesturesEnabled","toggleGestures","zoomToggle","onTransitionEnd","out","checkProps","element","originalParams","shadowClass","$shadowContainer","toggleClass","removeAttr","trigger","outerWidth","outerHeight","styles","html","append","prepend","nextAll","prevAll","filter","dom7__WEBPACK_IMPORTED_MODULE_0__","methodName","writable","requireUpdateOnVirtual","$transitionEndTarget","eventTriggered","isSafari","isWebView","ios","android","screenWidth","screenHeight","ipad","macos","overrides","deviceCached","smoothScroll","touch","supportsPassive","gestures","object","curTransform","transformMatrix","matrix","nextIndex","currentPosition","i0","SwiperComponent_6_ng_template_0_Template","SwiperComponent_7_ng_template_0_Template","SwiperComponent_8_ng_template_0_Template","SwiperComponent_ng_template_11_div_0_div_1_ng_template_1_Template","ctx_r19","slide_r18","_c4","SwiperComponent_ng_template_11_div_0_ng_container_2_ng_template_1_Template","SwiperComponent_ng_template_11_div_0_div_1_Template","SwiperComponent_ng_template_11_div_0_ng_container_2_Template","ctx_r17","SwiperComponent_ng_template_11_div_0_Template","loopSlides_r15","paramsList","o","constructor","prototype","toString","call","slice","isEnabled","val","isShowEl","coerceBooleanProperty","nativeElement","noExtend","keys","indexOf","forEach","__swiper__","ignoreNgOnChanges","setProperty","allowedParams","map","getParams","passedParams","rest","_key","SwiperSlideDirective","template","autoplayDelay","slideData","isActive","isPrev","isNext","isVisible","isDuplicate","_zoom","_classNames","_hasClass","some","className","ɵfac","ɵdir","selectors","inputs","virtualIndex","ngClass","Directive","selector","Input","class","SwiperComponent","_ngZone","elementRef","_changeDetectorRef","_platformId","showNavigation","showPagination","showScrollbar","s__beforeBreakpoint","EventEmitter","s__containerClasses","s__slideClass","s__swiper","s_activeIndexChange","s_afterInit","s_autoplay","s_autoplayStart","s_autoplayStop","s_autoplayPause","s_autoplayResume","s_beforeDestroy","s_beforeInit","s_beforeLoopFix","s_beforeResize","s_beforeSlideChangeStart","s_beforeTransitionStart","s_breakpoint","s_changeDirection","s_click","s_doubleTap","s_doubleClick","s_destroy","s_fromEdge","s_hashChange","s_hashSet","s_imagesReady","s_init","s_keyPress","s_lazyImageLoad","s_lazyImageReady","s_loopFix","s_momentumBounce","s_navigationHide","s_navigationShow","s_navigationPrev","s_navigationNext","s_observerUpdate","s_orientationchange","s_paginationHide","s_paginationRender","s_paginationShow","s_paginationUpdate","s_progress","s_reachBeginning","s_reachEnd","s_realIndexChange","s_resize","s_scroll","s_scrollbarDragEnd","s_scrollbarDragMove","s_scrollbarDragStart","s_setTransition","s_setTranslate","s_slideChange","s_slideChangeTransitionEnd","s_slideChangeTransitionStart","s_slideNextTransitionEnd","s_slideNextTransitionStart","s_slidePrevTransitionEnd","s_slidePrevTransitionStart","s_slideResetTransitionStart","s_slideResetTransitionEnd","s_sliderMove","s_sliderFirstMove","s_slidesLengthChange","s_slidesGridLengthChange","s_snapGridLengthChange","s_snapIndexChange","s_tap","s_toEdge","s_touchEnd","s_touchMove","s_touchMoveOpposite","s_touchStart","s_transitionEnd","s_transitionStart","s_update","s_zoomChange","s_swiper","s_lock","s_unlock","_activeSlides","Subject","containerClasses","slidesChanges","calcLoopedSlides","of","swiperRef","runOutsideAngular","detectChanges","updateVirtualSlides","virtualData","currentVirtualData","_navigation","_a","_b","_c","currentNext","currentPrev","_prevElRef","_pagination","_paginationElRef","_scrollbar","_scrollbarElRef","_virtual","updateSwiper","assign","_setElement","_nextElRef","ref","updateObj","updateInitSwiper","ngOnInit","ngAfterViewInit","childrenSlidesInit","initSwiper","slidesEl","changes","subscribe","destroyed","emitter","_slideClasses","_","updated","dataIndex","getAttribute","virtualSlide","item","_containerClasses","isVirtualEnabled","extendWith","isPlatformBrowser","ngOnChanges","changedParams","currentParams","updateParameter","config","newValue","changeDirection","currentBreakpoint","slidesPerViewParams","breakpointOnlyParams","undefined","isCurrentParamObj","ngOnDestroy","PLATFORM_ID","ɵcmp","contentQueries","dirIndex","_t","ctx","viewQuery","_c0","_c1","_c2","_c3","hostVars","hostBindings","outputs","features","ngContentSelectors","decls","vars","consts","_c5","SwiperComponent_ng_container_1_Template","SwiperComponent_div_2_Template","SwiperComponent_div_3_Template","SwiperComponent_6_Template","SwiperComponent_7_Template","SwiperComponent_8_Template","SwiperComponent_ng_template_11_Template","_r6","_c6","_c7","_c8","directives","pipes","encapsulation","changeDetection","Component","ChangeDetectionStrategy","ViewEncapsulation","decorators","Inject","Output","prevElRef","ViewChild","static","nextElRef","scrollbarElRef","paginationElRef","ContentChildren","descendants","emitDistinctChangesOnly","HostBinding","SwiperModule","ɵmod","declarations","imports","CommonModule","exports","ɵinj","NgModule"],"sources":["webpack:///node_modules/dom7/dom7.esm.js","webpack:///node_modules/ssr-window/ssr-window.esm.js","webpack:///node_modules/swiper/core/breakpoints/getBreakpoint.js","webpack:///node_modules/swiper/core/breakpoints/index.js","webpack:///node_modules/swiper/core/breakpoints/setBreakpoint.js","webpack:///node_modules/swiper/core/check-overflow/index.js","webpack:///node_modules/swiper/core/classes/addClasses.js","webpack:///node_modules/swiper/core/classes/index.js","webpack:///node_modules/swiper/core/classes/removeClasses.js","webpack:///node_modules/swiper/core/core.js","webpack:///node_modules/swiper/core/defaults.js","webpack:///node_modules/swiper/core/events-emitter.js","webpack:///node_modules/swiper/core/events/index.js","webpack:///node_modules/swiper/core/events/onClick.js","webpack:///node_modules/swiper/core/events/onResize.js","webpack:///node_modules/swiper/core/events/onScroll.js","webpack:///node_modules/swiper/core/events/onTouchEnd.js","webpack:///node_modules/swiper/core/events/onTouchMove.js","webpack:///node_modules/swiper/core/events/onTouchStart.js","webpack:///node_modules/swiper/core/grab-cursor/index.js","webpack:///node_modules/swiper/core/grab-cursor/setGrabCursor.js","webpack:///node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","webpack:///node_modules/swiper/core/images/index.js","webpack:///node_modules/swiper/core/images/loadImage.js","webpack:///node_modules/swiper/core/images/preloadImages.js","webpack:///node_modules/swiper/core/loop/index.js","webpack:///node_modules/swiper/core/loop/loopCreate.js","webpack:///node_modules/swiper/core/loop/loopDestroy.js","webpack:///node_modules/swiper/core/loop/loopFix.js","webpack:///node_modules/swiper/core/moduleExtendParams.js","webpack:///node_modules/swiper/core/modules/observer/observer.js","webpack:///node_modules/swiper/core/modules/resize/resize.js","webpack:///node_modules/swiper/core/slide/index.js","webpack:///node_modules/swiper/core/slide/slideNext.js","webpack:///node_modules/swiper/core/slide/slidePrev.js","webpack:///node_modules/swiper/core/slide/slideReset.js","webpack:///node_modules/swiper/core/slide/slideTo.js","webpack:///node_modules/swiper/core/slide/slideToClickedSlide.js","webpack:///node_modules/swiper/core/slide/slideToClosest.js","webpack:///node_modules/swiper/core/slide/slideToLoop.js","webpack:///node_modules/swiper/core/transition/index.js","webpack:///node_modules/swiper/core/transition/setTransition.js","webpack:///node_modules/swiper/core/transition/transitionEmit.js","webpack:///node_modules/swiper/core/transition/transitionEnd.js","webpack:///node_modules/swiper/core/transition/transitionStart.js","webpack:///node_modules/swiper/core/translate/getTranslate.js","webpack:///node_modules/swiper/core/translate/index.js","webpack:///node_modules/swiper/core/translate/maxTranslate.js","webpack:///node_modules/swiper/core/translate/minTranslate.js","webpack:///node_modules/swiper/core/translate/setTranslate.js","webpack:///node_modules/swiper/core/translate/translateTo.js","webpack:///node_modules/swiper/core/update/index.js","webpack:///node_modules/swiper/core/update/updateActiveIndex.js","webpack:///node_modules/swiper/core/update/updateAutoHeight.js","webpack:///node_modules/swiper/core/update/updateClickedSlide.js","webpack:///node_modules/swiper/core/update/updateProgress.js","webpack:///node_modules/swiper/core/update/updateSize.js","webpack:///node_modules/swiper/core/update/updateSlides.js","webpack:///node_modules/swiper/core/update/updateSlidesClasses.js","webpack:///node_modules/swiper/core/update/updateSlidesOffset.js","webpack:///node_modules/swiper/core/update/updateSlidesProgress.js","webpack:///node_modules/swiper/modules/a11y/a11y.js","webpack:///node_modules/swiper/modules/autoplay/autoplay.js","webpack:///node_modules/swiper/modules/controller/controller.js","webpack:///node_modules/swiper/modules/effect-cards/effect-cards.js","webpack:///node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","webpack:///node_modules/swiper/modules/effect-creative/effect-creative.js","webpack:///node_modules/swiper/modules/effect-cube/effect-cube.js","webpack:///node_modules/swiper/modules/effect-fade/effect-fade.js","webpack:///node_modules/swiper/modules/effect-flip/effect-flip.js","webpack:///node_modules/swiper/modules/free-mode/free-mode.js","webpack:///node_modules/swiper/modules/grid/grid.js","webpack:///node_modules/swiper/modules/hash-navigation/hash-navigation.js","webpack:///node_modules/swiper/modules/history/history.js","webpack:///node_modules/swiper/modules/keyboard/keyboard.js","webpack:///node_modules/swiper/modules/lazy/lazy.js","webpack:///node_modules/swiper/modules/manipulation/manipulation.js","webpack:///node_modules/swiper/modules/manipulation/methods/addSlide.js","webpack:///node_modules/swiper/modules/manipulation/methods/appendSlide.js","webpack:///node_modules/swiper/modules/manipulation/methods/prependSlide.js","webpack:///node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","webpack:///node_modules/swiper/modules/manipulation/methods/removeSlide.js","webpack:///node_modules/swiper/modules/mousewheel/mousewheel.js","webpack:///node_modules/swiper/modules/navigation/navigation.js","webpack:///node_modules/swiper/modules/pagination/pagination.js","webpack:///node_modules/swiper/modules/parallax/parallax.js","webpack:///node_modules/swiper/modules/scrollbar/scrollbar.js","webpack:///node_modules/swiper/modules/thumbs/thumbs.js","webpack:///node_modules/swiper/modules/virtual/virtual.js","webpack:///node_modules/swiper/modules/zoom/zoom.js","webpack:///node_modules/swiper/shared/classes-to-selector.js","webpack:///node_modules/swiper/shared/create-element-if-not-defined.js","webpack:///node_modules/swiper/shared/create-shadow.js","webpack:///node_modules/swiper/shared/dom.js","webpack:///node_modules/swiper/shared/effect-init.js","webpack:///node_modules/swiper/shared/effect-target.js","webpack:///node_modules/swiper/shared/effect-virtual-transition-end.js","webpack:///node_modules/swiper/shared/get-browser.js","webpack:///node_modules/swiper/shared/get-device.js","webpack:///node_modules/swiper/shared/get-support.js","webpack:///node_modules/swiper/shared/utils.js","webpack:///node_modules/swiper/swiper.esm.js","webpack:///node_modules/swiper/angular/fesm2015/swiper_angular.mjs"],"sourcesContent":["/**\n * Dom7 4.0.6\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * https://framework7.io/docs/dom7.html\n *\n * Copyright 2023, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: February 2, 2023\n */\nimport { getWindow, getDocument } from 'ssr-window';\n\n/* eslint-disable no-proto */\nfunction makeReactive(obj) {\n  const proto = obj.__proto__;\n  Object.defineProperty(obj, '__proto__', {\n    get() {\n      return proto;\n    },\n\n    set(value) {\n      proto.__proto__ = value;\n    }\n\n  });\n}\n\nclass Dom7 extends Array {\n  constructor(items) {\n    if (typeof items === 'number') {\n      super(items);\n    } else {\n      super(...(items || []));\n      makeReactive(this);\n    }\n  }\n\n}\n\nfunction arrayFlat(arr = []) {\n  const res = [];\n  arr.forEach(el => {\n    if (Array.isArray(el)) {\n      res.push(...arrayFlat(el));\n    } else {\n      res.push(el);\n    }\n  });\n  return res;\n}\nfunction arrayFilter(arr, callback) {\n  return Array.prototype.filter.call(arr, callback);\n}\nfunction arrayUnique(arr) {\n  const uniqueArray = [];\n\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group) => group.toUpperCase());\n}\n\n// eslint-disable-next-line\n\nfunction qsa(selector, context) {\n  if (typeof selector !== 'string') {\n    return [selector];\n  }\n\n  const a = [];\n  const res = context.querySelectorAll(selector);\n\n  for (let i = 0; i < res.length; i += 1) {\n    a.push(res[i]);\n  }\n\n  return a;\n}\n\nfunction $(selector, context) {\n  const window = getWindow();\n  const document = getDocument();\n  let arr = [];\n\n  if (!context && selector instanceof Dom7) {\n    return selector;\n  }\n\n  if (!selector) {\n    return new Dom7(arr);\n  }\n\n  if (typeof selector === 'string') {\n    const html = selector.trim();\n\n    if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n      let toCreate = 'div';\n      if (html.indexOf('<li') === 0) toCreate = 'ul';\n      if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n      if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n      if (html.indexOf('<tbody') === 0) toCreate = 'table';\n      if (html.indexOf('<option') === 0) toCreate = 'select';\n      const tempParent = document.createElement(toCreate);\n      tempParent.innerHTML = html;\n\n      for (let i = 0; i < tempParent.childNodes.length; i += 1) {\n        arr.push(tempParent.childNodes[i]);\n      }\n    } else {\n      arr = qsa(selector.trim(), context || document);\n    } // arr = qsa(selector, document);\n\n  } else if (selector.nodeType || selector === window || selector === document) {\n    arr.push(selector);\n  } else if (Array.isArray(selector)) {\n    if (selector instanceof Dom7) return selector;\n    arr = selector;\n  }\n\n  return new Dom7(arrayUnique(arr));\n}\n\n$.fn = Dom7.prototype;\n\n// eslint-disable-next-line\n\nfunction addClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.add(...classNames);\n  });\n  return this;\n}\n\nfunction removeClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    el.classList.remove(...classNames);\n  });\n  return this;\n}\n\nfunction toggleClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  this.forEach(el => {\n    classNames.forEach(className => {\n      el.classList.toggle(className);\n    });\n  });\n}\n\nfunction hasClass(...classes) {\n  const classNames = arrayFlat(classes.map(c => c.split(' ')));\n  return arrayFilter(this, el => {\n    return classNames.filter(className => el.classList.contains(className)).length > 0;\n  }).length > 0;\n}\n\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  } // Set attrs\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n\n  return this;\n}\n\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction data(key, value) {\n  let el;\n\n  if (typeof value === 'undefined') {\n    el = this[0];\n    if (!el) return undefined; // Get value\n\n    if (el.dom7ElementDataStorage && key in el.dom7ElementDataStorage) {\n      return el.dom7ElementDataStorage[key];\n    }\n\n    const dataKey = el.getAttribute(`data-${key}`);\n\n    if (dataKey) {\n      return dataKey;\n    }\n\n    return undefined;\n  } // Set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n\n  return this;\n}\n\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\n\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n\n  if (el.dataset) {\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      const attr = el.attributes[i];\n\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;else if (dataset[key] === 'true') dataset[key] = true;else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n\n  return dataset;\n}\n\nfunction val(value) {\n  if (typeof value === 'undefined') {\n    // get value\n    const el = this[0];\n    if (!el) return undefined;\n\n    if (el.multiple && el.nodeName.toLowerCase() === 'select') {\n      const values = [];\n\n      for (let i = 0; i < el.selectedOptions.length; i += 1) {\n        values.push(el.selectedOptions[i].value);\n      }\n\n      return values;\n    }\n\n    return el.value;\n  } // set value\n\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n\n  return this;\n}\n\nfunction value(value) {\n  return this.val(value);\n}\n\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transform = transform;\n  }\n\n  return this;\n}\n\nfunction transition(duration) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.transitionDuration = typeof duration !== 'string' ? `${duration}ms` : duration;\n  }\n\n  return this;\n}\n\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);else {\n      const parents = $(target).parents(); // eslint-disable-line\n\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n\n    listener.apply(this, eventData);\n  }\n\n  const events = eventType.split(' ');\n  let j;\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  if (!capture) capture = false;\n  const events = eventType.split(' ');\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\n\nfunction trigger(...args) {\n  const window = getWindow();\n  const events = args[0].split(' ');\n  const eventData = args[1];\n\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n\n      if (window.CustomEvent) {\n        const evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true\n        });\n        el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n        el.dispatchEvent(evt);\n        el.dom7EventData = [];\n        delete el.dom7EventData;\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction transitionStart(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionstart', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionstart', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction transitionEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('transitionend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('transitionend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction animationEnd(callback) {\n  const dom = this;\n\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    dom.off('animationend', fireCallBack);\n  }\n\n  if (callback) {\n    dom.on('animationend', fireCallBack);\n  }\n\n  return this;\n}\n\nfunction width() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\n\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n\n    return this[0].offsetWidth;\n  }\n\n  return null;\n}\n\nfunction height() {\n  const window = getWindow();\n\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\n\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n\n    return this[0].offsetHeight;\n  }\n\n  return null;\n}\n\nfunction offset() {\n  if (this.length > 0) {\n    const window = getWindow();\n    const document = getDocument();\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: box.top + scrollTop - clientTop,\n      left: box.left + scrollLeft - clientLeft\n    };\n  }\n\n  return null;\n}\n\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n\n  return this;\n}\n\nfunction show() {\n  const window = getWindow();\n\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n\n  return this;\n}\n\nfunction styles() {\n  const window = getWindow();\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\n\nfunction css(props, value) {\n  const window = getWindow();\n  let i;\n\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      // .css('width')\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      // .css({ width: '100px' })\n      for (i = 0; i < this.length; i += 1) {\n        for (const prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n\n      return this;\n    }\n  }\n\n  if (arguments.length === 2 && typeof props === 'string') {\n    // .css('width', '100px')\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n\n    return this;\n  }\n\n  return this;\n}\n\nfunction each(callback) {\n  if (!callback) return this;\n  this.forEach((el, index) => {\n    callback.apply(el, [el, index]);\n  });\n  return this;\n}\n\nfunction filter(callback) {\n  const result = arrayFilter(this, callback);\n  return $(result);\n}\n\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n\n  return this;\n}\n\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    return this[0] ? this[0].textContent.trim() : null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n\n  return this;\n}\n\nfunction is(selector) {\n  const window = getWindow();\n  const document = getDocument();\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n    compareWith = $(selector);\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  if (selector === document) {\n    return el === document;\n  }\n\n  if (selector === window) {\n    return el === window;\n  }\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n\n    return false;\n  }\n\n  return false;\n}\n\nfunction index() {\n  let child = this[0];\n  let i;\n\n  if (child) {\n    i = 0; // eslint-disable-next-line\n\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n\n    return i;\n  }\n\n  return undefined;\n}\n\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n\n  if (index > length - 1) {\n    return $([]);\n  }\n\n  if (index < 0) {\n    const returnIndex = length + index;\n    if (returnIndex < 0) return $([]);\n    return $([this[returnIndex]]);\n  }\n\n  return $([this[index]]);\n}\n\nfunction append(...els) {\n  let newChild;\n  const document = getDocument();\n\n  for (let k = 0; k < els.length; k += 1) {\n    newChild = els[k];\n\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\n\nfunction prepend(newChild) {\n  const document = getDocument();\n  let i;\n  let j;\n\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n\n  return this;\n}\n\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\n\nfunction insertBefore(selector) {\n  const before = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\n\nfunction insertAfter(selector) {\n  const after = $(selector);\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\n\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return $([this[0].nextElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (this[0].nextElementSibling) return $([this[0].nextElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n\n    el = next;\n  }\n\n  return $(nextEls);\n}\n\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return $([el.previousElementSibling]);\n      }\n\n      return $([]);\n    }\n\n    if (el.previousElementSibling) return $([el.previousElementSibling]);\n    return $([]);\n  }\n\n  return $([]);\n}\n\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return $([]);\n\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n\n    el = prev;\n  }\n\n  return $(prevEls);\n}\n\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\n\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n\n  return $(parents);\n}\n\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n\n      parent = parent.parentNode;\n    }\n  }\n\n  return $(parents);\n}\n\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n\n  if (typeof selector === 'undefined') {\n    return $([]);\n  }\n\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n\n  return closest;\n}\n\nfunction find(selector) {\n  const foundElements = [];\n\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n\n  return $(foundElements);\n}\n\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].children;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector || $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n\n  return $(children);\n}\n\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n\n  return this;\n}\n\nfunction detach() {\n  return this.remove();\n}\n\nfunction add(...els) {\n  const dom = this;\n  let i;\n  let j;\n\n  for (i = 0; i < els.length; i += 1) {\n    const toAdd = $(els[i]);\n\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom.push(toAdd[j]);\n    }\n  }\n\n  return dom;\n}\n\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n\n      el.textContent = '';\n    }\n  }\n\n  return this;\n}\n\n// eslint-disable-next-line\n\nfunction scrollTo(...args) {\n  const window = getWindow();\n  let [left, top, duration, easing, callback] = args;\n\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n\n  if (typeof easing === 'undefined') easing = 'swing';\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n\n    let scrollLeft; // eslint-disable-line\n\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n\n    if (animateTop) {\n      currentTop = el.scrollTop;\n\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n\n    if (!duration) return;\n\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : 0.5 - Math.cos(progress * Math.PI) / 2;\n      let done;\n      if (animateTop) scrollTop = currentTop + easeProgress * (newTop - currentTop);\n      if (animateLeft) scrollLeft = currentLeft + easeProgress * (newLeft - currentLeft);\n\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      window.requestAnimationFrame(render);\n    }\n\n    window.requestAnimationFrame(render);\n  });\n} // scrollTop(top, duration, easing, callback) {\n\n\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\n\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n\n  const dom = this;\n\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\n// eslint-disable-next-line\n\nfunction animate(initialProps, initialParams) {\n  const window = getWindow();\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing' // or 'linear'\n\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n\n    }, initialParams),\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - Math.cos(progress * Math.PI) / 2;\n      }\n\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n\n      return progress;\n    },\n\n    stop() {\n      if (a.frameId) {\n        window.cancelAnimationFrame(a.frameId);\n      }\n\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n\n    done(complete) {\n      a.animating = false;\n      a.elements.each(el => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n\n      const elements = []; // Define & Cache Initials & Units\n\n      a.elements.each((el, index) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n        elements[index] = {\n          container: el\n        };\n        Object.keys(props).forEach(prop => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue\n          };\n        });\n      });\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress; // let el;\n\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n\n        if (startTime === null) {\n          startTime = time;\n        }\n\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), startTime + params.duration - time < 0 ? 0 : startTime + params.duration - time, startTime);\n        }\n\n        elements.forEach(element => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach(prop => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const {\n              initialValue,\n              finalValue,\n              unit\n            } = el[prop];\n            el[prop].currentValue = initialValue + easeProgress * (finalValue - initialValue);\n            const currentValue = el[prop].currentValue;\n\n            if (finalValue > initialValue && currentValue >= finalValue || finalValue < initialValue && currentValue <= finalValue) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return; // Then call\n\n        a.frameId = window.requestAnimationFrame(render);\n      }\n\n      a.frameId = window.requestAnimationFrame(render);\n      return a;\n    }\n\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = 'resize scroll'.split(' ');\n\nfunction shortcut(name) {\n  function eventHandler(...args) {\n    if (typeof args[0] === 'undefined') {\n      for (let i = 0; i < this.length; i += 1) {\n        if (noTrigger.indexOf(name) < 0) {\n          if (name in this[i]) this[i][name]();else {\n            $(this[i]).trigger(name);\n          }\n        }\n      }\n\n      return this;\n    }\n\n    return this.on(name, ...args);\n  }\n\n  return eventHandler;\n}\n\nconst click = shortcut('click');\nconst blur = shortcut('blur');\nconst focus = shortcut('focus');\nconst focusin = shortcut('focusin');\nconst focusout = shortcut('focusout');\nconst keyup = shortcut('keyup');\nconst keydown = shortcut('keydown');\nconst keypress = shortcut('keypress');\nconst submit = shortcut('submit');\nconst change = shortcut('change');\nconst mousedown = shortcut('mousedown');\nconst mousemove = shortcut('mousemove');\nconst mouseup = shortcut('mouseup');\nconst mouseenter = shortcut('mouseenter');\nconst mouseleave = shortcut('mouseleave');\nconst mouseout = shortcut('mouseout');\nconst mouseover = shortcut('mouseover');\nconst touchstart = shortcut('touchstart');\nconst touchend = shortcut('touchend');\nconst touchmove = shortcut('touchmove');\nconst resize = shortcut('resize');\nconst scroll = shortcut('scroll');\n\nexport default $;\nexport { $, add, addClass, animate, animationEnd, append, appendTo, attr, blur, change, children, click, closest, css, data, dataset, detach, each, empty, eq, filter, find, focus, focusin, focusout, hasClass, height, hide, html, index, insertAfter, insertBefore, is, keydown, keypress, keyup, mousedown, mouseenter, mouseleave, mousemove, mouseout, mouseover, mouseup, next, nextAll, off, offset, on, once, outerHeight, outerWidth, parent, parents, prepend, prependTo, prev, prevAll, prop, remove, removeAttr, removeClass, removeData, resize, scroll, scrollLeft, scrollTo, scrollTop, show, siblings, stop, styles, submit, text, toggleClass, touchend, touchmove, touchstart, transform, transition, transitionEnd, transitionStart, trigger, val, value, width };\n","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n\n  return breakpoint || 'max';\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\n\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\n\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    activeIndex,\n    initialized,\n    loopedSlides = 0,\n    params,\n    $el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return; // Get breakpoint for window width and update parameters\n\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n\n  if (wasMultiRow && !isMultiRow) {\n    $el.removeClass(`${params.containerModifierClass}grid ${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    $el.addClass(`${params.containerModifierClass}grid`);\n\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      $el.addClass(`${params.containerModifierClass}grid-column`);\n    }\n\n    swiper.emitContainerClasses();\n  } // Toggle navigation, pagination, scrollbar\n\n\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate();\n    swiper.updateSlides();\n    swiper.slideTo(activeIndex - loopedSlides + swiper.loopedSlides, 0, false);\n  }\n\n  swiper.emit('breakpoint', breakpointParams);\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\n\nexport default {\n  checkOverflow\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\n\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    $el,\n    device,\n    support\n  } = swiper; // prettier-ignore\n\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'pointer-events': !support.touch\n  }, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  $el.addClass([...classNames].join(' '));\n  swiper.emitContainerClasses();\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","export default function removeClasses() {\n  const swiper = this;\n  const {\n    $el,\n    classNames\n  } = swiper;\n  $el.removeClass(classNames.join(' '));\n  swiper.emitContainerClasses();\n}","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport $ from '../shared/dom.js';\nimport { extend, now, deleteProps } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport images from './images/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes,\n  images\n};\nconst extendedDefaults = {};\n\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    if (params.el && $(params.el).length > 1) {\n      const swipers = [];\n      $(params.el).each(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      }); // eslint-disable-next-line no-constructor-return\n\n      return swipers;\n    } // Swiper Instance\n\n\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    }); // Extend defaults with modules params\n\n    const swiperParams = extend({}, defaults, allModulesParams); // Extend defaults with passed params\n\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params); // add event listeners\n\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    } // Save Dom lib\n\n\n    swiper.$ = $; // Extend Swiper\n\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEvents: function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        const desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3]\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2]\n        };\n        return swiper.support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }(),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper'); // Init\n\n    if (swiper.params.init) {\n      swiper.init();\n    } // Return app instance\n    // eslint-disable-next-line no-constructor-return\n\n\n    return swiper;\n  }\n\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    swiper.emit('enable');\n  }\n\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n\n    swiper.emit('disable');\n  }\n\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.each(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper; // Breakpoints\n\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n\n    let translated;\n\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n\n      if (!translated) {\n        setTranslate();\n      }\n    }\n\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n\n    swiper.$el.removeClass(`${swiper.params.containerModifierClass}${currentDirection}`).addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.each(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n\n    if (swiper.rtl) {\n      swiper.$el.addClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.$el.removeClass(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n\n    swiper.update();\n  }\n\n  mount(el) {\n    const swiper = this;\n    if (swiper.mounted) return true; // Find el\n\n    const $el = $(el || swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return false;\n    }\n\n    el.swiper = swiper;\n\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = $(el.shadowRoot.querySelector(getWrapperSelector())); // Children needs to return slot items\n\n        res.children = options => $el.children(options);\n\n        return res;\n      }\n\n      if (!$el.children) {\n        return $($el).children(getWrapperSelector());\n      }\n\n      return $el.children(getWrapperSelector());\n    }; // Find Wrapper\n\n\n    let $wrapperEl = getWrapper();\n\n    if ($wrapperEl.length === 0 && swiper.params.createElements) {\n      const document = getDocument();\n      const wrapper = document.createElement('div');\n      $wrapperEl = $(wrapper);\n      wrapper.className = swiper.params.wrapperClass;\n      $el.append(wrapper);\n      $el.children(`.${swiper.params.slideClass}`).each(slideEl => {\n        $wrapperEl.append(slideEl);\n      });\n    }\n\n    Object.assign(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box'\n    });\n    return true;\n  }\n\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit'); // Set breakpoint\n\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    } // Add Classes\n\n\n    swiper.addClasses(); // Create loop\n\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    } // Update size\n\n\n    swiper.updateSize(); // Update slides\n\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    } // Set Grab Cursor\n\n\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    } // Slide To Initial Slide\n\n\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    } // Attach events\n\n\n    swiper.attachEvents(); // Init Flag\n\n    swiper.initialized = true; // Emit\n\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      $el,\n      $wrapperEl,\n      slides\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy'); // Init Flag\n\n    swiper.initialized = false; // Detach events\n\n    swiper.detachEvents(); // Destroy loop\n\n    if (params.loop) {\n      swiper.loopDestroy();\n    } // Cleanup styles\n\n\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n\n      if (slides && slides.length) {\n        slides.removeClass([params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass].join(' ')).removeAttr('style').removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy'); // Detach emitter events\n\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      deleteProps(swiper);\n    }\n\n    swiper.destroyed = true;\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n\n    Swiper.installModule(module);\n    return Swiper;\n  }\n\n}\n\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","export default {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopedSlidesLimit: true,\n  loopFillGroupWithBlank: false,\n  loopPreventsSlide: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","/* eslint-disable no-underscore-dangle */\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n\n      handler.apply(self, args);\n    }\n\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n\n    return self;\n  },\n\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n\n    return self;\n  },\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n};","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nlet dummyEventAttached = false;\n\nfunction dummyEventListener() {}\n\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    touchEvents,\n    el,\n    wrapperEl,\n    device,\n    support\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method; // Touch Events\n\n  if (!support.touch) {\n    el[domMethod](touchEvents.start, swiper.onTouchStart, false);\n    document[domMethod](touchEvents.move, swiper.onTouchMove, capture);\n    document[domMethod](touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    const passiveListener = touchEvents.start === 'touchstart' && support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    el[domMethod](touchEvents.start, swiper.onTouchStart, passiveListener);\n    el[domMethod](touchEvents.move, swiper.onTouchMove, support.passiveListener ? {\n      passive: false,\n      capture\n    } : capture);\n    el[domMethod](touchEvents.end, swiper.onTouchEnd, passiveListener);\n\n    if (touchEvents.cancel) {\n      el[domMethod](touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n    }\n  } // Prevent Links Clicks\n\n\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  } // Resize handler\n\n\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n};\n\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    support\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  if (support.touch && !dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n\n  events(swiper, 'on');\n}\n\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\n\nexport default {\n  attachEvents,\n  detachEvents\n};","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return; // Breakpoints\n\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  } // Save locks\n\n\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper; // Disable locks on resize\n\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  } // Return locks after resize\n\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  } // eslint-disable-next-line\n\n\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n\n  data.allowTouchCallbacks = false;\n\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  } // Return Grab Cursor\n\n\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  } // Time diff\n\n\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime; // Tap, doubleTap, Click\n\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  } // Find current slide\n\n\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  } // Find current slide size\n\n\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && e.type !== 'touchmove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n\n  if (!swiper.allowTouchMove) {\n    if (!$(e.target).is(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n\n    return;\n  }\n\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n\n  if (data.isTouchEvent && document.activeElement) {\n    if (e.target === document.activeElement && $(e.target).is(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n\n  if (!data.startMoving) {\n    return;\n  }\n\n  swiper.allowClick = false;\n\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop && !params.cssMode) {\n      swiper.loopFix();\n    }\n\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n\n    data.allowMomentumBounce = false; // Grab Cursor\n\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n\n    swiper.emit('sliderFirstMove', e);\n  }\n\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n\n  if (diff > 0 && data.currentTranslate > swiper.minTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  } // Directions locks\n\n\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  } // Threshold\n\n\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return; // Update active index in free mode\n\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  } // Update progress\n\n\n  swiper.updateProgress(data.currentTranslate); // Update translate\n\n  swiper.setTranslate(data.currentTranslate);\n}","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now } from '../../shared/utils.js'; // Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\n\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n\n    return found || __closestFrom(el.getRootNode().host);\n  }\n\n  return __closestFrom(base);\n}\n\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return; // change target el for shadow root component\n\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== ''; // eslint-disable-next-line\n\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    $targetEl = $(eventPath[0]);\n  }\n\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot); // use closestElement for shadow root element to get the actual closest for nested shadow root element\n\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, $targetEl[0]) : $targetEl.closest(noSwipingSelector)[0])) {\n    swiper.allowClick = true;\n    return;\n  }\n\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY; // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n\n    if ($targetEl.is(data.focusableElements)) {\n      preventDefault = false;\n\n      if ($targetEl[0].nodeName === 'SELECT') {\n        data.isTouched = false;\n      }\n    }\n\n    if (document.activeElement && $(document.activeElement).is(data.focusableElements) && document.activeElement !== $targetEl[0]) {\n      document.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n\n    if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !$targetEl[0].isContentEditable) {\n      e.preventDefault();\n    }\n  }\n\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n\n  swiper.emit('touchStart', e);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (swiper.support.touch || !swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n\n  if (swiper.support.touch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n}","import loadImage from './loadImage.js';\nimport preloadImages from './preloadImages.js';\nexport default {\n  loadImage,\n  preloadImages\n};","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loadImage(imageEl, src, srcset, sizes, checkForComplete, callback) {\n  const window = getWindow();\n  let image;\n\n  function onReady() {\n    if (callback) callback();\n  }\n\n  const isPicture = $(imageEl).parent('picture')[0];\n\n  if (!isPicture && (!imageEl.complete || !checkForComplete)) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n\n      if (sizes) {\n        image.sizes = sizes;\n      }\n\n      if (srcset) {\n        image.srcset = srcset;\n      }\n\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}","export default function preloadImages() {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(imageEl, imageEl.currentSrc || imageEl.getAttribute('src'), imageEl.srcset || imageEl.getAttribute('srcset'), imageEl.sizes || imageEl.getAttribute('sizes'), true, onReady);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function loopCreate() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params,\n    $wrapperEl\n  } = swiper; // Remove duplicated slides\n\n  const $selector = $wrapperEl.children().length > 0 ? $($wrapperEl.children()[0].parentNode) : $wrapperEl;\n  $selector.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n  let slides = $selector.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - slides.length % params.slidesPerGroup;\n\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $selector.append(blankNode);\n      }\n\n      slides = $selector.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n\n  if (swiper.loopedSlides > slides.length && swiper.params.loopedSlidesLimit) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((el, index) => {\n    const slide = $(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n\n  for (let i = 0; i < swiper.loopedSlides; i += 1) {\n    const index = i - Math.floor(i / slides.length) * slides.length;\n    appendSlides.push(slides.eq(index)[0]);\n    prependSlides.unshift(slides.eq(slides.length - index - 1)[0]);\n  }\n\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $selector.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $selector.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params,\n    slides\n  } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}","export default function loopFix() {\n  const swiper = this;\n  swiper.emit('beforeLoopFix');\n  const {\n    activeIndex,\n    slides,\n    loopedSlides,\n    allowSlidePrev,\n    allowSlideNext,\n    snapGrid,\n    rtlTranslate: rtl\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate(); // Fix For Negative Oversliding\n\n  if (activeIndex < loopedSlides) {\n    newIndex = slides.length - loopedSlides * 3 + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  swiper.emit('loopFix');\n}","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getWindow } from 'ssr-window';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n\n  const init = () => {\n    if (!swiper.params.observer) return;\n\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    } // Observe container\n\n\n    attach(swiper.$el[0], {\n      childList: swiper.params.observeSlideChildren\n    }); // Observe wrapper\n\n    attach(swiper.$wrapperEl[0], {\n      attributes: false\n    });\n  };\n\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    animating,\n    enabled,\n    params\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    animating,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return swiper;\n\n  if (params.loop) {\n    if (animating && params.loopPreventsSlide) return false;\n    swiper.loopFix(); // eslint-disable-next-line\n\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n\n  let prevIndex = 0;\n\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index !== 'number' && typeof index !== 'string') {\n    throw new Error(`The 'index' argument cannot have type other than 'number' or 'string'. [${typeof index}] given.`);\n  }\n\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex]; // Normalize slideIndex\n\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  } // Directions locks\n\n\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  } // Update progress\n\n\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset'; // Update Index\n\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex); // Update Height\n\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n\n    swiper.updateSlidesClasses();\n\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n\n    return false;\n  }\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._swiperImmediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n\n    swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n    swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n  }\n\n  return true;\n}","import $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl.children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`).eq(0).index();\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    /**\n     * The `index` argument converted from `string` to `number`.\n     * @type {number}\n     */\n    const indexAsNumber = parseInt(index, 10);\n    /**\n     * Determines whether the `index` argument is a valid `number`\n     * after being converted from the `string` type.\n     * @type {boolean}\n     */\n\n    const isValidNumber = isFinite(indexAsNumber);\n\n    if (!isValidNumber) {\n      throw new Error(`The passed-in 'index' (string) couldn't be converted to 'number'. [${index}] given.`);\n    } // Knowing that the converted `index` is a valid number,\n    // we can update the original argument's value.\n\n\n    index = indexAsNumber;\n  }\n\n  const swiper = this;\n  let newIndex = index;\n\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n\n  swiper.emit(`transition${step}`);\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n\n    swiper.emit(`slideChangeTransition${step}`);\n\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    $wrapperEl\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    $wrapperEl,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y; // Check if we need to update progress\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate; // Update progress\n\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n\n    if (!swiper.animating) {\n      swiper.animating = true;\n\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","export default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid,\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    } // Normalize slideIndex\n\n\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n\n    return;\n  } // Get real index\n\n\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.slides.filter(el => parseInt(el.getAttribute('data-swiper-slide-index'), 10) === index)[0];\n    }\n\n    return swiper.slides.eq(index)[0];\n  }; // Find slides currently in view\n\n\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || $([])).each(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  } // Find new height from highest slide in view\n\n\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  } // Update Height\n\n\n  if (newHeight || newHeight === 0) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}","import $ from '../../shared/dom.js';\nexport default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  let slideIndex;\n\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1; // eslint-disable-next-line\n\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n\n  Object.assign(swiper, {\n    progress,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}","export default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  } // Subtract paddings\n\n\n  width = width - parseInt($el.css('padding-left') || 0, 10) - parseInt($el.css('padding-right') || 0, 10);\n  height = height - parseInt($el.css('padding-top') || 0, 10) - parseInt($el.css('padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    } // prettier-ignore\n\n\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n\n  const params = swiper.params;\n  const {\n    $wrapperEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween; // reset margins\n\n  if (rtl) slides.css({\n    marginLeft: '',\n    marginBottom: '',\n    marginTop: ''\n  });else slides.css({\n    marginRight: '',\n    marginBottom: '',\n    marginTop: ''\n  }); // reset cssMode offsets\n\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', '');\n  }\n\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  } // Calc slides\n\n\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n\n      const slideStyles = getComputedStyle(slide[0]);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? slide.outerWidth(true) : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide[0];\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n\n    slidesSizesGrid.push(slideSize);\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({\n      width: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (params.setWrapperSize) {\n    $wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + params.spaceBetween}px`\n    });\n  }\n\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  } // Remove last grid elements depending on width\n\n\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n\n    snapGrid = newSlidesGrid;\n\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode) return true;\n\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n\n      return true;\n    }).css({\n      [key]: `${spaceBetween}px`\n    });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(swiper.wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.$el.hasClass(backFaceHiddenClass);\n\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.$el.addClass(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.$el.removeClass(backFaceHiddenClass);\n    }\n  }\n}","export default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    $wrapperEl,\n    activeIndex,\n    realIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n  let activeSlide;\n\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  } // Active classes\n\n\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`).addClass(params.slideDuplicateActiveClass);\n    }\n  } // Next Slide\n\n\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  } // Prev Slide\n\n\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicateNextClass);\n    }\n\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl.children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`).addClass(params.slideDuplicatePrevClass);\n    }\n  }\n\n  swiper.emitSlidesClasses();\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}","import $ from '../../shared/dom.js';\nexport default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate; // Visible Slides\n\n  slides.removeClass(params.slideVisibleClass);\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides.eq(i).addClass(params.slideVisibleClass);\n    }\n\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport $ from '../../shared/dom.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  }\n\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n\n  function makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n  }\n\n  function makeElNotFocusable($el) {\n    $el.attr('tabIndex', '-1');\n  }\n\n  function addElRole($el, role) {\n    $el.attr('role', role);\n  }\n\n  function addElRoleDescription($el, description) {\n    $el.attr('aria-roledescription', description);\n  }\n\n  function addElControls($el, controls) {\n    $el.attr('aria-controls', controls);\n  }\n\n  function addElLabel($el, label) {\n    $el.attr('aria-label', label);\n  }\n\n  function addElId($el, id) {\n    $el.attr('id', id);\n  }\n\n  function addElLive($el, live) {\n    $el.attr('aria-live', live);\n  }\n\n  function disableEl($el) {\n    $el.attr('aria-disabled', true);\n  }\n\n  function enableEl($el) {\n    $el.attr('aria-disabled', false);\n  }\n\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const $targetEl = $(e.target);\n\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n\n    if (swiper.pagination && $targetEl.is(classesToSelector(swiper.params.pagination.bulletClass))) {\n      $targetEl[0].click();\n    }\n  }\n\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        disableEl($prevEl);\n        makeElNotFocusable($prevEl);\n      } else {\n        enableEl($prevEl);\n        makeElFocusable($prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        disableEl($nextEl);\n        makeElNotFocusable($nextEl);\n      } else {\n        enableEl($nextEl);\n        makeElFocusable($nextEl);\n      }\n    }\n  }\n\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.each(bulletEl => {\n      const $bulletEl = $(bulletEl);\n\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable($bulletEl);\n\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole($bulletEl, 'button');\n          addElLabel($bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, $bulletEl.index() + 1));\n        }\n      }\n\n      if ($bulletEl.is(`.${swiper.params.pagination.bulletActiveClass}`)) {\n        $bulletEl.attr('aria-current', 'true');\n      } else {\n        $bulletEl.removeAttr('aria-current');\n      }\n    });\n  }\n\n  const initNavEl = ($el, wrapperId, message) => {\n    makeElFocusable($el);\n\n    if ($el[0].tagName !== 'BUTTON') {\n      addElRole($el, 'button');\n      $el.on('keydown', onEnterOrSpaceKey);\n    }\n\n    addElLabel($el, message);\n    addElControls($el, wrapperId);\n  };\n\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription($(swiper.slides), params.itemRoleDescriptionMessage);\n    }\n\n    if (params.slideRole) {\n      addElRole($(swiper.slides), params.slideRole);\n    }\n\n    const slidesLength = swiper.params.loop ? swiper.slides.filter(el => !el.classList.contains(swiper.params.slideDuplicateClass)).length : swiper.slides.length;\n\n    if (params.slideLabelMessage) {\n      swiper.slides.each((slideEl, index) => {\n        const $slideEl = $(slideEl);\n        const slideIndex = swiper.params.loop ? parseInt($slideEl.attr('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel($slideEl, ariaLabelMessage);\n      });\n    }\n  };\n\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.$el.append(liveRegion); // Container\n\n    const $containerEl = swiper.$el;\n\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription($containerEl, params.containerRoleDescriptionMessage);\n    }\n\n    if (params.containerMessage) {\n      addElLabel($containerEl, params.containerMessage);\n    } // Wrapper\n\n\n    const $wrapperEl = swiper.$wrapperEl;\n    const wrapperId = params.id || $wrapperEl.attr('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId($wrapperEl, wrapperId);\n    addElLive($wrapperEl, live); // Slide\n\n    initSlides(); // Navigation\n\n    let $nextEl;\n    let $prevEl;\n\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl && $nextEl.length) {\n      initNavEl($nextEl, wrapperId, params.nextSlideMessage);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      initNavEl($prevEl, wrapperId, params.prevSlideMessage);\n    } // Pagination\n\n\n    if (hasClickablePagination()) {\n      swiper.pagination.$el.on('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n    } // Tab focus\n\n\n    swiper.$el.on('focus', handleFocus, true);\n    swiper.$el.on('pointerdown', handlePointerDown, true);\n    swiper.$el.on('pointerup', handlePointerUp, true);\n  };\n\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let $nextEl;\n    let $prevEl;\n\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n\n    if ($nextEl) {\n      $nextEl.off('keydown', onEnterOrSpaceKey);\n    }\n\n    if ($prevEl) {\n      $prevEl.off('keydown', onEnterOrSpaceKey);\n    } // Pagination\n\n\n    if (hasClickablePagination()) {\n      swiper.pagination.$el.off('keydown', classesToSelector(swiper.params.pagination.bulletClass), onEnterOrSpaceKey);\n    } // Tab focus\n\n\n    swiper.$el.off('focus', handleFocus, true);\n    swiper.$el.off('pointerdown', handlePointerDown, true);\n    swiper.$el.off('pointerup', handlePointerUp, true);\n  }\n\n  on('beforeInit', () => {\n    liveRegion = $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`);\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { nextTick } from '../../shared/utils.js';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  let timeout;\n  swiper.autoplay = {\n    running: false,\n    paused: false\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n\n  function run() {\n    if (!swiper.size) {\n      swiper.autoplay.running = false;\n      swiper.autoplay.paused = false;\n      return;\n    }\n\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n\n    clearTimeout(timeout);\n    timeout = nextTick(() => {\n      let autoplayResult;\n\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          autoplayResult = swiper.slidePrev(swiper.params.speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          autoplayResult = swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          emit('autoplay');\n        } else {\n          stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.isEnd) {\n        autoplayResult = swiper.slideNext(swiper.params.speed, true, true);\n        emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        autoplayResult = swiper.slideTo(0, swiper.params.speed, true, true);\n        emit('autoplay');\n      } else {\n        stop();\n      }\n\n      if (swiper.params.cssMode && swiper.autoplay.running) run();else if (autoplayResult === false) {\n        run();\n      }\n    }, delay);\n  }\n\n  function start() {\n    if (typeof timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    emit('autoplayStart');\n    run();\n    return true;\n  }\n\n  function stop() {\n    if (!swiper.autoplay.running) return false;\n    if (typeof timeout === 'undefined') return false;\n\n    if (timeout) {\n      clearTimeout(timeout);\n      timeout = undefined;\n    }\n\n    swiper.autoplay.running = false;\n    emit('autoplayStop');\n    return true;\n  }\n\n  function pause(speed) {\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (timeout) clearTimeout(timeout);\n    swiper.autoplay.paused = true;\n\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      run();\n    } else {\n      ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n        swiper.$wrapperEl[0].addEventListener(event, onTransitionEnd);\n      });\n    }\n  }\n\n  function onVisibilityChange() {\n    const document = getDocument();\n\n    if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n      pause();\n    }\n\n    if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n      run();\n      swiper.autoplay.paused = false;\n    }\n  }\n\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n    if (e.target !== swiper.$wrapperEl[0]) return;\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n    swiper.autoplay.paused = false;\n\n    if (!swiper.autoplay.running) {\n      stop();\n    } else {\n      run();\n    }\n  }\n\n  function onMouseEnter() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n    } else {\n      emit('autoplayPause');\n      pause();\n    }\n\n    ['transitionend', 'webkitTransitionEnd'].forEach(event => {\n      swiper.$wrapperEl[0].removeEventListener(event, onTransitionEnd);\n    });\n  }\n\n  function onMouseLeave() {\n    if (swiper.params.autoplay.disableOnInteraction) {\n      return;\n    }\n\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n    run();\n  }\n\n  function attachMouseEvents() {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.$el.on('mouseenter', onMouseEnter);\n      swiper.$el.on('mouseleave', onMouseLeave);\n    }\n  }\n\n  function detachMouseEvents() {\n    swiper.$el.off('mouseenter', onMouseEnter);\n    swiper.$el.off('mouseleave', onMouseLeave);\n  }\n\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      start();\n      const document = getDocument();\n      document.addEventListener('visibilitychange', onVisibilityChange);\n      attachMouseEvents();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.autoplay.running) {\n      if (internal || !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.pause(speed);\n      } else {\n        stop();\n      }\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.autoplay.running) {\n      if (swiper.params.autoplay.disableOnInteraction) {\n        stop();\n      } else {\n        pause();\n      }\n    }\n  });\n  on('touchEnd', () => {\n    if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n      run();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n\n    if (swiper.autoplay.running) {\n      stop();\n    }\n\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  });\n  Object.assign(swiper.autoplay, {\n    pause,\n    run,\n    start,\n    stop\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n\n    }\n  });\n  swiper.controller = {\n    control: undefined\n  };\n\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n\n        return maxIndex;\n      };\n    }();\n\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1; // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0; // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1; // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n\n    return this;\n  } // xxx: for now i will just save one spline function to to\n\n\n  function getInterpolateFunction(c) {\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  }\n\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c); // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n\n      if (duration !== 0) {\n        c.transitionStart();\n\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n\n          c.transitionEnd();\n        });\n      }\n    }\n\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n\n  on('beforeInit', () => {\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      transformEl: null,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = $slideEl[0].swiperSlideOffset;\n\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.$wrapperEl.transform(`translateX(${swiper.minTranslate()}px)`);\n      }\n\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowEl = $slideEl.find('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) $shadowEl[0].style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.cardsEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth; // Each slide offset from center\n\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier; // var rotateZ = 0\n\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch; // Allow percentage to make a relative stretch for responsive sliders\n\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier); // Fix for ultra small values\n\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = createShadow(params, $slideEl, isHorizontal ? 'left' : 'top');\n        }\n\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = createShadow(params, $slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.coverflowEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n  };\n\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      transformEl: null,\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      $wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      $wrapperEl.transform(`translateX(calc(50% - ${margin}px))`);\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideProgress = $slideEl[0].progress;\n      const progress = Math.min(Math.max($slideEl[0].progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max($slideEl[0].originalProgress, -params.limitProgress), params.limitProgress);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      } // set translate\n\n\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      }); // set rotates\n\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`; // Set shadows\n\n      if (custom && data.shadow || !custom) {\n        let $shadowEl = $slideEl.children('.swiper-slide-shadow');\n\n        if ($shadowEl.length === 0 && data.shadow) {\n          $shadowEl = createShadow(params, $slideEl);\n        }\n\n        if ($shadowEl.length) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          $shadowEl[0].style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform).css({\n        opacity: opacityString\n      });\n\n      if (data.origin) {\n        $targetEl.css('transform-origin', data.origin);\n      }\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.creativeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import $ from '../../shared/dom.js';\nimport effectInit from '../../shared/effect-init.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n      $slideEl.append(shadowBefore);\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n      $slideEl.append(shadowAfter);\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.each(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows($(slideEl), progress, isHorizontal);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      $wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n\n        $cubeShadowEl.css({\n          height: `${swiperWidth}px`\n        });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n\n      $slideEl.transform(transform);\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, isHorizontal);\n      }\n    }\n\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n\n    const zFactor = browser.isSafari || browser.isWebView ? -swiperSize / 2 : 0;\n    $wrapperEl.transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n    $wrapperEl[0].style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n\n  const setTransition = duration => {\n    const {\n      $el,\n      slides\n    } = swiper;\n    slides.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  };\n\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false,\n      transformEl: null\n    }\n  });\n\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs($slideEl[0].progress), 0) : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.css({\n        opacity: slideOpacity\n      }).transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.fadeEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl,\n      allSlides: true\n    });\n  };\n\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import $ from '../../shared/dom.js';\nimport createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n      transformEl: null\n    }\n  });\n\n  const createSlideShadows = ($slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n\n    if (shadowBefore.length === 0) {\n      shadowBefore = createShadow(params, $slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n\n    if (shadowAfter.length === 0) {\n      shadowAfter = createShadow(params, $slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n\n    if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n    if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n  };\n\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.each(slideEl => {\n      const $slideEl = $(slideEl);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n\n      createSlideShadows($slideEl, progress, params);\n    });\n  };\n\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (params.slideShadows) {\n        createSlideShadows($slideEl, progress, params);\n      }\n\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const $targetEl = effectTarget(params, $slideEl);\n      $targetEl.transform(transform);\n    }\n  };\n\n  const setTransition = duration => {\n    const {\n      transformEl\n    } = swiper.params.flipEffect;\n    const $transitionElements = transformEl ? swiper.slides.find(transformEl) : swiper.slides;\n    $transitionElements.transition(duration).find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').transition(duration);\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformEl\n    });\n  };\n\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper; // Velocity\n\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      $wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper; // Time diff\n\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n\n      return;\n    }\n\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n\n        newPosition = -newPosition;\n      }\n\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid; // Set slides order\n\n    let newSlideOrderIndex;\n    let column;\n    let row;\n\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.css({\n        '-webkit-order': newSlideOrderIndex,\n        order: newSlideOrderIndex\n      });\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n\n    slide.css(getDirectionLabel('margin-top'), row !== 0 ? spaceBetween && `${spaceBetween}px` : '');\n  };\n\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.$wrapperEl.css({\n      [getDirectionLabel('width')]: `${swiper.virtualSize + spaceBetween}px`\n    });\n\n    if (centeredSlides) {\n      snapGrid.splice(0, snapGrid.length);\n      const newSlidesGrid = [];\n\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false\n    }\n  });\n\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || '');\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n\n    if (hash) {\n      const speed = 0;\n\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', onHashChange);\n    }\n  };\n\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', onHashChange);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n\n    const slide = swiper.slides.eq(index);\n    let value = slugify(slide.attr('data-history'));\n\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key}/${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n\n    const currentState = window.history.state;\n\n    if (currentState && currentState.value === value) {\n      return;\n    }\n\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = slugify(slide.attr('data-history'));\n\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) return;\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  const destroy = () => {\n    const window = getWindow();\n\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40; // Directions locks\n\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false; // Check that swiper should be inside of visible area of window\n\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n\n      const $el = swiper.$el;\n      const swiperWidth = $el[0].clientWidth;\n      const swiperHeight = $el[0].clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n          inView = true;\n        }\n      }\n\n      if (!inView) return undefined;\n    }\n\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n\n    emit('keyPress', kc);\n    return undefined;\n  }\n\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    $(document).on('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    $(document).off('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nexport default function Lazy({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    lazy: {\n      checkInView: false,\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n      scrollingElement: '',\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader'\n    }\n  });\n  swiper.lazy = {};\n  let scrollHandlerAttached = false;\n  let initialImageLoaded = false;\n\n  function loadInSlide(index, loadInDuplicate = true) {\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    const $slideEl = isVirtual ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`) : swiper.slides.eq(index);\n    const $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images.push($slideEl[0]);\n    }\n\n    if ($images.length === 0) return;\n    $images.each(imageEl => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n      const $pictureEl = $imageEl.parent('picture');\n      swiper.loadImage($imageEl[0], src || background, srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper && !swiper.params || swiper.destroyed) return;\n\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n\n          if ($pictureEl.length) {\n            $pictureEl.children('source').each(sourceEl => {\n              const $source = $(sourceEl);\n\n              if ($source.attr('data-srcset')) {\n                $source.attr('srcset', $source.attr('data-srcset'));\n                $source.removeAttr('data-srcset');\n              }\n            });\n          }\n\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n\n        emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n\n        if (swiper.params.autoHeight) {\n          swiper.updateAutoHeight();\n        }\n      });\n      emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  }\n\n  function load() {\n    const {\n      $wrapperEl,\n      params: swiperParams,\n      slides,\n      activeIndex\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n    let slidesPerView = swiperParams.slidesPerView;\n\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n\n      return false;\n    }\n\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n\n      return $(slideEl).index();\n    }\n\n    if (!initialImageLoaded) initialImageLoaded = true;\n\n    if (swiper.params.watchSlidesProgress) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each(slideEl => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) loadInSlide(i);\n      }\n    } else {\n      loadInSlide(activeIndex);\n    }\n\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || params.loadPrevNextAmount && params.loadPrevNextAmount > 1) {\n        const amount = params.loadPrevNextAmount;\n        const spv = Math.ceil(slidesPerView);\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0); // Next Slides\n\n        for (let i = activeIndex + spv; i < maxIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        } // Prev Slides\n\n\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) loadInSlide(slideIndex(nextSlide));\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  }\n\n  function checkInViewOnLoad() {\n    const window = getWindow();\n    if (!swiper || swiper.destroyed) return;\n    const $scrollElement = swiper.params.lazy.scrollingElement ? $(swiper.params.lazy.scrollingElement) : $(window);\n    const isWindow = $scrollElement[0] === window;\n    const scrollElementWidth = isWindow ? window.innerWidth : $scrollElement[0].offsetWidth;\n    const scrollElementHeight = isWindow ? window.innerHeight : $scrollElement[0].offsetHeight;\n    const swiperOffset = swiper.$el.offset();\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let inView = false;\n    if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n    const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiper.width, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiper.height], [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height]];\n\n    for (let i = 0; i < swiperCoord.length; i += 1) {\n      const point = swiperCoord[i];\n\n      if (point[0] >= 0 && point[0] <= scrollElementWidth && point[1] >= 0 && point[1] <= scrollElementHeight) {\n        if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n\n        inView = true;\n      }\n    }\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && swiper.support.passiveListener && swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n\n    if (inView) {\n      load();\n      $scrollElement.off('scroll', checkInViewOnLoad, passiveListener);\n    } else if (!scrollHandlerAttached) {\n      scrollHandlerAttached = true;\n      $scrollElement.on('scroll', checkInViewOnLoad, passiveListener);\n    }\n  }\n\n  on('beforeInit', () => {\n    if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n      swiper.params.preloadImages = false;\n    }\n  });\n  on('init', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('scroll', () => {\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.freeMode.sticky) {\n      load();\n    }\n  });\n  on('scrollbarDragMove resize _freeModeNoMomentumRelease', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('transitionStart', () => {\n    if (swiper.params.lazy.enabled) {\n      if (swiper.params.lazy.loadOnTransitionStart || !swiper.params.lazy.loadOnTransitionStart && !initialImageLoaded) {\n        if (swiper.params.lazy.checkInView) {\n          checkInViewOnLoad();\n        } else {\n          load();\n        }\n      }\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n      if (swiper.params.lazy.checkInView) {\n        checkInViewOnLoad();\n      } else {\n        load();\n      }\n    }\n  });\n  on('slideChange', () => {\n    const {\n      lazy,\n      cssMode,\n      watchSlidesProgress,\n      touchReleaseOnEdges,\n      resistanceRatio\n    } = swiper.params;\n\n    if (lazy.enabled && (cssMode || watchSlidesProgress && (touchReleaseOnEdges || resistanceRatio === 0))) {\n      load();\n    }\n  });\n  on('destroy', () => {\n    if (!swiper.$el) return;\n    swiper.$el.find(`.${swiper.params.lazy.loadingClass}`).removeClass(swiper.params.lazy.loadingClass);\n  });\n  Object.assign(swiper.lazy, {\n    load,\n    loadInSlide\n  });\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  const baseLength = swiper.slides.length;\n\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    $wrapperEl,\n    params\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n\n  let newActiveIndex = activeIndex + 1;\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n\n  swiper.removeSlide(slidesIndexes);\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    $wrapperEl,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!params.observer) {\n    swiper.update();\n  }\n\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n    // Legacy\n\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    } // side scrolling on FF with DOMMouseScroll\n\n\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    } // Fall-back if spin cannot be determined\n\n\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    } // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n\n\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    } // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n\n\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    } // If you got here is because an animation has been triggered so store the current time\n\n\n    lastScrollTime = new window.Date().getTime(); // Return false as a default\n\n    return false;\n  }\n\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n\n    return false;\n  }\n\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    let target = swiper.$el;\n\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n\n    if (!swiper.mouseEntered && !target[0].contains(e.target) && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta; // Get the scroll positions\n\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate(); // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      }; // Keep the most recent events\n\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent); // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      } // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n\n\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        } // Emit event\n\n\n        if (!ignoreWheelEvents) emit('scroll', e); // Stop autoplay\n\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop(); // Return page scroll on edge positions\n\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n\n  function events(method) {\n    let target = swiper.$el;\n\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarget);\n    }\n\n    target[method]('mouseenter', handleMouseEnter);\n    target[method]('mouseleave', handleMouseLeave);\n    target[method]('wheel', handle);\n  }\n\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n\n    if (swiper.mousewheel.enabled) return false;\n    events('on');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n\n    if (!swiper.mousewheel.enabled) return false;\n    events('off');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport $ from '../../shared/dom.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    $nextEl: null,\n    prevEl: null,\n    $prevEl: null\n  };\n\n  function getEl(el) {\n    let $el;\n\n    if (el) {\n      $el = $(el);\n\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && $el.length > 1 && swiper.$el.find(el).length === 1) {\n        $el = swiper.$el.find(el);\n      }\n    }\n\n    return $el;\n  }\n\n  function toggleEl($el, disabled) {\n    const params = swiper.params.navigation;\n\n    if ($el && $el.length > 0) {\n      $el[disabled ? 'addClass' : 'removeClass'](params.disabledClass);\n      if ($el[0] && $el[0].tagName === 'BUTTON') $el[0].disabled = disabled;\n\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n      }\n    }\n  }\n\n  function update() {\n    // Update Navigation Buttons\n    if (swiper.params.loop) return;\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    toggleEl($prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl($nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    const $nextEl = getEl(params.nextEl);\n    const $prevEl = getEl(params.prevEl);\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', onNextClick);\n    }\n\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', onPrevClick);\n    }\n\n    Object.assign(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0]\n    });\n\n    if (!swiper.enabled) {\n      if ($nextEl) $nextEl.addClass(params.lockClass);\n      if ($prevEl) $prevEl.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n\n    if ($nextEl) {\n      $nextEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n\n    if ($prevEl) {\n      $prevEl[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.navigation.lockClass);\n    }\n  });\n  on('click', (_s, e) => {\n    const {\n      $nextEl,\n      $prevEl\n    } = swiper.navigation;\n    const targetEl = e.target;\n\n    if (swiper.params.navigation.hideOnClick && !$(targetEl).is($prevEl) && !$(targetEl).is($nextEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n\n      if ($nextEl) {\n        isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n      } else if ($prevEl) {\n        isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n\n      if ($nextEl) {\n        $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n\n      if ($prevEl) {\n        $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n      }\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.navigation.navigationDisabledClass);\n    init();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.navigation.navigationDisabledClass);\n    destroy();\n  };\n\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import $ from '../../shared/dom.js';\nimport classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    $el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0;\n  }\n\n  function setSideBullets($bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    $bulletEl[position]().addClass(`${bulletActiveClass}-${position}`)[position]().addClass(`${bulletActiveClass}-${position}-${position}`);\n  }\n\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el; // Current/Total\n\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n\n      if (current > slidesLength - 1 - swiper.loopedSlides * 2) {\n        current -= slidesLength - swiper.loopedSlides * 2;\n      }\n\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    } // Types\n\n\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n\n      if (params.dynamicBullets) {\n        bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${bulletSize * (params.dynamicMainBullets + 4)}px`);\n\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex - swiper.loopedSlides || 0);\n\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n\n      bullets.removeClass(['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`).join(' '));\n\n      if ($el.length > 1) {\n        bullets.each(bullet => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n\n            if (bulletIndex === firstIndex) {\n              setSideBullets($bullet, 'prev');\n            }\n\n            if (bulletIndex === lastIndex) {\n              setSideBullets($bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              setSideBullets($firstDisplayedBullet, 'prev');\n              setSideBullets($lastDisplayedBullet, 'next');\n            }\n          } else {\n            setSideBullets($firstDisplayedBullet, 'prev');\n            setSideBullets($lastDisplayedBullet, 'next');\n          }\n        }\n      }\n\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n\n    if (params.type === 'fraction') {\n      $el.find(classesToSelector(params.currentClass)).text(params.formatFractionCurrent(current + 1));\n      $el.find(classesToSelector(params.totalClass)).text(params.formatFractionTotal(total));\n    }\n\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n\n      $el.find(classesToSelector(params.progressbarFillClass)).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      emit('paginationRender', $el[0]);\n    } else {\n      emit('paginationUpdate', $el[0]);\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      $el[swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  }\n\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - swiper.loopedSlides * 2) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && !swiper.params.loop && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(classesToSelector(params.bulletClass));\n    }\n\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n\n      $el.html(paginationHTML);\n    }\n\n    if (params.type !== 'custom') {\n      emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  }\n\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1) {\n      $el = swiper.$el.find(params.el); // check if it belongs to another nested Swiper\n\n      if ($el.length > 1) {\n        $el = $el.filter(el => {\n          if ($(el).parents('.swiper')[0] !== swiper.el) return false;\n          return true;\n        });\n      }\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n    $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      dynamicBulletIndex = 0;\n\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', classesToSelector(params.bulletClass), function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Object.assign(swiper.pagination, {\n      $el,\n      el: $el[0]\n    });\n\n    if (!swiper.enabled) {\n      $el.addClass(params.lockClass);\n    }\n  }\n\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const $el = swiper.pagination.$el;\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    if (swiper.pagination.bullets && swiper.pagination.bullets.removeClass) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n\n    if (params.clickable) {\n      $el.off('click', classesToSelector(params.bulletClass));\n    }\n  }\n\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (swiper.params.loop) {\n      update();\n    } else if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    if (!swiper.params.loop) {\n      update();\n    }\n  });\n  on('slidesLengthChange', () => {\n    if (swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('snapGridLengthChange', () => {\n    if (!swiper.params.loop) {\n      render();\n      update();\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    const {\n      $el\n    } = swiper.pagination;\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.pagination.lockClass);\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    const {\n      $el\n    } = swiper.pagination;\n\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && $el && $el.length > 0 && !$(targetEl).hasClass(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = $el.hasClass(swiper.params.pagination.hiddenClass);\n\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n\n      $el.toggleClass(swiper.params.pagination.hiddenClass);\n    }\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.removeClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    init();\n    render();\n    update();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n\n    if (swiper.pagination.$el) {\n      swiper.pagination.$el.addClass(swiper.params.pagination.paginationDisabledClass);\n    }\n\n    destroy();\n  };\n\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","import $ from '../../shared/dom.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      $el[0].style.opacity = currentOpacity;\n    }\n\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  };\n\n  const setTranslate = () => {\n    const {\n      $el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n      setTransform(el, progress);\n    });\n    slides.each((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(el => {\n        setTransform(el, slideProgress);\n      });\n    });\n  };\n\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      $el\n    } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').each(parallaxEl => {\n      const $parallaxEl = $(parallaxEl);\n      let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      $parallaxEl.transition(parallaxDuration);\n    });\n  };\n\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getDocument } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null,\n    $el: null,\n    $dragEl: null\n  };\n\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl,\n      progress\n    } = swiper;\n    const {\n      $dragEl,\n      $el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n\n    if (rtl) {\n      newPos = -newPos;\n\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n\n    if (params.hide) {\n      clearTimeout(timeout);\n      $el[0].style.opacity = 1;\n      timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  }\n\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  }\n\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      $dragEl,\n      $el\n    } = scrollbar;\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.$el[swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n    }\n  }\n\n  function getPointerPosition(e) {\n    if (swiper.isHorizontal()) {\n      return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientX : e.clientX;\n    }\n\n    return e.type === 'touchstart' || e.type === 'touchmove' ? e.targetTouches[0].clientY : e.clientY;\n  }\n\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      $el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el,\n      $dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === $dragEl[0] || e.target === $dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    $el.transition(0);\n\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n\n    emit('scrollbarDragStart', e);\n  }\n\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el,\n      $dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    emit('scrollbarDragMove', e);\n  }\n\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      $wrapperEl\n    } = swiper;\n    const {\n      $el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n\n    emit('scrollbarDragEnd', e);\n\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n\n  function events(method) {\n    const {\n      scrollbar,\n      touchEventsTouch,\n      touchEventsDesktop,\n      params,\n      support\n    } = swiper;\n    const $el = scrollbar.$el;\n    if (!$el) return;\n    const target = $el[0];\n    const activeListener = support.passiveListener && params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = support.passiveListener && params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n\n    if (!support.touch) {\n      target[eventMethod](touchEventsDesktop.start, onDragStart, activeListener);\n      document[eventMethod](touchEventsDesktop.move, onDragMove, activeListener);\n      document[eventMethod](touchEventsDesktop.end, onDragEnd, passiveListener);\n    } else {\n      target[eventMethod](touchEventsTouch.start, onDragStart, activeListener);\n      target[eventMethod](touchEventsTouch.move, onDragMove, activeListener);\n      target[eventMethod](touchEventsTouch.end, onDragEnd, passiveListener);\n    }\n  }\n\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n\n  function init() {\n    const {\n      scrollbar,\n      $el: $swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let $el = $(params.el);\n\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    $el.addClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Object.assign(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0]\n    });\n\n    if (params.draggable) {\n      enableDraggable();\n    }\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  }\n\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const $el = swiper.scrollbar.$el;\n\n    if ($el) {\n      $el.removeClass(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n\n    disableDraggable();\n  }\n\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      $el\n    } = swiper.scrollbar;\n\n    if ($el) {\n      $el[swiper.enabled ? 'removeClass' : 'addClass'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n\n  const enable = () => {\n    swiper.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n\n    if (swiper.scrollbar.$el) {\n      swiper.scrollbar.$el.removeClass(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n\n    init();\n    updateSize();\n    setTranslate();\n  };\n\n  const disable = () => {\n    swiper.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n\n    if (swiper.scrollbar.$el) {\n      swiper.scrollbar.$el.addClass(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n\n    destroy();\n  };\n\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { isObject } from '../../shared/utils.js';\nimport $ from '../../shared/dom.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n    }\n\n    swiper.slideTo(slideToIndex);\n  }\n\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs\n\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        } // Find actual thumbs index to slide to\n\n\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n\n        if (typeof prevThumbsIndex === 'undefined') {\n          newThumbsIndex = nextThumbsIndex;\n        } else if (typeof nextThumbsIndex === 'undefined') {\n          newThumbsIndex = prevThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = nextThumbsIndex;\n        } else {\n          newThumbsIndex = prevThumbsIndex;\n        }\n\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {// newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    init();\n    update(true);\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import $ from '../../shared/dom.js';\nimport { setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n\n    const $slideEl = params.renderSlide ? $(params.renderSlide.call(swiper, slide, index)) : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  }\n\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = slidesPerGroup + addSlidesBefore;\n    }\n\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n\n      emit('virtualUpdate');\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n\n          return slidesToRender;\n        }()\n      });\n\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n\n      return;\n    }\n\n    const prependIndexes = [];\n    const appendIndexes = [];\n\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n\n    appendIndexes.forEach(index => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach(index => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  }\n\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n\n    update(true);\n  }\n\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    swiper.virtual.slides = swiper.params.virtual.slides;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let gesturesEnabled;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const gesture = {\n    $slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    $imageEl: undefined,\n    $imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n        const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n\n      scale = value;\n    }\n\n  });\n\n  function getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  } // Events\n\n\n  function onGestureStart(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureTouched = true;\n      gesture.scaleStart = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n\n    isScaling = true;\n  }\n\n  function onGestureChange(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureMoved = true;\n      gesture.scaleMove = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n      if (e.type === 'gesturechange') onGestureStart(e);\n      return;\n    }\n\n    if (support.gestures) {\n      zoom.scale = e.scale * currentScale;\n    } else {\n      zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    }\n\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function onGestureEnd(e) {\n    const device = swiper.device;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (!fakeGestureTouched || !fakeGestureMoved) {\n        return;\n      }\n\n      if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n        return;\n      }\n\n      fakeGestureTouched = false;\n      fakeGestureMoved = false;\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  }\n\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  }\n\n  function onTouchMove(e) {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n    } // Define if we need image drag\n\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n\n    e.stopPropagation();\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    } // Velocity\n\n\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY; // Define if we need image drag\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  }\n\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (e && e.target) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      }\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left + window.scrollX;\n      offsetY = gesture.$slideEl.offset().top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  } // Toggle Zoom\n\n\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n\n  function getListeners() {\n    const support = swiper.support;\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = support.passiveListener ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  function getSlideSelector() {\n    return `.${swiper.params.slideClass}`;\n  }\n\n  function toggleGestures(method) {\n    const {\n      passiveListener\n    } = getListeners();\n    const slideSelector = getSlideSelector();\n    swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n    swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n    swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n  }\n\n  function enableGestures() {\n    if (gesturesEnabled) return;\n    gesturesEnabled = true;\n    toggleGestures('on');\n  }\n\n  function disableGestures() {\n    if (!gesturesEnabled) return;\n    gesturesEnabled = false;\n    toggleGestures('off');\n  } // Attach/Detach Events\n\n\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const support = swiper.support;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    const support = swiper.support;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  const document = getDocument();\n\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = swiper.$el.children(`.${checkProps[key]}`)[0];\n\n        if (!element) {\n          element = document.createElement('div');\n          element.className = checkProps[key];\n          swiper.$el.append(element);\n        }\n\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n\n  return params;\n}","import $ from './dom.js';\nexport default function createShadow(params, $slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const $shadowContainer = params.transformEl ? $slideEl.find(params.transformEl) : $slideEl;\n  let $shadowEl = $shadowContainer.children(`.${shadowClass}`);\n\n  if (!$shadowEl.length) {\n    $shadowEl = $(`<div class=\"swiper-slide-shadow${side ? `-${side}` : ''}\"></div>`);\n    $shadowContainer.append($shadowEl);\n  }\n\n  return $shadowEl;\n}","import { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, transform, transition, on, off, trigger, transitionEnd, outerWidth, outerHeight, styles, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove } from 'dom7';\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  transform,\n  transition,\n  on,\n  off,\n  trigger,\n  transitionEnd,\n  outerWidth,\n  outerHeight,\n  styles,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove\n};\nObject.keys(Methods).forEach(methodName => {\n  Object.defineProperty($.fn, methodName, {\n    value: Methods[methodName],\n    writable: true\n  });\n});\nexport default $;","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return; // remove shadows\n\n      swiper.slides.each(slideEl => {\n        const $slideEl = swiper.$(slideEl);\n        $slideEl.find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').remove();\n      }); // create new one\n\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","export default function effectTarget(effectParams, $slideEl) {\n  if (effectParams.transformEl) {\n    return $slideEl.find(effectParams.transformEl).css({\n      'backface-visibility': 'hidden',\n      '-webkit-backface-visibility': 'hidden'\n    });\n  }\n\n  return $slideEl;\n}","export default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformEl,\n  allSlides\n}) {\n  const {\n    slides,\n    activeIndex,\n    $wrapperEl\n  } = swiper;\n\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let $transitionEndTarget;\n\n    if (allSlides) {\n      $transitionEndTarget = transformEl ? slides.find(transformEl) : slides;\n    } else {\n      $transitionEndTarget = transformEl ? slides.eq(activeIndex).find(transformEl) : slides.eq(activeIndex);\n    }\n\n    $transitionEndTarget.transitionEnd(() => {\n      if (eventTriggered) return;\n      if (!swiper || swiper.destroyed) return;\n      eventTriggered = true;\n      swiper.animating = false;\n      const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n\n      for (let i = 0; i < triggerEvents.length; i += 1) {\n        $wrapperEl.trigger(triggerEvents[i]);\n      }\n    });\n  }\n}","import { getWindow } from 'ssr-window';\nlet browser;\n\nfunction calcBrowser() {\n  const window = getWindow();\n\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n\n  return {\n    isSafari: isSafari(),\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\n\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n\n  return browser;\n}\n\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\n\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel'; // iPadOs 13 fix\n\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  } // Android\n\n\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  } // Export object\n\n\n  return device;\n}\n\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n\n  return deviceCached;\n}\n\nexport { getDevice };","import { getWindow, getDocument } from 'ssr-window';\nlet support;\n\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch),\n    passiveListener: function checkPassiveListener() {\n      let supportsPassive = false;\n\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          }\n\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {// No support\n      }\n\n      return supportsPassive;\n    }(),\n    gestures: function checkGestures() {\n      return 'ongesturestart' in window;\n    }()\n  };\n}\n\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n\n  return support;\n}\n\nexport { getSupport };","import { getWindow } from 'ssr-window';\n\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {// no getter for object\n    }\n\n    try {\n      delete object[key];\n    } catch (e) {// something got wrong\n    }\n  });\n}\n\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\n\nfunction now() {\n  return Date.now();\n}\n\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n\n  if (!style) {\n    style = el.style;\n  }\n\n  return style;\n}\n\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    } // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n\n\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]); // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42; // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]); // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n\n  return curTransform || 0;\n}\n\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\n\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\n\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n\n  return to;\n}\n\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\n\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n\n  const animate = () => {\n    time = new Date().getTime();\n\n    if (startTime === null) {\n      startTime = time;\n    }\n\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n\n  animate();\n}\n\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty };","/**\n * Swiper 8.4.7\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: January 30, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Lazy } from './modules/lazy/lazy.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","import * as i0 from '@angular/core';\nimport { Directive, Input, EventEmitter, PLATFORM_ID, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, Output, ViewChild, ContentChildren, HostBinding, NgModule } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport Swiper from 'swiper';\nimport { Subject, of } from 'rxjs';\n\n/* underscore in name -> watch for changes */\nconst paramsList = [\n    'init',\n    'enabled',\n    '_direction',\n    'touchEventsTarget',\n    'initialSlide',\n    '_speed',\n    'cssMode',\n    'updateOnWindowResize',\n    'resizeObserver',\n    'nested',\n    'focusableElements',\n    '_width',\n    '_height',\n    'preventInteractionOnTransition',\n    'userAgent',\n    'url',\n    '_edgeSwipeDetection',\n    '_edgeSwipeThreshold',\n    '_freeMode',\n    '_autoHeight',\n    'setWrapperSize',\n    'virtualTranslate',\n    '_effect',\n    'breakpoints',\n    '_spaceBetween',\n    '_slidesPerView',\n    'maxBackfaceHiddenSlides',\n    '_grid',\n    '_slidesPerGroup',\n    '_slidesPerGroupSkip',\n    '_slidesPerGroupAuto',\n    '_centeredSlides',\n    '_centeredSlidesBounds',\n    '_slidesOffsetBefore',\n    '_slidesOffsetAfter',\n    'normalizeSlideIndex',\n    '_centerInsufficientSlides',\n    '_watchOverflow',\n    'roundLengths',\n    'touchRatio',\n    'touchAngle',\n    'simulateTouch',\n    '_shortSwipes',\n    '_longSwipes',\n    'longSwipesRatio',\n    'longSwipesMs',\n    '_followFinger',\n    'allowTouchMove',\n    '_threshold',\n    'touchMoveStopPropagation',\n    'touchStartPreventDefault',\n    'touchStartForcePreventDefault',\n    'touchReleaseOnEdges',\n    'uniqueNavElements',\n    '_resistance',\n    '_resistanceRatio',\n    '_watchSlidesProgress',\n    '_grabCursor',\n    'preventClicks',\n    'preventClicksPropagation',\n    '_slideToClickedSlide',\n    '_preloadImages',\n    'updateOnImagesReady',\n    '_loop',\n    '_loopAdditionalSlides',\n    '_loopedSlides',\n    '_loopedSlidesLimit',\n    '_loopFillGroupWithBlank',\n    'loopPreventsSlide',\n    '_rewind',\n    '_allowSlidePrev',\n    '_allowSlideNext',\n    '_swipeHandler',\n    '_noSwiping',\n    'noSwipingClass',\n    'noSwipingSelector',\n    'passiveListeners',\n    'containerModifierClass',\n    'slideClass',\n    'slideBlankClass',\n    'slideActiveClass',\n    'slideDuplicateActiveClass',\n    'slideVisibleClass',\n    'slideDuplicateClass',\n    'slideNextClass',\n    'slideDuplicateNextClass',\n    'slidePrevClass',\n    'slideDuplicatePrevClass',\n    'wrapperClass',\n    'runCallbacksOnInit',\n    'observer',\n    'observeParents',\n    'observeSlideChildren',\n    // modules\n    'a11y',\n    'autoplay',\n    '_controller',\n    'coverflowEffect',\n    'cubeEffect',\n    'fadeEffect',\n    'flipEffect',\n    'creativeEffect',\n    'cardsEffect',\n    'hashNavigation',\n    'history',\n    'keyboard',\n    'lazy',\n    'mousewheel',\n    '_navigation',\n    '_pagination',\n    'parallax',\n    '_scrollbar',\n    '_thumbs',\n    'virtual',\n    'zoom',\n    'on',\n];\n\nfunction isObject(o) {\n    return (typeof o === 'object' &&\n        o !== null &&\n        o.constructor &&\n        Object.prototype.toString.call(o).slice(8, -1) === 'Object');\n}\nfunction isEnabled(val) {\n    return typeof val !== 'undefined' && typeof val !== 'boolean' && val.enabled === true;\n}\nfunction isShowEl(val, obj, el) {\n    return ((coerceBooleanProperty(val) === true && obj && !obj.el) ||\n        !(typeof obj !== 'boolean' &&\n            obj.el !== (el === null || el === void 0 ? void 0 : el.nativeElement) &&\n            (typeof obj.el === 'string' || typeof obj.el === 'object')));\n}\nfunction extend(target, src) {\n    const noExtend = ['__proto__', 'constructor', 'prototype'];\n    Object.keys(src)\n        .filter((key) => noExtend.indexOf(key) < 0)\n        .forEach((key) => {\n        if (typeof target[key] === 'undefined') {\n            target[key] = src[key];\n            return;\n        }\n        if (target[key] && !src[key]) {\n            return;\n        }\n        if (isObject(src[key]) && isObject(target[key]) && Object.keys(src[key]).length > 0) {\n            if (src[key].__swiper__)\n                target[key] = src[key];\n            else\n                extend(target[key], src[key]);\n        }\n        else {\n            target[key] = src[key];\n        }\n    });\n}\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\nconst ignoreNgOnChanges = ['pagination', 'navigation', 'scrollbar', 'virtual'];\nfunction setProperty(val, obj = {}) {\n    if (isObject(val)) {\n        return val;\n    }\n    if (coerceBooleanProperty(val) === true) {\n        return obj;\n    }\n    return false;\n}\n\n// @ts-ignore\nconst allowedParams = paramsList.map((key) => key.replace(/_/, ''));\nfunction getParams(obj = {}) {\n    const params = {\n        on: {},\n    };\n    // const events = {};\n    const passedParams = {};\n    extend(params, Swiper.defaults);\n    extend(params, Swiper.extendedDefaults);\n    params._emitClasses = true;\n    params.init = false;\n    const rest = {};\n    const allowedParams = paramsList.map((key) => key.replace(/_/, ''));\n    Object.keys(obj).forEach((key) => {\n        const _key = key.replace(/^_/, '');\n        if (allowedParams.indexOf(_key) >= 0) {\n            if (isObject(obj[key])) {\n                params[_key] = {};\n                passedParams[_key] = {};\n                extend(params[_key], obj[key]);\n                extend(passedParams[_key], obj[key]);\n            }\n            else {\n                params[_key] = obj[key];\n                passedParams[_key] = obj[key];\n            }\n        }\n        // else if (key.search(/on[A-Z]/) === 0 && typeof obj[key] === 'function') {\n        //   events[`${_key[2].toLowerCase()}${key.substr(3)}`] = obj[key];\n        // }\n        else {\n            rest[_key] = obj[key];\n        }\n    });\n    ['navigation', 'pagination', 'scrollbar'].forEach((key) => {\n        if (params[key] === true)\n            params[key] = {};\n        if (params[key] === false)\n            delete params[key];\n    });\n    return { params, passedParams, rest };\n}\n\nclass SwiperSlideDirective {\n    constructor(template) {\n        this.template = template;\n        this.class = '';\n        this.autoplayDelay = null;\n        this.slideData = {\n            isActive: false,\n            isPrev: false,\n            isNext: false,\n            isVisible: false,\n            isDuplicate: false,\n        };\n    }\n    set ngClass(val) {\n        this.class = [this.class || '', val].join(' ');\n    }\n    set zoom(val) {\n        this._zoom = coerceBooleanProperty(val);\n    }\n    get zoom() {\n        return this._zoom;\n    }\n    get classNames() {\n        return this._classNames;\n    }\n    set classNames(val) {\n        if (this._classNames === val) {\n            return;\n        }\n        this._classNames = val;\n        this.slideData = {\n            isActive: this._hasClass(['swiper-slide-active', 'swiper-slide-duplicate-active']),\n            isVisible: this._hasClass(['swiper-slide-visible']),\n            isDuplicate: this._hasClass(['swiper-slide-duplicate']),\n            isPrev: this._hasClass(['swiper-slide-prev', 'swiper-slide-duplicate-prev']),\n            isNext: this._hasClass(['swiper-slide-next', 'swiper-slide-duplicate-next']),\n        };\n    }\n    _hasClass(classNames) {\n        return classNames.some((className) => this._classNames.indexOf(className) >= 0);\n    }\n}\nSwiperSlideDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperSlideDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });\nSwiperSlideDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SwiperSlideDirective, selector: \"ng-template[swiperSlide]\", inputs: { virtualIndex: \"virtualIndex\", class: \"class\", ngClass: \"ngClass\", autoplayDelay: [\"data-swiper-autoplay\", \"autoplayDelay\"], zoom: \"zoom\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperSlideDirective, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[swiperSlide]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { virtualIndex: [{\n                type: Input\n            }], class: [{\n                type: Input\n            }], ngClass: [{\n                type: Input\n            }], autoplayDelay: [{\n                type: Input,\n                args: ['data-swiper-autoplay']\n            }], zoom: [{\n                type: Input\n            }] } });\n\nclass SwiperComponent {\n    constructor(_ngZone, elementRef, _changeDetectorRef, _platformId) {\n        this._ngZone = _ngZone;\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._platformId = _platformId;\n        this.slideClass = 'swiper-slide';\n        this.wrapperClass = 'swiper-wrapper';\n        this.showNavigation = true;\n        this.showPagination = true;\n        this.showScrollbar = true;\n        this.s__beforeBreakpoint = new EventEmitter();\n        this.s__containerClasses = new EventEmitter();\n        this.s__slideClass = new EventEmitter();\n        this.s__swiper = new EventEmitter();\n        this.s_activeIndexChange = new EventEmitter();\n        this.s_afterInit = new EventEmitter();\n        this.s_autoplay = new EventEmitter();\n        this.s_autoplayStart = new EventEmitter();\n        this.s_autoplayStop = new EventEmitter();\n        this.s_autoplayPause = new EventEmitter();\n        this.s_autoplayResume = new EventEmitter();\n        this.s_beforeDestroy = new EventEmitter();\n        this.s_beforeInit = new EventEmitter();\n        this.s_beforeLoopFix = new EventEmitter();\n        this.s_beforeResize = new EventEmitter();\n        this.s_beforeSlideChangeStart = new EventEmitter();\n        this.s_beforeTransitionStart = new EventEmitter();\n        this.s_breakpoint = new EventEmitter();\n        this.s_changeDirection = new EventEmitter();\n        this.s_click = new EventEmitter();\n        this.s_doubleTap = new EventEmitter();\n        this.s_doubleClick = new EventEmitter();\n        this.s_destroy = new EventEmitter();\n        this.s_fromEdge = new EventEmitter();\n        this.s_hashChange = new EventEmitter();\n        this.s_hashSet = new EventEmitter();\n        this.s_imagesReady = new EventEmitter();\n        this.s_init = new EventEmitter();\n        this.s_keyPress = new EventEmitter();\n        this.s_lazyImageLoad = new EventEmitter();\n        this.s_lazyImageReady = new EventEmitter();\n        this.s_loopFix = new EventEmitter();\n        this.s_momentumBounce = new EventEmitter();\n        this.s_navigationHide = new EventEmitter();\n        this.s_navigationShow = new EventEmitter();\n        this.s_navigationPrev = new EventEmitter();\n        this.s_navigationNext = new EventEmitter();\n        this.s_observerUpdate = new EventEmitter();\n        this.s_orientationchange = new EventEmitter();\n        this.s_paginationHide = new EventEmitter();\n        this.s_paginationRender = new EventEmitter();\n        this.s_paginationShow = new EventEmitter();\n        this.s_paginationUpdate = new EventEmitter();\n        this.s_progress = new EventEmitter();\n        this.s_reachBeginning = new EventEmitter();\n        this.s_reachEnd = new EventEmitter();\n        this.s_realIndexChange = new EventEmitter();\n        this.s_resize = new EventEmitter();\n        this.s_scroll = new EventEmitter();\n        this.s_scrollbarDragEnd = new EventEmitter();\n        this.s_scrollbarDragMove = new EventEmitter();\n        this.s_scrollbarDragStart = new EventEmitter();\n        this.s_setTransition = new EventEmitter();\n        this.s_setTranslate = new EventEmitter();\n        this.s_slideChange = new EventEmitter();\n        this.s_slideChangeTransitionEnd = new EventEmitter();\n        this.s_slideChangeTransitionStart = new EventEmitter();\n        this.s_slideNextTransitionEnd = new EventEmitter();\n        this.s_slideNextTransitionStart = new EventEmitter();\n        this.s_slidePrevTransitionEnd = new EventEmitter();\n        this.s_slidePrevTransitionStart = new EventEmitter();\n        this.s_slideResetTransitionStart = new EventEmitter();\n        this.s_slideResetTransitionEnd = new EventEmitter();\n        this.s_sliderMove = new EventEmitter();\n        this.s_sliderFirstMove = new EventEmitter();\n        this.s_slidesLengthChange = new EventEmitter();\n        this.s_slidesGridLengthChange = new EventEmitter();\n        this.s_snapGridLengthChange = new EventEmitter();\n        this.s_snapIndexChange = new EventEmitter();\n        this.s_tap = new EventEmitter();\n        this.s_toEdge = new EventEmitter();\n        this.s_touchEnd = new EventEmitter();\n        this.s_touchMove = new EventEmitter();\n        this.s_touchMoveOpposite = new EventEmitter();\n        this.s_touchStart = new EventEmitter();\n        this.s_transitionEnd = new EventEmitter();\n        this.s_transitionStart = new EventEmitter();\n        this.s_update = new EventEmitter();\n        this.s_zoomChange = new EventEmitter();\n        this.s_swiper = new EventEmitter();\n        this.s_lock = new EventEmitter();\n        this.s_unlock = new EventEmitter();\n        this._activeSlides = new Subject();\n        this.containerClasses = 'swiper';\n        this.slidesChanges = (val) => {\n            this.slides = val.map((slide, index) => {\n                slide.slideIndex = index;\n                slide.classNames = this.slideClass || '';\n                return slide;\n            });\n            if (this.loop && !this.loopedSlides) {\n                this.calcLoopedSlides();\n            }\n            if (!this.virtual) {\n                if (this.loopedSlides) {\n                    this.prependSlides = of(this.slides.slice(this.slides.length - this.loopedSlides));\n                    this.appendSlides = of(this.slides.slice(0, this.loopedSlides));\n                }\n            }\n            else if (this.swiperRef && this.swiperRef.virtual) {\n                this._ngZone.runOutsideAngular(() => {\n                    this.swiperRef.virtual.slides = this.slides;\n                    this.swiperRef.virtual.update(true);\n                });\n            }\n            this._changeDetectorRef.detectChanges();\n        };\n        this.style = null;\n        this.updateVirtualSlides = (virtualData) => {\n            // TODO: type virtualData\n            if (!this.swiperRef ||\n                (this.currentVirtualData &&\n                    this.currentVirtualData.from === virtualData.from &&\n                    this.currentVirtualData.to === virtualData.to &&\n                    this.currentVirtualData.offset === virtualData.offset)) {\n                return;\n            }\n            this.style = this.swiperRef.isHorizontal()\n                ? {\n                    [this.swiperRef.rtlTranslate ? 'right' : 'left']: `${virtualData.offset}px`,\n                }\n                : {\n                    top: `${virtualData.offset}px`,\n                };\n            this.currentVirtualData = virtualData;\n            this._activeSlides.next(virtualData.slides);\n            this._ngZone.run(() => {\n                this._changeDetectorRef.detectChanges();\n            });\n            this._ngZone.runOutsideAngular(() => {\n                this.swiperRef.updateSlides();\n                this.swiperRef.updateProgress();\n                this.swiperRef.updateSlidesClasses();\n                if (isEnabled(this.swiperRef.params.lazy)) {\n                    this.swiperRef.lazy.load();\n                }\n                this.swiperRef.virtual.update(true);\n            });\n            return;\n        };\n    }\n    set navigation(val) {\n        var _a, _b, _c;\n        const currentNext = typeof this._navigation !== 'boolean' && this._navigation !== ''\n            ? (_a = this._navigation) === null || _a === void 0 ? void 0 : _a.nextEl\n            : null;\n        const currentPrev = typeof this._navigation !== 'boolean' && this._navigation !== ''\n            ? (_b = this._navigation) === null || _b === void 0 ? void 0 : _b.prevEl\n            : null;\n        this._navigation = setProperty(val, {\n            nextEl: currentNext || null,\n            prevEl: currentPrev || null,\n        });\n        this.showNavigation = !(coerceBooleanProperty(val) !== true ||\n            (this._navigation &&\n                typeof this._navigation !== 'boolean' &&\n                this._navigation.prevEl !== ((_c = this._prevElRef) === null || _c === void 0 ? void 0 : _c.nativeElement) &&\n                (this._navigation.prevEl !== null || this._navigation.nextEl !== null) &&\n                (typeof this._navigation.nextEl === 'string' ||\n                    typeof this._navigation.prevEl === 'string' ||\n                    typeof this._navigation.nextEl === 'object' ||\n                    typeof this._navigation.prevEl === 'object')));\n    }\n    get navigation() {\n        return this._navigation;\n    }\n    set pagination(val) {\n        var _a;\n        const current = typeof this._pagination !== 'boolean' && this._pagination !== ''\n            ? (_a = this._pagination) === null || _a === void 0 ? void 0 : _a.el\n            : null;\n        this._pagination = setProperty(val, {\n            el: current || null,\n        });\n        this.showPagination = isShowEl(val, this._pagination, this._paginationElRef);\n    }\n    get pagination() {\n        return this._pagination;\n    }\n    set scrollbar(val) {\n        var _a;\n        const current = typeof this._scrollbar !== 'boolean' && this._scrollbar !== '' ? (_a = this._scrollbar) === null || _a === void 0 ? void 0 : _a.el : null;\n        this._scrollbar = setProperty(val, {\n            el: current || null,\n        });\n        this.showScrollbar = isShowEl(val, this._scrollbar, this._scrollbarElRef);\n    }\n    get scrollbar() {\n        return this._scrollbar;\n    }\n    set virtual(val) {\n        this._virtual = setProperty(val);\n    }\n    get virtual() {\n        return this._virtual;\n    }\n    set config(val) {\n        this.updateSwiper(val);\n        const { params } = getParams(val);\n        Object.assign(this, params);\n    }\n    set prevElRef(el) {\n        this._prevElRef = el;\n        this._setElement(el, this.navigation, 'navigation', 'prevEl');\n    }\n    set nextElRef(el) {\n        this._nextElRef = el;\n        this._setElement(el, this.navigation, 'navigation', 'nextEl');\n    }\n    set scrollbarElRef(el) {\n        this._scrollbarElRef = el;\n        this._setElement(el, this.scrollbar, 'scrollbar');\n    }\n    set paginationElRef(el) {\n        this._paginationElRef = el;\n        this._setElement(el, this.pagination, 'pagination');\n    }\n    get activeSlides() {\n        if (this.virtual) {\n            return this._activeSlides;\n        }\n        return of(this.slides);\n    }\n    get zoomContainerClass() {\n        return this.zoom && typeof this.zoom !== 'boolean'\n            ? this.zoom.containerClass\n            : 'swiper-zoom-container';\n    }\n    _setElement(el, ref, update, key = 'el') {\n        if (!ref || !el)\n            return;\n        if (el.nativeElement) {\n            if (ref[key] === el.nativeElement) {\n                return;\n            }\n            ref[key] = el.nativeElement;\n        }\n        const updateObj = {};\n        updateObj[update] = true;\n        this.updateInitSwiper(updateObj);\n    }\n    ngOnInit() {\n        const { params } = getParams(this);\n        Object.assign(this, params);\n    }\n    ngAfterViewInit() {\n        this.childrenSlidesInit();\n        this.initSwiper();\n        this._changeDetectorRef.detectChanges();\n        setTimeout(() => {\n            this.s_swiper.emit(this.swiperRef);\n        });\n    }\n    childrenSlidesInit() {\n        this.slidesChanges(this.slidesEl);\n        this.slidesEl.changes.subscribe(this.slidesChanges);\n    }\n    get isSwiperActive() {\n        return this.swiperRef && !this.swiperRef.destroyed;\n    }\n    initSwiper() {\n        const { params: swiperParams, passedParams } = getParams(this);\n        Object.assign(this, swiperParams);\n        this._ngZone.runOutsideAngular(() => {\n            swiperParams.init = false;\n            if (!swiperParams.virtual) {\n                swiperParams.observer = true;\n            }\n            swiperParams.onAny = (eventName, ...args) => {\n                const emitter = this[('s_' + eventName)];\n                if (emitter) {\n                    emitter.emit([...args]);\n                }\n            };\n            const _slideClasses = (_, updated) => {\n                updated.forEach(({ slideEl, classNames }, index) => {\n                    const dataIndex = slideEl.getAttribute('data-swiper-slide-index');\n                    const slideIndex = dataIndex ? parseInt(dataIndex) : index;\n                    if (this.virtual) {\n                        const virtualSlide = this.slides.find((item) => {\n                            return item.virtualIndex && item.virtualIndex === slideIndex;\n                        });\n                        if (virtualSlide) {\n                            virtualSlide.classNames = classNames;\n                            return;\n                        }\n                    }\n                    if (this.slides[slideIndex]) {\n                        this.slides[slideIndex].classNames = classNames;\n                    }\n                });\n                this._changeDetectorRef.detectChanges();\n            };\n            const _containerClasses = (_, classes) => {\n                setTimeout(() => {\n                    this.containerClasses = classes;\n                });\n            };\n            Object.assign(swiperParams.on, {\n                _containerClasses,\n                _slideClasses,\n            });\n            const swiperRef = new Swiper(swiperParams);\n            swiperRef.loopCreate = () => { };\n            swiperRef.loopDestroy = () => { };\n            if (swiperParams.loop) {\n                swiperRef.loopedSlides = this.loopedSlides;\n            }\n            const isVirtualEnabled = isEnabled(swiperRef.params.virtual);\n            if (swiperRef.virtual && isVirtualEnabled) {\n                swiperRef.virtual.slides = this.slides;\n                const extendWith = {\n                    cache: false,\n                    slides: this.slides,\n                    renderExternal: this.updateVirtualSlides,\n                    renderExternalUpdate: false,\n                };\n                extend(swiperRef.params.virtual, extendWith);\n                extend(swiperRef.originalParams.virtual, extendWith);\n            }\n            if (isPlatformBrowser(this._platformId)) {\n                this.swiperRef = swiperRef.init(this.elementRef.nativeElement);\n                const isVirtualEnabled = isEnabled(this.swiperRef.params.virtual);\n                if (this.swiperRef.virtual && isVirtualEnabled) {\n                    this.swiperRef.virtual.update(true);\n                }\n                this._changeDetectorRef.detectChanges();\n            }\n        });\n    }\n    ngOnChanges(changedParams) {\n        this.updateSwiper(changedParams);\n        this._changeDetectorRef.detectChanges();\n    }\n    updateInitSwiper(changedParams) {\n        if (!(changedParams && this.swiperRef && !this.swiperRef.destroyed)) {\n            return;\n        }\n        this._ngZone.runOutsideAngular(() => {\n            const { params: currentParams, pagination, navigation, scrollbar, virtual, thumbs, } = this.swiperRef;\n            if (changedParams.pagination) {\n                if (this.pagination &&\n                    typeof this.pagination !== 'boolean' &&\n                    this.pagination.el &&\n                    pagination &&\n                    !pagination.el) {\n                    this.updateParameter('pagination', this.pagination);\n                    pagination.init();\n                    pagination.render();\n                    pagination.update();\n                }\n                else {\n                    pagination.destroy();\n                    pagination.el = null;\n                }\n            }\n            if (changedParams.scrollbar) {\n                if (this.scrollbar &&\n                    typeof this.scrollbar !== 'boolean' &&\n                    this.scrollbar.el &&\n                    scrollbar &&\n                    !scrollbar.el) {\n                    this.updateParameter('scrollbar', this.scrollbar);\n                    scrollbar.init();\n                    scrollbar.updateSize();\n                    scrollbar.setTranslate();\n                }\n                else {\n                    scrollbar.destroy();\n                    scrollbar.el = null;\n                }\n            }\n            if (changedParams.navigation) {\n                if (this.navigation &&\n                    typeof this.navigation !== 'boolean' &&\n                    this.navigation.prevEl &&\n                    this.navigation.nextEl &&\n                    navigation &&\n                    !navigation.prevEl &&\n                    !navigation.nextEl) {\n                    this.updateParameter('navigation', this.navigation);\n                    navigation.init();\n                    navigation.update();\n                }\n                else if (navigation.prevEl && navigation.nextEl) {\n                    navigation.destroy();\n                    navigation.nextEl = null;\n                    navigation.prevEl = null;\n                }\n            }\n            if (changedParams.thumbs && this.thumbs && this.thumbs.swiper) {\n                this.updateParameter('thumbs', this.thumbs);\n                const initialized = thumbs.init();\n                if (initialized)\n                    thumbs.update(true);\n            }\n            if (changedParams.controller && this.controller && this.controller.control) {\n                this.swiperRef.controller.control = this.controller.control;\n            }\n            this.swiperRef.update();\n        });\n    }\n    updateSwiper(changedParams) {\n        this._ngZone.runOutsideAngular(() => {\n            var _a, _b;\n            if (changedParams.config) {\n                return;\n            }\n            if (!(changedParams && this.swiperRef && !this.swiperRef.destroyed)) {\n                return;\n            }\n            for (const key in changedParams) {\n                if (ignoreNgOnChanges.indexOf(key) >= 0) {\n                    continue;\n                }\n                const newValue = (_b = (_a = changedParams[key]) === null || _a === void 0 ? void 0 : _a.currentValue) !== null && _b !== void 0 ? _b : changedParams[key];\n                this.updateParameter(key, newValue);\n            }\n            if (changedParams.allowSlideNext) {\n                this.swiperRef.allowSlideNext = this.allowSlideNext;\n            }\n            if (changedParams.allowSlidePrev) {\n                this.swiperRef.allowSlidePrev = this.allowSlidePrev;\n            }\n            if (changedParams.direction) {\n                this.swiperRef.changeDirection(this.direction, false);\n            }\n            if (changedParams.breakpoints) {\n                if (this.loop && !this.loopedSlides) {\n                    this.calcLoopedSlides();\n                }\n                this.swiperRef.currentBreakpoint = null;\n                this.swiperRef.setBreakpoint();\n            }\n            if (changedParams.thumbs || changedParams.controller) {\n                this.updateInitSwiper(changedParams);\n            }\n            this.swiperRef.update();\n        });\n    }\n    calcLoopedSlides() {\n        if (!this.loop) {\n            return false;\n        }\n        let slidesPerViewParams = this.slidesPerView;\n        if (this.breakpoints) {\n            const breakpoint = Swiper.prototype.getBreakpoint(this.breakpoints);\n            const breakpointOnlyParams = breakpoint in this.breakpoints ? this.breakpoints[breakpoint] : undefined;\n            if (breakpointOnlyParams && breakpointOnlyParams.slidesPerView) {\n                slidesPerViewParams = breakpointOnlyParams.slidesPerView;\n            }\n        }\n        if (slidesPerViewParams === 'auto') {\n            this.loopedSlides = this.slides.length;\n            return this.slides.length;\n        }\n        let loopedSlides = this.loopedSlides || slidesPerViewParams;\n        if (!loopedSlides) {\n            // ?\n            return false;\n        }\n        if (this.loopAdditionalSlides) {\n            loopedSlides += this.loopAdditionalSlides;\n        }\n        if (loopedSlides > this.slides.length) {\n            loopedSlides = this.slides.length;\n        }\n        this.loopedSlides = loopedSlides;\n        return true;\n    }\n    updateParameter(key, value) {\n        if (!(this.swiperRef && !this.swiperRef.destroyed)) {\n            return;\n        }\n        const _key = key.replace(/^_/, '');\n        const isCurrentParamObj = isObject(this.swiperRef.params[_key]);\n        if (_key === 'enabled') {\n            if (value === true) {\n                this.swiperRef.enable();\n            }\n            else if (value === false) {\n                this.swiperRef.disable();\n            }\n            return;\n        }\n        if (isCurrentParamObj && isObject(value)) {\n            extend(this.swiperRef.params[_key], value);\n        }\n        else {\n            this.swiperRef.params[_key] = value;\n        }\n    }\n    ngOnDestroy() {\n        this._ngZone.runOutsideAngular(() => {\n            var _a;\n            (_a = this.swiperRef) === null || _a === void 0 ? void 0 : _a.destroy(true, false);\n        });\n    }\n}\nSwiperComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperComponent, deps: [{ token: i0.NgZone }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nSwiperComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.11\", type: SwiperComponent, selector: \"swiper, [swiper]\", inputs: { enabled: \"enabled\", on: \"on\", direction: \"direction\", touchEventsTarget: \"touchEventsTarget\", initialSlide: \"initialSlide\", speed: \"speed\", cssMode: \"cssMode\", updateOnWindowResize: \"updateOnWindowResize\", resizeObserver: \"resizeObserver\", nested: \"nested\", focusableElements: \"focusableElements\", width: \"width\", height: \"height\", preventInteractionOnTransition: \"preventInteractionOnTransition\", userAgent: \"userAgent\", url: \"url\", edgeSwipeDetection: \"edgeSwipeDetection\", edgeSwipeThreshold: \"edgeSwipeThreshold\", freeMode: \"freeMode\", autoHeight: \"autoHeight\", setWrapperSize: \"setWrapperSize\", virtualTranslate: \"virtualTranslate\", effect: \"effect\", breakpoints: \"breakpoints\", spaceBetween: \"spaceBetween\", slidesPerView: \"slidesPerView\", maxBackfaceHiddenSlides: \"maxBackfaceHiddenSlides\", grid: \"grid\", slidesPerGroup: \"slidesPerGroup\", slidesPerGroupSkip: \"slidesPerGroupSkip\", centeredSlides: \"centeredSlides\", centeredSlidesBounds: \"centeredSlidesBounds\", slidesOffsetBefore: \"slidesOffsetBefore\", slidesOffsetAfter: \"slidesOffsetAfter\", normalizeSlideIndex: \"normalizeSlideIndex\", centerInsufficientSlides: \"centerInsufficientSlides\", watchOverflow: \"watchOverflow\", roundLengths: \"roundLengths\", touchRatio: \"touchRatio\", touchAngle: \"touchAngle\", simulateTouch: \"simulateTouch\", shortSwipes: \"shortSwipes\", longSwipes: \"longSwipes\", longSwipesRatio: \"longSwipesRatio\", longSwipesMs: \"longSwipesMs\", followFinger: \"followFinger\", allowTouchMove: \"allowTouchMove\", threshold: \"threshold\", touchMoveStopPropagation: \"touchMoveStopPropagation\", touchStartPreventDefault: \"touchStartPreventDefault\", touchStartForcePreventDefault: \"touchStartForcePreventDefault\", touchReleaseOnEdges: \"touchReleaseOnEdges\", uniqueNavElements: \"uniqueNavElements\", resistance: \"resistance\", resistanceRatio: \"resistanceRatio\", watchSlidesProgress: \"watchSlidesProgress\", grabCursor: \"grabCursor\", preventClicks: \"preventClicks\", preventClicksPropagation: \"preventClicksPropagation\", slideToClickedSlide: \"slideToClickedSlide\", preloadImages: \"preloadImages\", updateOnImagesReady: \"updateOnImagesReady\", loop: \"loop\", loopAdditionalSlides: \"loopAdditionalSlides\", loopedSlides: \"loopedSlides\", loopedSlidesLimit: \"loopedSlidesLimit\", loopFillGroupWithBlank: \"loopFillGroupWithBlank\", loopPreventsSlide: \"loopPreventsSlide\", rewind: \"rewind\", allowSlidePrev: \"allowSlidePrev\", allowSlideNext: \"allowSlideNext\", swipeHandler: \"swipeHandler\", noSwiping: \"noSwiping\", noSwipingClass: \"noSwipingClass\", noSwipingSelector: \"noSwipingSelector\", passiveListeners: \"passiveListeners\", containerModifierClass: \"containerModifierClass\", slideClass: \"slideClass\", slideBlankClass: \"slideBlankClass\", slideActiveClass: \"slideActiveClass\", slideDuplicateActiveClass: \"slideDuplicateActiveClass\", slideVisibleClass: \"slideVisibleClass\", slideDuplicateClass: \"slideDuplicateClass\", slideNextClass: \"slideNextClass\", slideDuplicateNextClass: \"slideDuplicateNextClass\", slidePrevClass: \"slidePrevClass\", slideDuplicatePrevClass: \"slideDuplicatePrevClass\", wrapperClass: \"wrapperClass\", runCallbacksOnInit: \"runCallbacksOnInit\", observeParents: \"observeParents\", observeSlideChildren: \"observeSlideChildren\", a11y: \"a11y\", autoplay: \"autoplay\", controller: \"controller\", coverflowEffect: \"coverflowEffect\", cubeEffect: \"cubeEffect\", fadeEffect: \"fadeEffect\", flipEffect: \"flipEffect\", creativeEffect: \"creativeEffect\", cardsEffect: \"cardsEffect\", hashNavigation: \"hashNavigation\", history: \"history\", keyboard: \"keyboard\", lazy: \"lazy\", mousewheel: \"mousewheel\", parallax: \"parallax\", thumbs: \"thumbs\", zoom: \"zoom\", slidesPerGroupAuto: \"slidesPerGroupAuto\", class: \"class\", id: \"id\", navigation: \"navigation\", pagination: \"pagination\", scrollbar: \"scrollbar\", virtual: \"virtual\", config: \"config\" }, outputs: { s__beforeBreakpoint: \"_beforeBreakpoint\", s__containerClasses: \"_containerClasses\", s__slideClass: \"_slideClass\", s__swiper: \"_swiper\", s_activeIndexChange: \"activeIndexChange\", s_afterInit: \"afterInit\", s_autoplay: \"autoplay\", s_autoplayStart: \"autoplayStart\", s_autoplayStop: \"autoplayStop\", s_autoplayPause: \"autoplayPause\", s_autoplayResume: \"autoplayResume\", s_beforeDestroy: \"beforeDestroy\", s_beforeInit: \"beforeInit\", s_beforeLoopFix: \"beforeLoopFix\", s_beforeResize: \"beforeResize\", s_beforeSlideChangeStart: \"beforeSlideChangeStart\", s_beforeTransitionStart: \"beforeTransitionStart\", s_breakpoint: \"breakpoint\", s_changeDirection: \"changeDirection\", s_click: \"click\", s_doubleTap: \"doubleTap\", s_doubleClick: \"doubleClick\", s_destroy: \"destroy\", s_fromEdge: \"fromEdge\", s_hashChange: \"hashChange\", s_hashSet: \"hashSet\", s_imagesReady: \"imagesReady\", s_init: \"init\", s_keyPress: \"keyPress\", s_lazyImageLoad: \"lazyImageLoad\", s_lazyImageReady: \"lazyImageReady\", s_loopFix: \"loopFix\", s_momentumBounce: \"momentumBounce\", s_navigationHide: \"navigationHide\", s_navigationShow: \"navigationShow\", s_navigationPrev: \"navigationPrev\", s_navigationNext: \"navigationNext\", s_observerUpdate: \"observerUpdate\", s_orientationchange: \"orientationchange\", s_paginationHide: \"paginationHide\", s_paginationRender: \"paginationRender\", s_paginationShow: \"paginationShow\", s_paginationUpdate: \"paginationUpdate\", s_progress: \"progress\", s_reachBeginning: \"reachBeginning\", s_reachEnd: \"reachEnd\", s_realIndexChange: \"realIndexChange\", s_resize: \"resize\", s_scroll: \"scroll\", s_scrollbarDragEnd: \"scrollbarDragEnd\", s_scrollbarDragMove: \"scrollbarDragMove\", s_scrollbarDragStart: \"scrollbarDragStart\", s_setTransition: \"setTransition\", s_setTranslate: \"setTranslate\", s_slideChange: \"slideChange\", s_slideChangeTransitionEnd: \"slideChangeTransitionEnd\", s_slideChangeTransitionStart: \"slideChangeTransitionStart\", s_slideNextTransitionEnd: \"slideNextTransitionEnd\", s_slideNextTransitionStart: \"slideNextTransitionStart\", s_slidePrevTransitionEnd: \"slidePrevTransitionEnd\", s_slidePrevTransitionStart: \"slidePrevTransitionStart\", s_slideResetTransitionStart: \"slideResetTransitionStart\", s_slideResetTransitionEnd: \"slideResetTransitionEnd\", s_sliderMove: \"sliderMove\", s_sliderFirstMove: \"sliderFirstMove\", s_slidesLengthChange: \"slidesLengthChange\", s_slidesGridLengthChange: \"slidesGridLengthChange\", s_snapGridLengthChange: \"snapGridLengthChange\", s_snapIndexChange: \"snapIndexChange\", s_tap: \"tap\", s_toEdge: \"toEdge\", s_touchEnd: \"touchEnd\", s_touchMove: \"touchMove\", s_touchMoveOpposite: \"touchMoveOpposite\", s_touchStart: \"touchStart\", s_transitionEnd: \"transitionEnd\", s_transitionStart: \"transitionStart\", s_update: \"update\", s_zoomChange: \"zoomChange\", s_swiper: \"swiper\", s_lock: \"lock\", s_unlock: \"unlock\" }, host: { properties: { \"class\": \"this.containerClasses\" } }, queries: [{ propertyName: \"slidesEl\", predicate: SwiperSlideDirective }], viewQueries: [{ propertyName: \"prevElRef\", first: true, predicate: [\"prevElRef\"], descendants: true }, { propertyName: \"nextElRef\", first: true, predicate: [\"nextElRef\"], descendants: true }, { propertyName: \"scrollbarElRef\", first: true, predicate: [\"scrollbarElRef\"], descendants: true }, { propertyName: \"paginationElRef\", first: true, predicate: [\"paginationElRef\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<ng-content select=\\\"[slot=container-start]\\\"></ng-content>\\n<ng-container *ngIf=\\\"navigation && showNavigation\\\">\\n  <div class=\\\"swiper-button-prev\\\" #prevElRef></div>\\n  <div class=\\\"swiper-button-next\\\" #nextElRef></div>\\n</ng-container>\\n<div *ngIf=\\\"scrollbar && showScrollbar\\\" class=\\\"swiper-scrollbar\\\" #scrollbarElRef></div>\\n<div *ngIf=\\\"pagination && showPagination\\\" class=\\\"swiper-pagination\\\" #paginationElRef></div>\\n<div [ngClass]=\\\"wrapperClass\\\" [attr.id]=\\\"id\\\">\\n  <ng-content select=\\\"[slot=wrapper-start]\\\"></ng-content>\\n  <ng-template\\n    *ngTemplateOutlet=\\\"\\n      slidesTemplate;\\n      context: {\\n        loopSlides: prependSlides,\\n        key: 'prepend'\\n      }\\n    \\\"\\n  ></ng-template>\\n  <ng-template\\n    *ngTemplateOutlet=\\\"\\n      slidesTemplate;\\n      context: {\\n        loopSlides: activeSlides,\\n        key: ''\\n      }\\n    \\\"\\n  ></ng-template>\\n  <ng-template\\n    *ngTemplateOutlet=\\\"\\n      slidesTemplate;\\n      context: {\\n        loopSlides: appendSlides,\\n        key: 'append'\\n      }\\n    \\\"\\n  ></ng-template>\\n  <ng-content select=\\\"[slot=wrapper-end]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[slot=container-end]\\\"></ng-content>\\n\\n<ng-template #slidesTemplate let-loopSlides=\\\"loopSlides\\\" let-slideKey=\\\"key\\\">\\n  <div\\n    *ngFor=\\\"let slide of loopSlides | async\\\"\\n    [ngClass]=\\\"\\n      (slide.class ? slide.class + ' ' : '') +\\n      slideClass +\\n      (slideKey !== '' ? ' ' + slideDuplicateClass : '')\\n    \\\"\\n    [attr.data-swiper-slide-index]=\\\"slide.virtualIndex ? slide.virtualIndex : slide.slideIndex\\\"\\n    [attr.data-swiper-autoplay]=\\\"slide.autoplayDelay\\\"\\n    [style]=\\\"style\\\"\\n    [ngSwitch]=\\\"slide.zoom\\\"\\n  >\\n    <div *ngSwitchCase=\\\"true\\\" [ngClass]=\\\"zoomContainerClass\\\">\\n      <ng-template\\n        [ngTemplateOutlet]=\\\"slide.template\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          $implicit: slide.slideData\\n        }\\\"\\n      ></ng-template>\\n    </div>\\n    <ng-container *ngSwitchDefault>\\n      <ng-template\\n        [ngTemplateOutlet]=\\\"slide.template\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          $implicit: slide.slideData\\n        }\\\"\\n      ></ng-template>\\n    </ng-container>\\n  </div>\\n</ng-template>\\n\", styles: [\"swiper{display:block}\\n\"], directives: [{ type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i1.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { type: i1.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\"] }, { type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i1.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i1.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i1.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }], pipes: { \"async\": i1.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'swiper, [swiper]', changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, styles: [\n                        `\n      swiper {\n        display: block;\n      }\n    `,\n                    ], template: \"<ng-content select=\\\"[slot=container-start]\\\"></ng-content>\\n<ng-container *ngIf=\\\"navigation && showNavigation\\\">\\n  <div class=\\\"swiper-button-prev\\\" #prevElRef></div>\\n  <div class=\\\"swiper-button-next\\\" #nextElRef></div>\\n</ng-container>\\n<div *ngIf=\\\"scrollbar && showScrollbar\\\" class=\\\"swiper-scrollbar\\\" #scrollbarElRef></div>\\n<div *ngIf=\\\"pagination && showPagination\\\" class=\\\"swiper-pagination\\\" #paginationElRef></div>\\n<div [ngClass]=\\\"wrapperClass\\\" [attr.id]=\\\"id\\\">\\n  <ng-content select=\\\"[slot=wrapper-start]\\\"></ng-content>\\n  <ng-template\\n    *ngTemplateOutlet=\\\"\\n      slidesTemplate;\\n      context: {\\n        loopSlides: prependSlides,\\n        key: 'prepend'\\n      }\\n    \\\"\\n  ></ng-template>\\n  <ng-template\\n    *ngTemplateOutlet=\\\"\\n      slidesTemplate;\\n      context: {\\n        loopSlides: activeSlides,\\n        key: ''\\n      }\\n    \\\"\\n  ></ng-template>\\n  <ng-template\\n    *ngTemplateOutlet=\\\"\\n      slidesTemplate;\\n      context: {\\n        loopSlides: appendSlides,\\n        key: 'append'\\n      }\\n    \\\"\\n  ></ng-template>\\n  <ng-content select=\\\"[slot=wrapper-end]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[slot=container-end]\\\"></ng-content>\\n\\n<ng-template #slidesTemplate let-loopSlides=\\\"loopSlides\\\" let-slideKey=\\\"key\\\">\\n  <div\\n    *ngFor=\\\"let slide of loopSlides | async\\\"\\n    [ngClass]=\\\"\\n      (slide.class ? slide.class + ' ' : '') +\\n      slideClass +\\n      (slideKey !== '' ? ' ' + slideDuplicateClass : '')\\n    \\\"\\n    [attr.data-swiper-slide-index]=\\\"slide.virtualIndex ? slide.virtualIndex : slide.slideIndex\\\"\\n    [attr.data-swiper-autoplay]=\\\"slide.autoplayDelay\\\"\\n    [style]=\\\"style\\\"\\n    [ngSwitch]=\\\"slide.zoom\\\"\\n  >\\n    <div *ngSwitchCase=\\\"true\\\" [ngClass]=\\\"zoomContainerClass\\\">\\n      <ng-template\\n        [ngTemplateOutlet]=\\\"slide.template\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          $implicit: slide.slideData\\n        }\\\"\\n      ></ng-template>\\n    </div>\\n    <ng-container *ngSwitchDefault>\\n      <ng-template\\n        [ngTemplateOutlet]=\\\"slide.template\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          $implicit: slide.slideData\\n        }\\\"\\n      ></ng-template>\\n    </ng-container>\\n  </div>\\n</ng-template>\\n\" }]\n        }], ctorParameters: function () {\n        return [{ type: i0.NgZone }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: Object, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { enabled: [{\n                type: Input\n            }], on: [{\n                type: Input\n            }], direction: [{\n                type: Input\n            }], touchEventsTarget: [{\n                type: Input\n            }], initialSlide: [{\n                type: Input\n            }], speed: [{\n                type: Input\n            }], cssMode: [{\n                type: Input\n            }], updateOnWindowResize: [{\n                type: Input\n            }], resizeObserver: [{\n                type: Input\n            }], nested: [{\n                type: Input\n            }], focusableElements: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], preventInteractionOnTransition: [{\n                type: Input\n            }], userAgent: [{\n                type: Input\n            }], url: [{\n                type: Input\n            }], edgeSwipeDetection: [{\n                type: Input\n            }], edgeSwipeThreshold: [{\n                type: Input\n            }], freeMode: [{\n                type: Input\n            }], autoHeight: [{\n                type: Input\n            }], setWrapperSize: [{\n                type: Input\n            }], virtualTranslate: [{\n                type: Input\n            }], effect: [{\n                type: Input\n            }], breakpoints: [{\n                type: Input\n            }], spaceBetween: [{\n                type: Input\n            }], slidesPerView: [{\n                type: Input\n            }], maxBackfaceHiddenSlides: [{\n                type: Input\n            }], grid: [{\n                type: Input\n            }], slidesPerGroup: [{\n                type: Input\n            }], slidesPerGroupSkip: [{\n                type: Input\n            }], centeredSlides: [{\n                type: Input\n            }], centeredSlidesBounds: [{\n                type: Input\n            }], slidesOffsetBefore: [{\n                type: Input\n            }], slidesOffsetAfter: [{\n                type: Input\n            }], normalizeSlideIndex: [{\n                type: Input\n            }], centerInsufficientSlides: [{\n                type: Input\n            }], watchOverflow: [{\n                type: Input\n            }], roundLengths: [{\n                type: Input\n            }], touchRatio: [{\n                type: Input\n            }], touchAngle: [{\n                type: Input\n            }], simulateTouch: [{\n                type: Input\n            }], shortSwipes: [{\n                type: Input\n            }], longSwipes: [{\n                type: Input\n            }], longSwipesRatio: [{\n                type: Input\n            }], longSwipesMs: [{\n                type: Input\n            }], followFinger: [{\n                type: Input\n            }], allowTouchMove: [{\n                type: Input\n            }], threshold: [{\n                type: Input\n            }], touchMoveStopPropagation: [{\n                type: Input\n            }], touchStartPreventDefault: [{\n                type: Input\n            }], touchStartForcePreventDefault: [{\n                type: Input\n            }], touchReleaseOnEdges: [{\n                type: Input\n            }], uniqueNavElements: [{\n                type: Input\n            }], resistance: [{\n                type: Input\n            }], resistanceRatio: [{\n                type: Input\n            }], watchSlidesProgress: [{\n                type: Input\n            }], grabCursor: [{\n                type: Input\n            }], preventClicks: [{\n                type: Input\n            }], preventClicksPropagation: [{\n                type: Input\n            }], slideToClickedSlide: [{\n                type: Input\n            }], preloadImages: [{\n                type: Input\n            }], updateOnImagesReady: [{\n                type: Input\n            }], loop: [{\n                type: Input\n            }], loopAdditionalSlides: [{\n                type: Input\n            }], loopedSlides: [{\n                type: Input\n            }], loopedSlidesLimit: [{\n                type: Input\n            }], loopFillGroupWithBlank: [{\n                type: Input\n            }], loopPreventsSlide: [{\n                type: Input\n            }], rewind: [{\n                type: Input\n            }], allowSlidePrev: [{\n                type: Input\n            }], allowSlideNext: [{\n                type: Input\n            }], swipeHandler: [{\n                type: Input\n            }], noSwiping: [{\n                type: Input\n            }], noSwipingClass: [{\n                type: Input\n            }], noSwipingSelector: [{\n                type: Input\n            }], passiveListeners: [{\n                type: Input\n            }], containerModifierClass: [{\n                type: Input\n            }], slideClass: [{\n                type: Input\n            }], slideBlankClass: [{\n                type: Input\n            }], slideActiveClass: [{\n                type: Input\n            }], slideDuplicateActiveClass: [{\n                type: Input\n            }], slideVisibleClass: [{\n                type: Input\n            }], slideDuplicateClass: [{\n                type: Input\n            }], slideNextClass: [{\n                type: Input\n            }], slideDuplicateNextClass: [{\n                type: Input\n            }], slidePrevClass: [{\n                type: Input\n            }], slideDuplicatePrevClass: [{\n                type: Input\n            }], wrapperClass: [{\n                type: Input\n            }], runCallbacksOnInit: [{\n                type: Input\n            }], observeParents: [{\n                type: Input\n            }], observeSlideChildren: [{\n                type: Input\n            }], a11y: [{\n                type: Input\n            }], autoplay: [{\n                type: Input\n            }], controller: [{\n                type: Input\n            }], coverflowEffect: [{\n                type: Input\n            }], cubeEffect: [{\n                type: Input\n            }], fadeEffect: [{\n                type: Input\n            }], flipEffect: [{\n                type: Input\n            }], creativeEffect: [{\n                type: Input\n            }], cardsEffect: [{\n                type: Input\n            }], hashNavigation: [{\n                type: Input\n            }], history: [{\n                type: Input\n            }], keyboard: [{\n                type: Input\n            }], lazy: [{\n                type: Input\n            }], mousewheel: [{\n                type: Input\n            }], parallax: [{\n                type: Input\n            }], thumbs: [{\n                type: Input\n            }], zoom: [{\n                type: Input\n            }], slidesPerGroupAuto: [{\n                type: Input\n            }], class: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], navigation: [{\n                type: Input\n            }], pagination: [{\n                type: Input\n            }], scrollbar: [{\n                type: Input\n            }], virtual: [{\n                type: Input\n            }], config: [{\n                type: Input\n            }], s__beforeBreakpoint: [{\n                type: Output,\n                args: ['_beforeBreakpoint']\n            }], s__containerClasses: [{\n                type: Output,\n                args: ['_containerClasses']\n            }], s__slideClass: [{\n                type: Output,\n                args: ['_slideClass']\n            }], s__swiper: [{\n                type: Output,\n                args: ['_swiper']\n            }], s_activeIndexChange: [{\n                type: Output,\n                args: ['activeIndexChange']\n            }], s_afterInit: [{\n                type: Output,\n                args: ['afterInit']\n            }], s_autoplay: [{\n                type: Output,\n                args: ['autoplay']\n            }], s_autoplayStart: [{\n                type: Output,\n                args: ['autoplayStart']\n            }], s_autoplayStop: [{\n                type: Output,\n                args: ['autoplayStop']\n            }], s_autoplayPause: [{\n                type: Output,\n                args: ['autoplayPause']\n            }], s_autoplayResume: [{\n                type: Output,\n                args: ['autoplayResume']\n            }], s_beforeDestroy: [{\n                type: Output,\n                args: ['beforeDestroy']\n            }], s_beforeInit: [{\n                type: Output,\n                args: ['beforeInit']\n            }], s_beforeLoopFix: [{\n                type: Output,\n                args: ['beforeLoopFix']\n            }], s_beforeResize: [{\n                type: Output,\n                args: ['beforeResize']\n            }], s_beforeSlideChangeStart: [{\n                type: Output,\n                args: ['beforeSlideChangeStart']\n            }], s_beforeTransitionStart: [{\n                type: Output,\n                args: ['beforeTransitionStart']\n            }], s_breakpoint: [{\n                type: Output,\n                args: ['breakpoint']\n            }], s_changeDirection: [{\n                type: Output,\n                args: ['changeDirection']\n            }], s_click: [{\n                type: Output,\n                args: ['click']\n            }], s_doubleTap: [{\n                type: Output,\n                args: ['doubleTap']\n            }], s_doubleClick: [{\n                type: Output,\n                args: ['doubleClick']\n            }], s_destroy: [{\n                type: Output,\n                args: ['destroy']\n            }], s_fromEdge: [{\n                type: Output,\n                args: ['fromEdge']\n            }], s_hashChange: [{\n                type: Output,\n                args: ['hashChange']\n            }], s_hashSet: [{\n                type: Output,\n                args: ['hashSet']\n            }], s_imagesReady: [{\n                type: Output,\n                args: ['imagesReady']\n            }], s_init: [{\n                type: Output,\n                args: ['init']\n            }], s_keyPress: [{\n                type: Output,\n                args: ['keyPress']\n            }], s_lazyImageLoad: [{\n                type: Output,\n                args: ['lazyImageLoad']\n            }], s_lazyImageReady: [{\n                type: Output,\n                args: ['lazyImageReady']\n            }], s_loopFix: [{\n                type: Output,\n                args: ['loopFix']\n            }], s_momentumBounce: [{\n                type: Output,\n                args: ['momentumBounce']\n            }], s_navigationHide: [{\n                type: Output,\n                args: ['navigationHide']\n            }], s_navigationShow: [{\n                type: Output,\n                args: ['navigationShow']\n            }], s_navigationPrev: [{\n                type: Output,\n                args: ['navigationPrev']\n            }], s_navigationNext: [{\n                type: Output,\n                args: ['navigationNext']\n            }], s_observerUpdate: [{\n                type: Output,\n                args: ['observerUpdate']\n            }], s_orientationchange: [{\n                type: Output,\n                args: ['orientationchange']\n            }], s_paginationHide: [{\n                type: Output,\n                args: ['paginationHide']\n            }], s_paginationRender: [{\n                type: Output,\n                args: ['paginationRender']\n            }], s_paginationShow: [{\n                type: Output,\n                args: ['paginationShow']\n            }], s_paginationUpdate: [{\n                type: Output,\n                args: ['paginationUpdate']\n            }], s_progress: [{\n                type: Output,\n                args: ['progress']\n            }], s_reachBeginning: [{\n                type: Output,\n                args: ['reachBeginning']\n            }], s_reachEnd: [{\n                type: Output,\n                args: ['reachEnd']\n            }], s_realIndexChange: [{\n                type: Output,\n                args: ['realIndexChange']\n            }], s_resize: [{\n                type: Output,\n                args: ['resize']\n            }], s_scroll: [{\n                type: Output,\n                args: ['scroll']\n            }], s_scrollbarDragEnd: [{\n                type: Output,\n                args: ['scrollbarDragEnd']\n            }], s_scrollbarDragMove: [{\n                type: Output,\n                args: ['scrollbarDragMove']\n            }], s_scrollbarDragStart: [{\n                type: Output,\n                args: ['scrollbarDragStart']\n            }], s_setTransition: [{\n                type: Output,\n                args: ['setTransition']\n            }], s_setTranslate: [{\n                type: Output,\n                args: ['setTranslate']\n            }], s_slideChange: [{\n                type: Output,\n                args: ['slideChange']\n            }], s_slideChangeTransitionEnd: [{\n                type: Output,\n                args: ['slideChangeTransitionEnd']\n            }], s_slideChangeTransitionStart: [{\n                type: Output,\n                args: ['slideChangeTransitionStart']\n            }], s_slideNextTransitionEnd: [{\n                type: Output,\n                args: ['slideNextTransitionEnd']\n            }], s_slideNextTransitionStart: [{\n                type: Output,\n                args: ['slideNextTransitionStart']\n            }], s_slidePrevTransitionEnd: [{\n                type: Output,\n                args: ['slidePrevTransitionEnd']\n            }], s_slidePrevTransitionStart: [{\n                type: Output,\n                args: ['slidePrevTransitionStart']\n            }], s_slideResetTransitionStart: [{\n                type: Output,\n                args: ['slideResetTransitionStart']\n            }], s_slideResetTransitionEnd: [{\n                type: Output,\n                args: ['slideResetTransitionEnd']\n            }], s_sliderMove: [{\n                type: Output,\n                args: ['sliderMove']\n            }], s_sliderFirstMove: [{\n                type: Output,\n                args: ['sliderFirstMove']\n            }], s_slidesLengthChange: [{\n                type: Output,\n                args: ['slidesLengthChange']\n            }], s_slidesGridLengthChange: [{\n                type: Output,\n                args: ['slidesGridLengthChange']\n            }], s_snapGridLengthChange: [{\n                type: Output,\n                args: ['snapGridLengthChange']\n            }], s_snapIndexChange: [{\n                type: Output,\n                args: ['snapIndexChange']\n            }], s_tap: [{\n                type: Output,\n                args: ['tap']\n            }], s_toEdge: [{\n                type: Output,\n                args: ['toEdge']\n            }], s_touchEnd: [{\n                type: Output,\n                args: ['touchEnd']\n            }], s_touchMove: [{\n                type: Output,\n                args: ['touchMove']\n            }], s_touchMoveOpposite: [{\n                type: Output,\n                args: ['touchMoveOpposite']\n            }], s_touchStart: [{\n                type: Output,\n                args: ['touchStart']\n            }], s_transitionEnd: [{\n                type: Output,\n                args: ['transitionEnd']\n            }], s_transitionStart: [{\n                type: Output,\n                args: ['transitionStart']\n            }], s_update: [{\n                type: Output,\n                args: ['update']\n            }], s_zoomChange: [{\n                type: Output,\n                args: ['zoomChange']\n            }], s_swiper: [{\n                type: Output,\n                args: ['swiper']\n            }], s_lock: [{\n                type: Output,\n                args: ['lock']\n            }], s_unlock: [{\n                type: Output,\n                args: ['unlock']\n            }], prevElRef: [{\n                type: ViewChild,\n                args: ['prevElRef', { static: false }]\n            }], nextElRef: [{\n                type: ViewChild,\n                args: ['nextElRef', { static: false }]\n            }], scrollbarElRef: [{\n                type: ViewChild,\n                args: ['scrollbarElRef', { static: false }]\n            }], paginationElRef: [{\n                type: ViewChild,\n                args: ['paginationElRef', { static: false }]\n            }], slidesEl: [{\n                type: ContentChildren,\n                args: [SwiperSlideDirective, { descendants: false, emitDistinctChangesOnly: true }]\n            }], containerClasses: [{\n                type: HostBinding,\n                args: ['class']\n            }] } });\n\nclass SwiperModule {\n}\nSwiperModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nSwiperModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperModule, declarations: [SwiperComponent, SwiperSlideDirective], imports: [CommonModule], exports: [SwiperComponent, SwiperSlideDirective] });\nSwiperModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.11\", ngImport: i0, type: SwiperModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [SwiperComponent, SwiperSlideDirective],\n                    exports: [SwiperComponent, SwiperSlideDirective],\n                    imports: [CommonModule],\n                }]\n        }] });\n\n/*\n * Public API Surface of angular\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SwiperComponent, SwiperModule, SwiperSlideDirective };\n"]}