{"version":3,"mappings":"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","names":["FirebaseAnalyticsWeb","constructor","not_supported_mssg","options_missing_mssg","duplicate_app_mssg","analytics_missing_mssg","scripts","key","src","ready","Promise","resolve","readyResolver","configure","initializeFirebase","options","reject","_this","hasFirebaseInitialized","app","window","firebase","initializeApp","analyticsRef","analytics","setUserId","_this2","userId","undefined","setUserProperty","_this3","name","value","property","setUserProperties","getAppInstanceId","_reject","setScreenName","_options","reset","logEvent","_this4","params","setCollectionEnabled","_this5","enabled","setAnalyticsCollectionEnabled","setSessionTimeoutDuration","_resolve","enable","_this6","disable","_this7","_this8","loadScripts","interval","setInterval","clearInterval","firebaseAppScript","firebaseAnalyticsScript","_this9","map","script","document","getElementById","loadScript","id","file","createElement","type","onload","onerror","querySelector","appendChild","firebaseApps","apps","length","WebPlugin"],"sources":["webpack:///node_modules/@capacitor-community/firebase-analytics/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from \"@capacitor/core\";\nexport class FirebaseAnalyticsWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.not_supported_mssg = \"This method is not supported\";\n        this.options_missing_mssg = \"Firebase options are missing\";\n        this.duplicate_app_mssg = \"Firebase app already exists\";\n        this.analytics_missing_mssg = \"Firebase analytics is not initialized. Make sure initializeFirebase() is called once\";\n        this.scripts = [\n            {\n                key: \"firebase-app\",\n                src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-app.js\",\n            },\n            {\n                key: \"firebase-ac\",\n                src: \"https://www.gstatic.com/firebasejs/8.2.3/firebase-analytics.js\",\n            },\n        ];\n        this.ready = new Promise((resolve) => (this.readyResolver = resolve));\n        this.configure();\n    }\n    /**\n     * Configure and Initialize FirebaseApp if not present\n     * @param options - web app's Firebase configuration\n     * @returns firebase analytics object reference\n     * Platform: Web\n     */\n    initializeFirebase(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (this.hasFirebaseInitialized()) {\n                reject(this.duplicate_app_mssg);\n                return;\n            }\n            if (!options) {\n                reject(this.options_missing_mssg);\n                return;\n            }\n            const app = window.firebase.initializeApp(options);\n            this.analyticsRef = app.analytics();\n            resolve(this.analyticsRef);\n        });\n    }\n    /**\n     * Sets the user ID property.\n     * @param options - userId: unique identifier of the user to log\n     * Platform: Web/Android/iOS\n     */\n    setUserId(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { userId } = options || { userId: undefined };\n            if (!userId) {\n                reject(\"userId property is missing\");\n                return;\n            }\n            this.analyticsRef.setUserId(userId);\n            resolve();\n        });\n    }\n    /**\n     * Sets a user property to a given value.\n     * @param options - name: The name of the user property to set.\n     *                  value: The value of the user property.\n     * Platform: Web/Android/iOS\n     */\n    setUserProperty(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { name, value } = options || { name: undefined, value: undefined };\n            if (!name) {\n                reject(\"name property is missing\");\n                return;\n            }\n            if (!value) {\n                reject(\"value property is missing\");\n                return;\n            }\n            let property = {};\n            property[name] = value;\n            this.analyticsRef.setUserProperties(property);\n            resolve();\n        });\n    }\n    /**\n     * Retrieves the app instance id from the service.\n     * @returns - instanceId: current instance if of the app\n     * Platform: Web/Android/iOS\n     */\n    getAppInstanceId() {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Sets the current screen name, which specifies the current visual context in your app.\n     * @param options - screenName: the activity to which the screen name and class name apply.\n     *                  nameOverride: the name of the current screen. Set to null to clear the current screen name.\n     * Platform: Android/iOS\n     */\n    setScreenName(_options) {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Clears all analytics data for this app from the device and resets the app instance id.\n     * Platform: Android/iOS\n     */\n    reset() {\n        return new Promise((resolve, _reject) => resolve);\n    }\n    /**\n     * Logs an app event.\n     * @param options - name: unique name of the event\n     *                  params: the map of event parameters.\n     * Platform: Web/Android/iOS\n     */\n    logEvent(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { name, params } = options || {\n                name: undefined,\n                params: undefined,\n            };\n            if (!name) {\n                reject(\"name property is missing\");\n                return;\n            }\n            this.analyticsRef.logEvent(name, params);\n            resolve();\n        });\n    }\n    /**\n     * Sets whether analytics collection is enabled for this app on this device.\n     * @param options - enabled: boolean true/false to enable/disable logging\n     * Platform: Web/Android/iOS\n     */\n    setCollectionEnabled(options) {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            const { enabled } = options || { enabled: false };\n            this.analyticsRef.setAnalyticsCollectionEnabled(enabled);\n            resolve();\n        });\n    }\n    /**\n     * Sets the duration of inactivity that terminates the current session.\n     * @param options - duration: duration of inactivity\n     * Platform: Android/iOS\n     */\n    setSessionTimeoutDuration(_options) {\n        return new Promise((_resolve, reject) => {\n            reject(this.not_supported_mssg);\n        });\n    }\n    /**\n     * Returns analytics reference object\n     */\n    get remoteConfig() {\n        return this.analyticsRef;\n    }\n    enable() {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            this.analyticsRef.setAnalyticsCollectionEnabled(true);\n            resolve();\n        });\n    }\n    disable() {\n        return new Promise(async (resolve, reject) => {\n            await this.ready;\n            if (!this.analyticsRef) {\n                reject(this.analytics_missing_mssg);\n                return;\n            }\n            this.analyticsRef.setAnalyticsCollectionEnabled(false);\n            resolve();\n        });\n    }\n    /**\n     * Ready resolver to check and load firebase analytics\n     */\n    async configure() {\n        try {\n            await this.loadScripts();\n            if (window.firebase &&\n                window.firebase.analytics &&\n                this.hasFirebaseInitialized()) {\n                this.analyticsRef = window.firebase.analytics();\n            }\n        }\n        catch (error) {\n            throw error;\n        }\n        const interval = setInterval(() => {\n            if (!window.firebase) {\n                return;\n            }\n            clearInterval(interval);\n            this.readyResolver();\n        }, 50);\n    }\n    /**\n     * Check for existing loaded script and load new scripts\n     */\n    loadScripts() {\n        const firebaseAppScript = this.scripts[0];\n        const firebaseAnalyticsScript = this.scripts[1];\n        return new Promise(async (resolve, _reject) => {\n            const scripts = this.scripts.map((script) => script.key);\n            if (document.getElementById(scripts[0]) &&\n                document.getElementById(scripts[1])) {\n                return resolve(null);\n            }\n            await this.loadScript(firebaseAppScript.key, firebaseAppScript.src);\n            await this.loadScript(firebaseAnalyticsScript.key, firebaseAnalyticsScript.src);\n            resolve(null);\n        });\n    }\n    /**\n     * Loaded single script with provided id and source\n     * @param id - unique identifier of the script\n     * @param src - source of the script\n     */\n    loadScript(id, src) {\n        return new Promise((resolve, reject) => {\n            const file = document.createElement(\"script\");\n            file.type = \"text/javascript\";\n            file.src = src;\n            file.id = id;\n            file.onload = resolve;\n            file.onerror = reject;\n            document.querySelector(\"head\").appendChild(file);\n        });\n    }\n    /**\n     * Returns true/false if firebase object reference exists inside window\n     */\n    hasFirebaseInitialized() {\n        if (!window.firebase) {\n            return false;\n        }\n        const firebaseApps = window.firebase.apps;\n        if (firebaseApps && firebaseApps.length === 0) {\n            return false;\n        }\n        return true;\n    }\n}\n"]}