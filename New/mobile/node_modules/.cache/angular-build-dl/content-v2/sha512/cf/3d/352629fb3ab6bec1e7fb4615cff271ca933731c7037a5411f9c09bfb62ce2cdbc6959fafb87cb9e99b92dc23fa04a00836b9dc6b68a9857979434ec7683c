{"version":3,"mappings":"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","names":["routes","path","component","_settings_page__WEBPACK_IMPORTED_MODULE_0__","loadChildren","Promise","then","m","SummaryPageModule","__webpack_require__","NotificationSettingsPageModule","HelpPageModule","PrivacyPageModule","FeedbackPageModule","AccountAndPersonalInfoPageModule","ContactACoachPageModule","ManageAccountsPageModule","SettingsPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","SettingsPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","_settings_routing_module__WEBPACK_IMPORTED_MODULE_0__","_shared_lib_components_settings_components_menu_menu_module__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_components_loading_loading_module__WEBPACK_IMPORTED_MODULE_3__","declarations","_settings_page__WEBPACK_IMPORTED_MODULE_1__","SettingsPage","headerType","authService","vaultService","platform","modalController","settingsService","items","JSON","parse","stringify","headername","btnright","buttonRight","name","link","getSettingsDisplayFlags","settingsDisplayFlags","setMenuItems","publish","type","_shared_lib_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_2__","actionOption","isFaceIDAvailableOnDevice","faceIDAllowed","faceIDEnabled","isFaceIDEnabled","getBiometricsLabel","biometricsText","getBiometricsIconName","biometricsIcon","is","marginTop","route","options","option","id","text","displayContactLink","menuConfig","push","url","icon","loading","enableFaceID","result","setDefaultFaceIDDisabled","disableFaceID","create","_shared_lib_components_alert_alert_component__WEBPACK_IMPORTED_MODULE_7__","cssClass","swipeToClose","componentProps","titleMessage","signOutQuestion","yesButtonTxt","button","noButtonTxt","close","saveFunction","res","logout","modal","present","_shared_lib_services_header_type_header_type_service__WEBPACK_IMPORTED_MODULE_3__","_shared_service_authentication_authentication_service__WEBPACK_IMPORTED_MODULE_5__","_shared_service_authentication_vault_service__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_10__","_shared_lib_services_settings_settings_service__WEBPACK_IMPORTED_MODULE_8__","selector","template","AlertComponent","pageText","buttons","yes","no","saved","dismiss","save","error","saving","closeDialog","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","LoadingComponent","_angular_core__WEBPACK_IMPORTED_MODULE_2__","LoadingComponentModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_loading_component__WEBPACK_IMPORTED_MODULE_0__","MenuComponent","router","helpService","inAppBrowserService","mxService","qualtricsService","utilityService","platformService","isWeb","getIsWeb","isDesktop","subscribe","data","subscription","getMxAccountConnect","mxAccountsData","accounts","length","settingsOption","manageAcctsId","config","filter","value","item","feedbackId","navigateByUrl","setProperty","_shared_lib_services_qualtrics_constants_qualtrics_properties_enum__WEBPACK_IMPORTED_MODULE_9__","evaluateInterceptId","_shared_lib_services_qualtrics_constants_qualtrics_intercepts_enum__WEBPACK_IMPORTED_MODULE_8__","termsId","openInAppBrowser","TCUrl","_mobile_app_modules_shared_service_in_app_browser_controllers_voya_iab_controller__WEBPACK_IMPORTED_MODULE_3__","window","open","isHelp","setCategoryData","category","unsubscribe","_angular_router__WEBPACK_IMPORTED_MODULE_13__","_shared_lib_services_help_help_service__WEBPACK_IMPORTED_MODULE_5__","_mobile_app_modules_shared_service_in_app_browser_in_app_browser_service__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_services_mx_service_mx_service__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_services_qualtrics_qualtrics_service__WEBPACK_IMPORTED_MODULE_7__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_10__","_shared_lib_services_platform_platform_service__WEBPACK_IMPORTED_MODULE_11__","_angular_core__WEBPACK_IMPORTED_MODULE_14__","MenuComponentModule","_menu_component__WEBPACK_IMPORTED_MODULE_0__","HelpService","content","helpContent","providedIn","QualtricsIntercept","endpoints","getPreferenceNudge","SettingsService","baseService","appendBaseUrlToEndpoints","_constants_endpoints__WEBPACK_IMPORTED_MODULE_2__","refresh","displayFlag","get","console","log","suppressAppointment","preferencesContentPromise","_shared_lib_services_base_base_factory_provider__WEBPACK_IMPORTED_MODULE_0__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__"],"sources":["webpack:///mobile/src/app/modules/features/settings/settings-routing.module.ts","webpack:///mobile/src/app/modules/features/settings/settings.module.ts","webpack:///mobile/src/app/modules/features/settings/settings.page.ts","webpack:///shared-lib/components/alert/alert.component.ts","webpack:///shared-lib/components/loading/loading.component.ts","webpack:///shared-lib/components/loading/loading.module.ts","webpack:///shared-lib/components/settings/components/menu/menu.component.ts","webpack:///shared-lib/components/settings/components/menu/menu.module.ts","webpack:///shared-lib/services/help/help.service.ts","webpack:///shared-lib/services/qualtrics/constants/qualtrics-intercepts.enum.ts","webpack:///shared-lib/services/settings/constants/endpoints.ts","webpack:///shared-lib/services/settings/settings.service.ts","webpack:///mobile/src/app/modules/features/settings/settings.page.html","webpack:///shared-lib/components/alert/alert.component.html","webpack:///shared-lib/components/loading/loading.component.html","webpack:///shared-lib/components/settings/components/menu/menu.component.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {SettingsPage} from './settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsPage,\n  },\n  {\n    path: 'summary',\n    loadChildren: () =>\n      import(\n        '@shared-lib/components/settings/components/summary/summary.module'\n      ).then(m => m.SummaryPageModule),\n  },\n  {\n    path: 'notification-settings',\n    loadChildren: () =>\n      import(\n        '@shared-lib/components/settings/components/notification-settings/notification-settings.module'\n      ).then(m => m.NotificationSettingsPageModule),\n  },\n  {\n    path: 'help',\n    loadChildren: () =>\n      import(\n        '@shared-lib/components/settings/components/help/help.module'\n      ).then(m => m.HelpPageModule),\n  },\n  {\n    path: 'privacy',\n    loadChildren: () =>\n      import(\n        '@shared-lib/components/settings/components/privacy/privacy.module'\n      ).then(m => m.PrivacyPageModule),\n  },\n  {\n    path: 'feedback',\n    loadChildren: () =>\n      import(\n        '@shared-lib/components/settings/components/feedback/feedback.module'\n      ).then(m => m.FeedbackPageModule),\n  },\n  {\n    path: 'account-and-personal-info',\n    loadChildren: () =>\n      import(\n        '@shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info.module'\n      ).then(m => m.AccountAndPersonalInfoPageModule),\n  },\n  {\n    path: 'contact-a-coach',\n    loadChildren: () =>\n      import(\n        '@shared-lib/components/settings/components/contact-a-coach/contact-a-coach.module'\n      ).then(m => m.ContactACoachPageModule),\n  },\n\n  {\n    path: 'manage-accounts',\n    loadChildren: () =>\n      import(\n        '@shared-lib/modules/accounts/manage-accounts/manage-accounts.module'\n      ).then(m => m.ManageAccountsPageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SettingsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {SettingsPageRoutingModule} from './settings-routing.module';\nimport {SettingsPage} from './settings.page';\nimport {MenuComponentModule} from '@shared-lib/components/settings/components/menu/menu.module';\n\nimport {LoadingComponentModule} from '@shared-lib/components/loading/loading.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SettingsPageRoutingModule,\n    MenuComponentModule,\n    LoadingComponentModule,\n  ],\n  declarations: [SettingsPage],\n})\nexport class SettingsPageModule {}\n","import {MenuConfig} from '@shared-lib/components/settings/components/menu/model/menuConfig.model';\nimport {Component, OnInit} from '@angular/core';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport {HeaderTypeService} from '@shared-lib/services/header-type/header-type.service';\nimport * as settingsOption from '@shared-lib/components/settings/constants/settingsOption.json';\nimport {AuthenticationService} from '../../shared/service/authentication/authentication.service';\nimport {VaultService} from '../../shared/service/authentication/vault.service';\nimport {ModalController, Platform} from '@ionic/angular';\nimport {AlertComponent} from '@shared-lib/components/alert/alert.component';\nimport {SettingsService} from '@shared-lib/services/settings/settings.service';\nimport {SettingsDisplayFlags} from '@shared-lib/services/settings/models/settings.model';\nimport {ActionOptions} from '@shared-lib/models/ActionOptions.model';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.page.html',\n  styleUrls: ['./settings.page.scss'],\n})\nexport class SettingsPage implements OnInit {\n  menuConfig: MenuConfig = {items: []};\n  options = JSON.parse(JSON.stringify(settingsOption)).default;\n  actionOption: ActionOptions = {\n    headername: 'More',\n    btnright: true,\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n  faceIDEnabled = false;\n  faceIDAllowed = false;\n  biometricsText: string;\n  biometricsIcon: string;\n  marginTop = '28px';\n  loading = true;\n  constructor(\n    private headerType: HeaderTypeService,\n    private authService: AuthenticationService,\n    private vaultService: VaultService,\n    private platform: Platform,\n    private modalController: ModalController,\n    private settingsService: SettingsService\n  ) {}\n\n  async ngOnInit() {\n    const settingsDisplayFlags = await this.settingsService.getSettingsDisplayFlags();\n    this.setMenuItems(settingsDisplayFlags);\n  }\n\n  async ionViewWillEnter() {\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n\n    this.faceIDAllowed = await this.vaultService.isFaceIDAvailableOnDevice();\n    this.faceIDEnabled = this.vaultService.isFaceIDEnabled();\n    this.biometricsText = await this.authService.getBiometricsLabel();\n    this.biometricsIcon = await this.authService.getBiometricsIconName();\n    if (this.platform.is('ios')) {\n      this.marginTop = '24px';\n    }\n  }\n\n  setMenuItems(settingsDisplayFlags: SettingsDisplayFlags) {\n    let route;\n    for (const option of this.options.option) {\n      if (\n        option.id === 'feedback' ||\n        option.text === 'Terms of Use' ||\n        option.id == 'manageAccounts'\n      ) {\n        route = '';\n      } else {\n        route = '/settings/';\n      }\n      if (\n        option.id !== 'contactAdvisor' ||\n        settingsDisplayFlags.displayContactLink\n      ) {\n        this.menuConfig.items.push({\n          id: option.id,\n          route: route + option.url,\n          text: option.text,\n          icon: option.icon,\n        });\n      }\n    }\n    this.loading = false;\n  }\n\n  onFaceIDChanged() {\n    const faceIDEnabled = this.vaultService.isFaceIDEnabled();\n    if (this.faceIDEnabled && !faceIDEnabled) {\n      this.vaultService.enableFaceID().then(result => {\n        if (result) {\n          this.vaultService.setDefaultFaceIDDisabled(false);\n        } else {\n          this.faceIDEnabled = false;\n        }\n      });\n    } else if (!this.faceIDEnabled && faceIDEnabled) {\n      this.vaultService.disableFaceID();\n      this.vaultService.setDefaultFaceIDDisabled(true);\n    }\n  }\n\n  async logout() {\n    const modal = await this.modalController.create({\n      component: AlertComponent,\n      cssClass: 'modal-not-fullscreen',\n      swipeToClose: false,\n      componentProps: {\n        titleMessage: this.options.signOutQuestion,\n        yesButtonTxt: this.options.button,\n        noButtonTxt: this.options.close,\n        saveFunction: async (): Promise<boolean> => {\n          return new Promise(res => {\n            res(true);\n            this.authService.logout();\n          });\n        },\n      },\n    });\n    return modal.present();\n  }\n}\n","import {ModalController} from '@ionic/angular';\nimport {Component, Input} from '@angular/core';\nimport * as pageText from './constants/pageText.json';\n\ninterface SaveFunction {\n  (): Promise<boolean>;\n}\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n})\nexport class AlertComponent {\n  pageText = JSON.parse(JSON.stringify(pageText)).default;\n\n  @Input() public titleMessage: string;\n  @Input() public message: string;\n  @Input() public imageUrl: string = null;\n  @Input() public yesButtonTxt = this.pageText.buttons.yes;\n  @Input() public noButtonTxt = this.pageText.buttons.no;\n\n  public saveFunction: SaveFunction;\n  saving: boolean;\n  error: boolean;\n\n  constructor(private modalController: ModalController) {}\n\n  closeDialog(saved = false) {\n    this.modalController.dismiss({\n      saved: saved,\n    });\n  }\n\n  async closeDialogClicked(save: boolean) {\n    this.error = false;\n    if (save) {\n      this.saving = true;\n      if (this.saveFunction) {\n        const result = await this.saveFunction();\n        this.saving = false;\n        if (result) {\n          this.closeDialog(true);\n        } else {\n          this.error = true;\n        }\n      } else {\n        this.closeDialog();\n      }\n    } else {\n      this.closeDialog();\n    }\n  }\n}\n","import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent {\n  @Input() public loading: boolean;\n  @Input() public center = false;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {LoadingComponent} from './loading.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [LoadingComponent],\n  exports: [LoadingComponent],\n})\nexport class LoadingComponentModule {}\n","import {Subscription} from 'rxjs';\nimport {MXService} from '@shared-lib/services/mx-service/mx.service';\nimport {VoyaIABController} from '@mobile/app/modules/shared/service/in-app-browser/controllers/voya-iab-controller';\nimport {InAppBroserService} from '@mobile/app/modules/shared/service/in-app-browser/in-app-browser.service';\nimport {HelpService} from '@shared-lib/services/help/help.service';\nimport {Router} from '@angular/router';\nimport {Component, Input} from '@angular/core';\nimport {\n  MenuConfig,\n  MenuConfigItems,\n  MenuOptions,\n} from './model/menuConfig.model';\nimport * as settingsOption from './constants/menuOptions.json';\nimport {QualtricsService} from '@shared-lib/services/qualtrics/qualtrics.service';\nimport {QualtricsIntercept} from '@shared-lib/services/qualtrics/constants/qualtrics-intercepts.enum';\nimport {QualtricsProperty} from '@shared-lib/services/qualtrics/constants/qualtrics-properties.enum';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PlatformService} from '@shared-lib/services/platform/platform.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['menu.component.scss'],\n})\nexport class MenuComponent {\n  settingsOption: MenuOptions = settingsOption;\n  isWeb: boolean;\n  isDesktop: boolean;\n  @Input() selectedTab: string;\n  @Input() config: MenuConfig;\n  @Input() isHelp: boolean;\n  subscription: Subscription;\n\n  constructor(\n    private router: Router,\n    private helpService: HelpService,\n    private inAppBrowserService: InAppBroserService,\n    private mxService: MXService,\n    private qualtricsService: QualtricsService,\n    private utilityService: SharedUtilityService,\n    private platformService: PlatformService\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.platformService.isDesktop().subscribe(data => {\n      this.isDesktop = data;\n    });\n  }\n\n  ngOnInit(): void {\n    this.subscription = this.mxService\n      .getMxAccountConnect()\n      .subscribe(mxAccountsData => {\n        if (mxAccountsData.accounts.length < 1) {\n          const id = this.settingsOption.manageAcctsId;\n          this.config.items = this.config.items.filter(value => {\n            return value.id != id;\n          });\n        }\n      });\n  }\n\n  async navigateTo(item: MenuConfigItems): Promise<void> {\n    if (item.id === this.settingsOption.feedbackId) {\n      if (this.isWeb) {\n        this.router.navigateByUrl(item.route);\n      }\n      await this.qualtricsService.setProperty(\n        QualtricsProperty.FEEDBACK,\n        'true'\n      );\n      await this.qualtricsService.evaluateInterceptId(\n        QualtricsIntercept.FEEDBACK_INTERCEPT,\n        true\n      );\n      this.qualtricsService.setProperty(QualtricsProperty.FEEDBACK, 'false');\n    } else if (item.id === this.settingsOption.termsId) {\n      if (!this.isWeb) {\n        this.inAppBrowserService.openInAppBrowser(\n          this.settingsOption.TCUrl,\n          new VoyaIABController()\n        );\n      } else {\n        window.open(this.settingsOption.TCUrl, '_blank');\n      }\n    } else {\n      this.router.navigateByUrl(item.route);\n      if (this.isHelp) {\n        this.helpService.setCategoryData(item.category);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {MenuComponent} from './menu.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [MenuComponent],\n  exports: [MenuComponent],\n})\nexport class MenuComponentModule {}\n","import {Category} from './models/help.model';\nimport {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HelpService {\n  helpContent: Category;\n\n  setCategoryData(content: Category): void {\n    this.helpContent = content;\n  }\n\n  getCategoryData(): Category {\n    return this.helpContent;\n  }\n}\n","export enum QualtricsIntercept {\n  FEEDBACK_INTERCEPT = 'SI_5ckYZaxbm0VHNOe',\n  FEEDBACK_INTERCEPT_WEB = 'ZN_b3IFCU3urC2BkMK',\n  EMAIL_INTERCEPT = 'SI_bjdKRnCzFgo1rr8',\n}\n","export const endpoints = {\n  settingsDisplayFlags: 'myvoyage/settings/displayflags',\n  getPreferenceNudge: 'myvoyage/ws/ers/content/section/myvoyage/home'\n};\n","import {Injectable} from '@angular/core';\nimport {SettingPreferences, SettingsDisplayFlags} from './models/settings.model';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {endpoints} from './constants/endpoints';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private endpoints;\n  private displayFlag: SettingsDisplayFlags;\n  private preferencesContentPromise: Promise<SettingPreferences>\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.endpoints = this.utilityService.appendBaseUrlToEndpoints(endpoints);\n  }\n\n  async getSettingsDisplayFlags(\n    refresh = false\n  ): Promise<SettingsDisplayFlags> {\n    try {\n      if (!this.displayFlag || refresh) {\n        this.displayFlag = await this.baseService.get(\n          this.endpoints.settingsDisplayFlags\n        );\n      }\n    } catch (e) {\n      console.log(e);\n      this.displayFlag = {\n        displayContactLink: false,\n        suppressAppointment: false,\n      };\n    }\n    return this.displayFlag;\n  }\n  getPreferenceNudge():Promise<SettingPreferences>{\n    if (!this.preferencesContentPromise) {\n      this.preferencesContentPromise = this.baseService.get(\n        this.endpoints.getPreferenceNudge,\n      );\n    }\n    return this.preferencesContentPromise;\n  }\n}\n","export default \"<app-loading [loading]=\\\"loading\\\">\\n  <app-menu [config]=\\\"menuConfig\\\" [isHelp]=\\\"false\\\"></app-menu>\\n  <ion-grid class=\\\"ion-no-padding bottom\\\">\\n    <ion-row class=\\\"biometrics-row\\\" *ngIf=\\\"faceIDAllowed\\\">\\n      <ion-col\\n        size=\\\"10\\\"\\n        [ngStyle]=\\\"{'margin-top': marginTop}\\\"\\n        class=\\\"biometrics-label-col\\\"\\n        ><img src=\\\"{{biometricsIcon}}\\\" alt=\\\"biometrics\\\" /><ion-text\\n          class=\\\"font-16 font-w-600\\\"\\n          >{{biometricsText}}</ion-text\\n        ></ion-col\\n      >\\n      <ion-col size=\\\"2\\\" class=\\\"biometrics-toggle-col\\\">\\n        <ion-toggle\\n          class=\\\"biometrics-toggle\\\"\\n          [(ngModel)]=\\\"faceIDEnabled\\\"\\n          (ionChange)=\\\"onFaceIDChanged()\\\"\\n        ></ion-toggle>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row class=\\\"mt-42\\\">\\n      <ion-col>\\n        <ion-button\\n          id=\\\"sign-out\\\"\\n          class=\\\"font-18 sign-out\\\"\\n          name=\\\"sign-out\\\"\\n          shape=\\\"round\\\"\\n          expand=\\\"block\\\"\\n          color=\\\"btncolor\\\"\\n          fill=\\\"outline\\\"\\n          (click)=\\\"logout()\\\"\\n        >\\n          {{options.button}}\\n        </ion-button>\\n      </ion-col>\\n    </ion-row>\\n  </ion-grid>\\n</app-loading>\\n\";","export default \"<ion-card class=\\\"alert-dialog\\\">\\n  <ion-card-header>\\n    <ion-card-title>\\n      <span\\n        class=\\\"x-button\\\"\\n        tabindex=\\\"0\\\"\\n        (click)=\\\"closeDialogClicked(false)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(false)\\\"\\n        id=\\\"close-btn\\\"\\n        ><img src=\\\"assets/icon/exit.svg\\\" alt=\\\"Close dialog\\\"/></span\\n    ></ion-card-title>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <img\\n      [hidden]=\\\"!imageUrl\\\"\\n      class=\\\"image-center\\\"\\n      [src]=\\\"imageUrl\\\"\\n      alt=\\\"warning\\\"\\n    />\\n    <div [hidden]=\\\"imageUrl\\\" class=\\\"spacer\\\"></div>\\n    <p class=\\\"title-message\\\">{{ titleMessage }}</p>\\n    <p class=\\\"message\\\">{{ message }}</p>\\n    <div class=\\\"error\\\" [hidden]=\\\"!error\\\">\\n      An error occurred while saving. Please try again.\\n    </div>\\n    <div>\\n      <ion-button\\n        (click)=\\\"closeDialogClicked(true)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(true)\\\"\\n        class=\\\"font-18 save-button\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        [attr.disabled]=\\\"saving\\\"\\n        id=\\\"yes-btn\\\"\\n      >\\n        <ion-spinner [hidden]=\\\"!saving\\\" class=\\\"save-spinner\\\"></ion-spinner>\\n        {{ yesButtonTxt }}\\n      </ion-button>\\n      <ion-button\\n        (click)=\\\"closeDialogClicked(false)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(false)\\\"\\n        class=\\\"cancel-button\\\"\\n        [attr.disabled]=\\\"saving\\\"\\n        id=\\\"no-btn\\\"\\n      >\\n        {{ noButtonTxt }}\\n      </ion-button>\\n    </div>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<div *ngIf=\\\"loading\\\">\\n  <ion-spinner [class.center]=\\\"center\\\"></ion-spinner>\\n</div>\\n<div *ngIf=\\\"!loading\\\">\\n  <ng-content></ng-content>\\n</div>\\n\";","export default \"<ion-grid class=\\\"ion-no-padding\\\">\\n  <ion-item\\n    [ngClass]=\\\"isWeb && isDesktop ? 'desktop-menu' : 'mobile-menu'\\\"\\n    inset=\\\"true\\\"\\n    lines=\\\"none\\\"\\n    class=\\\"ion-no-padding\\\"\\n  >\\n    <div class=\\\"menu-items\\\">\\n      <div\\n        *ngFor=\\\"let item of config.items; let i = index\\\"\\n        [ngClass]=\\\"\\n          selectedTab === 'more-items-' + item.id && isWeb && isDesktop\\n            ? 'menu-item active'\\n            : 'menu-item not-active'\\n        \\\"\\n        id=\\\"{{ 'more-items-' + item.id }}\\\"\\n        (click)=\\\"navigateTo(item)\\\"\\n      >\\n        <ion-row class=\\\"\\\">\\n          <ion-col *ngIf=\\\"item.icon\\\" class=\\\"menu-icon\\\">\\n            <img alt=\\\"{{ item.text }}\\\" src=\\\"{{ item.icon }}\\\" />\\n          </ion-col>\\n          <ion-col\\n            [ngClass]=\\\"isWeb && isDesktop ? 'desktop-menu-label' : 'menu-label'\\\"\\n          >\\n            <label\\n              class=\\\"ion-no-padding font-16 font-w-600 ion-float-left ion-txt\\\"\\n              >{{ item.text }}</label\\n            >\\n            <span class=\\\"ion-float-right\\\"\\n              ><img alt=\\\"edit\\\" src=\\\"assets/icon/chevron_right.svg\\\"\\n            /></span>\\n          </ion-col>\\n        </ion-row>\\n      </div>\\n    </div>\\n  </ion-item>\\n</ion-grid>\\n\";"]}