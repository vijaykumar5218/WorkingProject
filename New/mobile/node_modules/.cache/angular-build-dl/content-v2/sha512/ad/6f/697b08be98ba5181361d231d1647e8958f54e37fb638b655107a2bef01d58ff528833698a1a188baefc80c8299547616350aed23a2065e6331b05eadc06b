{"version":3,"file":"default-shared-lib_components_coverages_plan-tabs_plan-transactions_plan-transactions_component_ts-es2015.js","mappings":"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","sources":["./shared-lib/components/coverages/plan-tabs/plan-transactions/date-range-filter/date-range-filter.component.ts","./shared-lib/components/coverages/plan-tabs/plan-transactions/plan-transactions.component.ts","./shared-lib/components/coverages/plan-tabs/plan-transactions/date-range-filter/date-range-filter.component.html","./shared-lib/components/coverages/plan-tabs/plan-transactions/plan-transactions.component.html"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport * as pageText from '../constants/pageText.json';\nimport {PopoverController} from '@ionic/angular';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {FilterSortContent} from '@shared-lib/models/filter-sort.model';\n\n@Component({\n  selector: 'app-date-range-filter',\n  templateUrl: './date-range-filter.component.html',\n  styleUrls: ['./date-range-filter.component.scss'],\n})\nexport class DateRangeFilterComponent implements OnInit {\n  @Input() public dateRangeList;\n  @Input() public selectedDate;\n\n  constructor(\n    public popoverCtrl: PopoverController,\n    private benefitService: BenefitsService\n  ) {}\n\n  filterContent: FilterSortContent = (pageText as any).default;\n\n  public selectedValue = '';\n  public selectedDateOpt = '';\n\n  onChange() {\n    this.selectedDateOpt = this.selectedValue;\n  }\n\n  closeDialog(save: boolean) {\n    if (save && this.selectedDateOpt) {\n      this.benefitService.changeDateOptions(this.selectedDateOpt);\n    }\n    this.popoverCtrl.dismiss();\n  }\n\n  ngOnInit(): void {\n    this.selectedValue = this.selectedDate;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Input,\n} from '@angular/core';\nimport * as chartText from '@shared-lib/components/coverages/constants/chartData.json';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  AllCategory,\n  GroupingCategoryDetails,\n  HealthContent,\n  HealthDates,\n  HealthUtlization,\n  NameCategory,\n} from '@shared-lib/components/coverages/models/chart.model';\nimport moment from 'moment';\nimport {ConsentService} from '@shared-lib/services/consent/consent.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PopoverController} from '@ionic/angular';\n\nimport {DateRangeFilterComponent} from './date-range-filter/date-range-filter.component';\nimport * as pageText from './constants/pageText.json';\nimport {Subscription} from 'rxjs';\nimport {\n  DateOptions,\n  FilterList,\n  FilterModels,\n  FilterSortContent,\n  FilterValues,\n  SortListing,\n} from '../../../../models/filter-sort.model';\nimport {FilterPopoverComponent} from '../../../filter-popover/filter-popover.component';\nimport {TPAStreamService} from '@shared-lib/services/tpa-stream/tpastream.service';\nimport {TPAClaimsData} from '@shared-lib/services/tpa-stream/models/tpa.model';\nimport {SortPopoverComponent} from '../../../sort-popover/sort-popover.component';\nimport {AccessService} from '@shared-lib/services/access/access.service';\n\n@Component({\n  selector: 'mobile-plan-transactions',\n  templateUrl: './plan-transactions.component.html',\n  styleUrls: ['./plan-transactions.component.scss'],\n})\nexport class PlanTransactionsComponent implements OnInit, OnDestroy {\n  @Input() back = false;\n  @Input() isModal = false;\n  isTpa = false;\n  @Output() consent = new EventEmitter<boolean>();\n  @Output() manageButtonEvent = new EventEmitter();\n  contentP: HealthContent = (chartText as any).default;\n  groupData: AllCategory[] = [];\n  filteredGroupData: AllCategory[] = [];\n  sortOption = 'asc';\n\n  healthDates: HealthDates;\n  hasConsent = false;\n  isWeb: boolean;\n  @ViewChild('topmostElement', {read: ElementRef}) topmostElement: ElementRef;\n\n  filterContent: FilterSortContent = (pageText as any).default;\n\n  filterList: FilterList[];\n  sortList: SortListing;\n  dateRangeList: DateOptions[] = this.filterContent.dateRangeOptions;\n\n  subscriptionFilter: Subscription;\n  subscriptionSort: Subscription;\n  subscriptionDate: Subscription;\n  tpaSubscription: Subscription;\n  isDataLoaded: boolean;\n  selectedRangeType: string;\n  fromDate = '';\n  toDate = '';\n  storeSelectedFilter: FilterList[];\n\n  customAlertOptions = {\n    header: this.filterContent.dateRangeLbl,\n    translucent: true,\n    cssClass: 'pop-over-class',\n  };\n\n  consentSubscription: Subscription;\n  selectedSortValue = '';\n\n  filterChips: FilterValues[];\n  storedKeyArr: string[] = [];\n\n  constructor(\n    private benefitServices: BenefitsService,\n    private consentService: ConsentService,\n    private utilityService: SharedUtilityService,\n    public popoverCtrl: PopoverController,\n    private tpaService: TPAStreamService,\n    private accessService: AccessService\n  ) {}\n\n  async ngOnInit() {\n    await this.determineTPA();\n    this.selectedRangeType = 'thisYear';\n    this.isWeb = this.utilityService.getIsWeb();\n    this.getFilterOptions();\n    this.getSortOptions();\n    this.getSectionValue();\n    this.getDateOptions();\n    this.checkAuthorization();\n    this.benefitServices.setSortSlcted(this.selectedSortValue);\n  }\n\n  async determineTPA() {\n    const access = await this.accessService.checkMyvoyageAccess();\n    this.isTpa = access.enableTPA === 'Y';\n  }\n\n  createFilterChips() {\n    this.filterChips = [];\n    this.storeSelectedFilter.forEach(product => {\n      return product.values.some(item => {\n        this.filterChips.push(item);\n      });\n    });\n  }\n\n  onRemoveChips(clickedItem: FilterValues) {\n    this.filterChips = this.filterChips.filter(function(item) {\n      return item.key !== clickedItem.key;\n    });\n\n    this.storeSelectedFilter = this.storeSelectedFilter.map(items => ({\n      ...items,\n      values: items.values.filter(el => el.key != clickedItem.key),\n    }));\n\n    this.filterData(this.storeSelectedFilter);\n\n    this.storedKeyArr = this.benefitServices.getFiltSlcted();\n\n    if (this.storedKeyArr.includes(clickedItem.key)) {\n      this.storedKeyArr = this.storedKeyArr.filter(function(item) {\n        return item !== clickedItem.key;\n      });\n    } else {\n      return;\n    }\n\n    this.benefitServices.setFiltSlcted(this.storedKeyArr);\n  }\n\n  clearAllChips() {\n    this.storeSelectedFilter = [];\n    this.filterChips = [];\n    this.benefitServices.setFiltSlcted([]);\n    this.filterData(this.storeSelectedFilter);\n  }\n\n  getSectionValue() {\n    this.benefitServices.getSectionValues().then((data: FilterModels) => {\n      const filter = data.filterList;\n      const sort = data.sortList;\n      if (this.isTpa) {\n        filter[1].values = this.filterContent.tpaFilterOptions;\n        sort[0].values = this.filterContent.tpaSortOptions;\n      }\n      this.filterList = filter;\n      this.checkAndDisableFilters();\n      this.sortList = sort;\n    });\n  }\n\n  getFilterOptions() {\n    this.subscriptionFilter = this.benefitServices\n      .currentFilter()\n      .subscribe(data => {\n        this.storeSelectedFilter = data;\n        this.createFilterChips();\n        this.filterData(data);\n      });\n  }\n\n  getSortOptions() {\n    this.subscriptionSort = this.benefitServices\n      .currentSort()\n      .subscribe(data => {\n        this.sortOption = data;\n        this.filterData(this.storeSelectedFilter);\n      });\n  }\n\n  getDateOptions() {\n    this.subscriptionDate = this.benefitServices\n      .currentDateOpt()\n      .subscribe(data => {\n        this.selectedRangeType = data;\n        this.gethealthDates();\n      });\n  }\n\n  sortData(data: string) {\n    if (data == 'asc') {\n      this.filteredGroupData.sort((a, b) => {\n        return new Date(a.date).getTime() - new Date(b.date).getTime();\n      });\n      return this.filteredGroupData.forEach(item => {\n        return item.name.sort(\n          (a, b) =>\n            new Date(a.serviceDate).getTime() -\n            new Date(b.serviceDate).getTime()\n        );\n      });\n    }\n    if (data == 'dsc') {\n      this.filteredGroupData.sort((a, b) => {\n        return new Date(b.date).getTime() - new Date(a.date).getTime();\n      });\n      return this.filteredGroupData.forEach(item => {\n        return item.name.sort(\n          (a, b) =>\n            new Date(b.serviceDate).getTime() -\n            new Date(a.serviceDate).getTime()\n        );\n      });\n    }\n    if (data == 'low') {\n      this.listWithoutMonth();\n      this.filteredGroupData.forEach(item => {\n        return item.name.sort((a, b) => a.outOfPocketCost - b.outOfPocketCost);\n      });\n    }\n\n    if (data == 'high') {\n      this.listWithoutMonth();\n      this.filteredGroupData.forEach(item => {\n        return item.name.sort((a, b) => b.outOfPocketCost - a.outOfPocketCost);\n      });\n    }\n  }\n\n  listWithoutMonth() {\n    const transactions = [];\n    const mergedArray = [];\n\n    this.filteredGroupData.forEach(item => {\n      transactions.push(...item.name);\n    });\n\n    mergedArray.push({\n      name: transactions,\n    });\n\n    this.filteredGroupData = mergedArray;\n  }\n\n  filterNetwork(data: FilterList[], el: NameCategory) {\n    let show = false;\n    if (data[0].values.length < 1) {\n      show = true;\n    } else {\n      data[0].values.forEach(element => {\n        if (show) {\n          return;\n        }\n        if (element.key == 'inNetwork') {\n          show = el.inNetwork == true;\n        }\n        if (element.key == 'OutNetwork') {\n          show = el.inNetwork == false;\n        }\n      });\n    }\n    return show;\n  }\n\n  filterAllCategoryItem(item: AllCategory, data: FilterList[]): any {\n    return item.name.filter(el => {\n      const show = this.filterNetwork(data, el);\n      if (show) {\n        if (data[1].values.length < 1) {\n          return true;\n        }\n        let res = false;\n        data[1].values.forEach(element => {\n          if (element.key == el.serviceName) {\n            res = true;\n          }\n        });\n        return res;\n      }\n\n      return show;\n    });\n  }\n\n  filterData(data: FilterList[]) {\n    if (\n      data.length < 1 ||\n      (data[0]?.values.length < 1 && data[1]?.values.length < 1)\n    ) {\n      this.filteredGroupData = this.groupData;\n    } else {\n      const filteredData = [];\n      this.groupData.forEach(item => {\n        const arr = this.filterAllCategoryItem(item, data);\n        return filteredData.push({\n          date: item.date,\n          name: arr,\n        });\n      });\n\n      this.filteredGroupData = filteredData;\n    }\n\n    this.filterByDateRange(this.filteredGroupData);\n    this.sortData(this.sortOption);\n  }\n\n  ionViewWillEnter() {\n    if (!this.consentSubscription) {\n      this.checkAuthorization();\n    }\n  }\n\n  async checkAuthorization() {\n    if (this.isTpa) {\n      this.hasConsent = true;\n      this.getSpending();\n    } else {\n      this.consentSubscription = this.consentService\n        .getMedicalConsent()\n        .subscribe(async (consent: boolean) => {\n          this.hasConsent = consent;\n          if (this.isWeb) {\n            this.utilityService.scrollToTop(this.topmostElement);\n          }\n          if (this.hasConsent) {\n            this.consent.emit(true);\n            this.getSpending();\n          } else {\n            this.consent.emit(false);\n          }\n        });\n    }\n  }\n\n  gethealthDates() {\n    if (this.selectedRangeType == '30Days') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(30, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n    if (this.selectedRangeType == '3Months') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(90, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n    if (this.selectedRangeType == '6Months') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(180, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n    if (this.selectedRangeType == '12Months') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(360, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n\n    if (this.selectedRangeType == 'lastYear') {\n      this.healthDates = {\n        startDate: moment()\n          .startOf('year')\n          .subtract(1, 'years')\n          .format('YYYY-MM-DD'),\n        endDate: moment()\n          .endOf('year')\n          .subtract(1, 'years')\n          .format('YYYY-MM-DD'),\n      };\n    } else if (this.selectedRangeType == 'thisYear') {\n      this.healthDates = {\n        startDate: moment()\n          .startOf('year')\n          .format('YYYY-MM-DD'),\n        endDate: moment()\n          .endOf('year')\n          .format('YYYY-MM-DD'),\n      };\n    }\n    this.filterData(this.storeSelectedFilter);\n  }\n\n  filterByDateRange(data: AllCategory[]) {\n    const dataWithinDate = [];\n\n    data.forEach(item => {\n      const res = item.name.filter(d => {\n        return (\n          d.serviceDate >= this.healthDates.startDate &&\n          d.serviceDate <= this.healthDates.endDate\n        );\n      });\n      return dataWithinDate.push({\n        date: item.date,\n        name: res,\n      });\n    });\n\n    this.filteredGroupData = dataWithinDate;\n  }\n\n  getSpending() {\n    if (this.isTpa) {\n      this.getSpendingTPA();\n    } else {\n      this.getSpendingRegular();\n    }\n  }\n\n  manageCarriers() {\n    this.manageButtonEvent.emit();\n  }\n\n  getSpendingTPA() {\n    this.tpaSubscription = this.tpaService\n      .getTPAData()\n      .subscribe((tpaData: TPAClaimsData) => {\n        this.isDataLoaded = true;\n        this.createGroupDetails(tpaData.groupingCategoryDetails);\n      });\n  }\n\n  getSpendingRegular() {\n    this.healthDates = {\n      startDate: moment()\n        .startOf('year')\n        .add(-2, 'years')\n        .format('MM/DD/YYYY'),\n      endDate: moment()\n        .endOf('year')\n        .format('MM/DD/YYYY'),\n    };\n\n    this.benefitServices\n      .fetchSpending(this.healthDates, true)\n      .then((resp: HealthUtlization) => {\n        this.isDataLoaded = true;\n        this.createGroupDetails(resp.groupingCategoryDetails);\n      })\n      .catch(() => {\n        this.isDataLoaded = true;\n      });\n  }\n\n  createGroupDetails(groupingCategoryDetails: GroupingCategoryDetails) {\n    if (groupingCategoryDetails) {\n      this.groupData = [];\n      Object.keys(groupingCategoryDetails).forEach(key => {\n        const data = {};\n        data['date'] = key;\n        data['name'] = [];\n        for (const element of groupingCategoryDetails[key]) {\n          data['name'].push(element);\n        }\n        this.groupData.push(data);\n      });\n      this.checkAndDisableFilters();\n      this.filteredGroupData = this.groupData;\n      this.filterData(this.storeSelectedFilter);\n      this.gethealthDates();\n    }\n    this.benefitServices.setFiltSlcted([]);\n  }\n\n  private checkIfFilterHasVal(filterVal: FilterValues, i: number) {\n    let hasVal = false;\n    this.groupData.forEach((groupData: AllCategory) => {\n      groupData.name.forEach((value: NameCategory) => {\n        if (i == 0) {\n          if (filterVal.key == 'inNetwork') {\n            hasVal = value.inNetwork;\n          } else if (filterVal.key == 'OutNetwork') {\n            hasVal = !value.inNetwork;\n          }\n        } else {\n          if (filterVal.key == value.serviceName) {\n            hasVal = true;\n          }\n        }\n        if (hasVal) {\n          return;\n        }\n      });\n    });\n    return hasVal;\n  }\n\n  checkAndDisableFilters() {\n    if (!this.filterList || !this.groupData) {\n      return;\n    }\n    let i = 0;\n    this.filterList.forEach(dat => {\n      dat.values.forEach(filterVal => {\n        filterVal.enabled = this.checkIfFilterHasVal(filterVal, i);\n      });\n      i++;\n    });\n  }\n\n  async opnFilter(e: Event) {\n    const popover = await this.popoverCtrl.create({\n      component: FilterPopoverComponent,\n      event: e,\n      cssClass: 'pop-over-class',\n      componentProps: {\n        filterList: this.filterList,\n        service: this.benefitServices,\n      },\n      mode: 'ios',\n    });\n\n    return popover.present();\n  }\n\n  async opnSorting(e: Event) {\n    const popover = await this.popoverCtrl.create({\n      component: SortPopoverComponent,\n      event: e,\n      cssClass: 'pop-over-class',\n      componentProps: {\n        sortList: this.sortList,\n        service: this.benefitServices,\n      },\n      mode: 'ios',\n    });\n\n    return popover.present();\n  }\n\n  async opnDateRangeFilter(e: Event) {\n    const popover = await this.popoverCtrl.create({\n      component: DateRangeFilterComponent,\n      event: e,\n      cssClass: 'pop-over-class',\n      componentProps: {\n        dateRangeList: this.dateRangeList,\n        selectedDate: this.selectedRangeType,\n      },\n      mode: 'ios',\n    });\n\n    return popover.present();\n  }\n\n  customDateRange(fromDate: string, toDate: string) {\n    this.healthDates = {\n      startDate: moment(fromDate).format('YYYY-MM-DD'),\n      endDate: moment(toDate).format('YYYY-MM-DD'),\n    };\n\n    this.filterByDateRange(this.groupData);\n  }\n\n  ionViewWillLeave() {\n    this.consentSubscription.unsubscribe();\n    this.consentSubscription = null;\n  }\n\n  ngOnDestroy() {\n    this.subscriptionFilter.unsubscribe();\n    this.subscriptionSort.unsubscribe();\n    this.subscriptionDate.unsubscribe();\n    if (this.tpaSubscription) {\n      this.tpaSubscription.unsubscribe();\n    }\n    if (this.consentSubscription) {\n      this.consentSubscription.unsubscribe();\n    }\n  }\n}\n","export default \"<div class=\\\"list-wrap sort-wrap\\\">\\n  <ion-list>\\n    <h5>{{ filterContent.dateRangeLbl }}</h5>\\n    <ion-radio-group [(ngModel)]=\\\"selectedValue\\\" (ionChange)=\\\"onChange()\\\">\\n      <ion-item\\n        class=\\\"ion-no-padding \\\"\\n        lines=\\\"none\\\"\\n        *ngFor=\\\"let data of dateRangeList\\\"\\n      >\\n        <ion-radio\\n          mode=\\\"ios\\\"\\n          value=\\\"{{ data.id }}\\\"\\n          color=\\\"btndarkblue\\\"\\n        ></ion-radio>\\n        <img\\n          src=\\\"assets/icon/check.svg\\\"\\n          alt=\\\"check mark\\\"\\n          srcset=\\\"\\\"\\n          class=\\\"checkmark\\\"\\n          [class.active]=\\\"this.selectedValue == data.id\\\"\\n        />\\n        <ion-label>{{ data.value }} </ion-label>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n</div>\\n\\n<div class=\\\"btn-wrap\\\">\\n  <ion-button\\n    (click)=\\\"closeDialog(false)\\\"\\n    class=\\\"font-18 save-button\\\"\\n    expand=\\\"block\\\"\\n    fill=\\\"clear\\\"\\n    color=\\\"btndarkblue\\\"\\n  >\\n    {{ filterContent.cancelLabel }}\\n  </ion-button>\\n  <ion-button\\n    (click)=\\\"closeDialog(true)\\\"\\n    class=\\\"font-18 save-button\\\"\\n    expand=\\\"block\\\"\\n    fill=\\\"clear\\\"\\n    color=\\\"btndarkblue\\\"\\n  >\\n    {{ filterContent.okLable }}\\n  </ion-button>\\n</div>\\n\";","export default \"<app-modal-header\\n  *ngIf=\\\"isModal\\\"\\n  [headerText]=\\\"'Claims'\\\"\\n  [back]=\\\"false\\\"\\n></app-modal-header>\\n<div [ngClass]=\\\"isWeb ? 'web-plan-transactions' : 'mobile-plan-transactions'\\\">\\n  <div #topmostElement></div>\\n  <app-consent-required\\n    *ngIf=\\\"!hasConsent\\\"\\n    [back]=\\\"back\\\"\\n  ></app-consent-required>\\n  <div *ngIf=\\\"hasConsent\\\">\\n    <div class=\\\"calim-transaction-card\\\">\\n      <div class=\\\"filter-row\\\">\\n        <ion-button\\n          (click)=\\\"opnFilter($event)\\\"\\n          #filter\\n          size=\\\"small\\\"\\n          fill=\\\"outline\\\"\\n          class=\\\"filt-button font-14\\\"\\n          id=\\\"filter-button\\\"\\n          >{{ filterContent.filterLable }}\\n          <ion-icon class=\\\"ml-10\\\" name=\\\"filter-outline\\\"></ion-icon>\\n        </ion-button>\\n\\n        <ion-button\\n          (click)=\\\"opnSorting($event)\\\"\\n          size=\\\"small\\\"\\n          fill=\\\"outline\\\"\\n          class=\\\"filt-button font-14\\\"\\n          id=\\\"sort-button\\\"\\n          >{{ filterContent.sortLable }}\\n          <ion-icon class=\\\"ml-10\\\" name=\\\"chevron-down-outline\\\"></ion-icon>\\n        </ion-button>\\n        <div\\n          (click)=\\\"manageCarriers()\\\"\\n          class=\\\"manage-button\\\"\\n          *ngIf=\\\"isTpa && !isModal\\\"\\n          tabindex=\\\"0\\\"\\n          (keydown.enter)=\\\"manageCarriers()\\\"\\n        >\\n          {{ filterContent.manage }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"chip-wrap\\\" *ngIf=\\\"isWeb && filterChips.length\\\">\\n        <app-chips\\n          [item]=\\\"filterChips\\\"\\n          (outPutData)=\\\"onRemoveChips($event)\\\"\\n          (clearOutPutFn)=\\\"clearAllChips()\\\"\\n        ></app-chips>\\n      </div>\\n\\n      <div class=\\\"date-range-row\\\">\\n        <ion-text class=\\\"font-w-600\\\"\\n          >{{ filterContent.dateRangeLbl }} :\\n        </ion-text>\\n        <ion-text\\n          class=\\\"option-name\\\"\\n          *ngFor=\\\"let data of filterContent.dateRangeOptions; let i = index\\\"\\n          [hidden]=\\\"data.id != selectedRangeType\\\"\\n          tabindex=\\\"0\\\"\\n          (keydown.enter)=\\\"opnDateRangeFilter($event)\\\"\\n          (click)=\\\"opnDateRangeFilter($event)\\\"\\n        >\\n          <span class=\\\"value-wrap\\\">\\n            {{ data.value }}\\n            <ion-icon name=\\\"caret-down-outline\\\"></ion-icon>\\n          </span>\\n        </ion-text>\\n      </div>\\n\\n      <div class=\\\"custom-date-range\\\" *ngIf=\\\"this.selectedRangeType == 'custom'\\\">\\n        <div class=\\\"cdr-block\\\">\\n          <ion-text class=\\\"font-w-600\\\">{{ filterContent.fromTxt }}</ion-text>\\n          <ion-datetime\\n            mode=\\\"ios\\\"\\n            placeholder=\\\"mm/dd/yyyy\\\"\\n            displayFormat=\\\"MM/DD/YYYY\\\"\\n            pickerFormat=\\\"MMM/DD/YYYY\\\"\\n            presentation=\\\"fromDate\\\"\\n            [(ngModel)]=\\\"fromDate\\\"\\n            (ionChange)=\\\"customDateRange(this.fromDate, this.toDate)\\\"\\n          ></ion-datetime>\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\n        </div>\\n        <div class=\\\"cdr-block\\\">\\n          <ion-text class=\\\"font-w-600\\\">{{ filterContent.toTxt }}</ion-text>\\n          <ion-datetime\\n            mode=\\\"ios\\\"\\n            placeholder=\\\"mm/dd/yyyy\\\"\\n            displayFormat=\\\"MM/DD/YYYY\\\"\\n            pickerFormat=\\\"MMM/DD/YYYY\\\"\\n            presentation=\\\"toDate\\\"\\n            [(ngModel)]=\\\"toDate\\\"\\n            (ionChange)=\\\"customDateRange(this.fromDate, this.toDate)\\\"\\n          ></ion-datetime>\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"data-wrapper\\\">\\n        <app-loading [loading]=\\\"!isDataLoaded\\\">\\n          <div *ngFor=\\\"let data of filteredGroupData\\\">\\n            <div class=\\\"frame\\\" *ngIf=\\\"data?.date && data?.name?.length\\\">\\n              <span class=\\\"title\\\">\\n                {{ data?.date | date: 'MMMM y' }}\\n              </span>\\n            </div>\\n            <ion-list *ngFor=\\\"let info of data.name\\\">\\n              <ion-row *ngIf=\\\"info.carrierName\\\">\\n                <ion-col class=\\\"carrier\\\">\\n                  {{ info.carrierName }}\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col\\n                  class=\\\"ion-text-start lastdays\\\"\\n                  [ngClass]=\\\"{'tpa-col': isTpa}\\\"\\n                  size=\\\"8\\\"\\n                >\\n                  {{ info.providerName }}\\n                </ion-col>\\n                <ion-col\\n                  class=\\\"ion-text-end color\\\"\\n                  [ngClass]=\\\"{'tpa-col': isTpa}\\\"\\n                  size=\\\"4\\\"\\n                >\\n                  {{ -info.outOfPocketCost | currency: 'USD':'symbol' }}\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n                <ion-col class=\\\"ion-text-start subdate\\\" size=\\\"6\\\">\\n                  {{ info.serviceDate | date: 'MMMM d, y' }}\\n                </ion-col>\\n                <ion-col class=\\\"ion-text-end sub-name\\\" size=\\\"6\\\">\\n                  {{ contentP.myBill }}\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row class=\\\"dep-row\\\" *ngIf=\\\"info.firstName && info.lastName\\\">\\n                <div class=\\\"label\\\">Patient Name</div>\\n                <div class=\\\"colon\\\">:</div>\\n                <div class=\\\"value\\\">\\n                  {{ info.firstName + ' ' + info.lastName }}\\n                </div>\\n              </ion-row>\\n\\n              <ion-row class=\\\"dep-row\\\" *ngIf=\\\"info.relationship\\\">\\n                <div class=\\\"label\\\">Relationship</div>\\n                <div class=\\\"colon second\\\">:</div>\\n                <div class=\\\"value\\\">{{ info.relationship }}</div>\\n              </ion-row>\\n\\n              <div\\n                *ngIf=\\\"\\n                  info.serviceName === 'genericDrugs' ||\\n                  info.serviceName === 'preferredDrugs' ||\\n                  info.serviceName === 'rx'\\n                \\\"\\n              >\\n                <ion-row>\\n                  <ion-col class=\\\"drugname\\\">\\n                    {{ contentP.drugNames }} {{ info.drugName }}\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row *ngIf=\\\"info.lastFilledDate\\\">\\n                  <ion-col class=\\\"lastfilled\\\">\\n                    {{ contentP.lastFilled }}\\n                    {{\\n                      info.lastFilledDate\\n                        ? (info.lastFilledDate | date: 'MMMM d, y')\\n                        : filterContent.na\\n                    }}\\n                  </ion-col>\\n                </ion-row>\\n              </div>\\n              <ion-row *ngIf=\\\"info.patientName\\\">\\n                <ion-col class=\\\"patient\\\">\\n                  {{ contentP.patientName }}: {{ info.patientName }}\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n                <div\\n                  class=\\\"dot\\\"\\n                  [ngStyle]=\\\"{\\n                    background: this.contentP.colors[info.serviceName]\\n                  }\\\"\\n                ></div>\\n                <ion-col class=\\\"ion-text-start sub-category\\\">\\n                  {{ this.contentP.outNetworkCostNames[info.serviceName] }}\\n                  {{\\n                    info.inNetwork == true\\n                      ? '(' + this.contentP.inNetwork + ')'\\n                      : '(' + this.contentP.outOfNetwork + ')'\\n                  }}\\n                </ion-col>\\n              </ion-row>\\n              <hr class=\\\"divider\\\" />\\n            </ion-list>\\n          </div>\\n        </app-loading>\\n      </div>\\n    </div>\\n    <app-med-disclaimer></app-med-disclaimer>\\n  </div>\\n</div>\\n\";"],"names":[],"sourceRoot":"webpack:///"}