{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UACaA;;;;;AACTC,2BAAc;AAAA;;AAAA;;AACV;;AACA,iBAAKC,sBAAL,GAA8B,YAAM;AAChC,gBAAMC,IAAI,GAAG;AACTC,sBAAQ,EAAEC,QAAQ,CAACC,MAATD,KAAoB;AADrB,aAAb;;AAGA,mBAAKE,eAAL,CAAqB,gBAArB,EAAuCJ,IAAvC;;AACA,gBAAIE,QAAQ,CAACC,MAAb,EAAqB;AACjB,qBAAKC,eAAL,CAAqB,OAArB,EAA8B,IAA9B;AADJ,mBAGK;AACD,qBAAKA,eAAL,CAAqB,QAArB,EAA+B,IAA/B;AACH;AAVL;;AAYAF,kBAAQ,CAACG,gBAATH,CAA0B,kBAA1BA,EAA8C,OAAKH,sBAAnDG,EAA2E,KAA3EA;AAdU;AAeb;;;;iBACDI,mBAAU;AACN,kBAAM,KAAKC,aAAL,CAAmB,yBAAnB,CAAN;AACH;;;iBACKC,mBAAU;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACNC,KAAI,CAACF,aAAL,CAAmB,yBAAnB,CADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEf;;;iBACKG,wBAAe;AAAA;AAAA;AAAA;AAAA;AAAA,sDACV;AAAEC,yBAAG,EAAE;AAAP,qBADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEpB;;;iBACKC,oBAAW;AAAA;AAAA;AAAA;AAAA;AAAA,sDACN;AAAEX,8BAAQ,EAAEC,QAAQ,CAACC,MAATD,KAAoB;AAAhC,qBADM;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEhB;;;iBACKW,uBAAc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACVC,MAAI,CAACP,aAAL,CAAmB,yBAAnB,CADU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEnB;;;;QA/BuBQ;;;;","names":["AppWeb","constructor","handleVisibilityChange","data","isActive","document","hidden","notifyListeners","addEventListener","exitApp","unimplemented","getInfo","_this","getLaunchUrl","url","getState","minimizeApp","_this2","WebPlugin"],"sources":["webpack:///node_modules/@capacitor/app/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class AppWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.handleVisibilityChange = () => {\n            const data = {\n                isActive: document.hidden !== true,\n            };\n            this.notifyListeners('appStateChange', data);\n            if (document.hidden) {\n                this.notifyListeners('pause', null);\n            }\n            else {\n                this.notifyListeners('resume', null);\n            }\n        };\n        document.addEventListener('visibilitychange', this.handleVisibilityChange, false);\n    }\n    exitApp() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getInfo() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async getLaunchUrl() {\n        return { url: '' };\n    }\n    async getState() {\n        return { isActive: document.hidden !== true };\n    }\n    async minimizeApp() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n}\n"]}