{"version":3,"mappings":"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","names":["LoadingComponent","_angular_core__WEBPACK_IMPORTED_MODULE_2__","selector","template","LoadingComponentModule","imports","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","declarations","_loading_component__WEBPACK_IMPORTED_MODULE_0__","exports","NotificationItemComponent","utilityService","route","JSON","parse","stringify","isWeb","getIsWeb","url","navigateByUrl","_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","NotificationItemComponentModule","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","_notification_item_component__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_notification_page__WEBPACK_IMPORTED_MODULE_0__","NotificationPageRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","NotificationPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","_notification_routing_module__WEBPACK_IMPORTED_MODULE_0__","_components_notification_item_notification_item_module__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_components_loading_loading_module__WEBPACK_IMPORTED_MODULE_3__","_notification_page__WEBPACK_IMPORTED_MODULE_1__","NotificationPage","footerType","headerType","notificationService","sharedUtilityService","activatedRoute","headername","pageText","pageTitle","btnright","btnleft","buttonLeft","name","link","getNotificationData","publish","queryParams","subscribe","previousRootPath","data","getNotification","notifications","savePageVisit","type","_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_6__","actionOption","_shared_lib_modules_footer_constants_footerType_enum__WEBPACK_IMPORTED_MODULE_2__","selectedTab","_shared_lib_modules_footer_services_footer_type_footer_type_service__WEBPACK_IMPORTED_MODULE_3__","_services_header_type_header_type_service__WEBPACK_IMPORTED_MODULE_7__","_services_notification_notification_service__WEBPACK_IMPORTED_MODULE_8__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_5__","_angular_router__WEBPACK_IMPORTED_MODULE_10__","__webpack_exports__"],"sources":["webpack:///shared-lib/components/loading/loading.component.ts","webpack:///shared-lib/components/loading/loading.module.ts","webpack:///shared-lib/modules/notification/components/notification-item/notification-item.component.ts","webpack:///shared-lib/modules/notification/components/notification-item/notification-item.module.ts","webpack:///shared-lib/modules/notification/notification-routing.module.ts","webpack:///shared-lib/modules/notification/notification.module.ts","webpack:///shared-lib/modules/notification/notification.page.ts","webpack:///shared-lib/components/loading/loading.component.html","webpack:///shared-lib/modules/notification/components/notification-item/notification-item.component.html","webpack:///shared-lib/modules/notification/notification.page.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.scss'],\n})\nexport class LoadingComponent {\n  @Input() public loading: boolean;\n  @Input() public center = false;\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {LoadingComponent} from './loading.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [LoadingComponent],\n  exports: [LoadingComponent],\n})\nexport class LoadingComponentModule {}\n","import {Component, Input} from '@angular/core';\nimport * as text from '../../constants/notification.json';\nimport {HighPriority} from '@shared-lib/services/notification/models/notification.model';\nimport {SharedUtilityService} from '../../../../services/utility/utility.service';\nimport {Router} from '@angular/router';\n@Component({\n  selector: 'app-notification-item',\n  templateUrl: './notification-item.component.html',\n  styleUrls: ['./notification-item.component.scss'],\n})\nexport class NotificationItemComponent {\n  pageText: Record<string, string> = JSON.parse(JSON.stringify(text)).default;\n\n  @Input() lastRow: boolean;\n  @Input() notificationList: HighPriority[];\n  isWeb: boolean;\n  constructor(\n    private utilityService: SharedUtilityService,\n    private route: Router\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n  handleNotificationUrlClick(url: string) {\n    this.route.navigateByUrl(url);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationItemComponent} from './notification-item.component';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule],\n  declarations: [NotificationItemComponent],\n  exports: [NotificationItemComponent],\n})\nexport class NotificationItemComponentModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {NotificationPage} from './notification.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationPageRoutingModule} from './notification-routing.module';\nimport {NotificationPage} from './notification.page';\nimport {NotificationItemComponentModule} from './components/notification-item/notification-item.module';\nimport {LoadingComponentModule} from '@shared-lib/components/loading/loading.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    NotificationPageRoutingModule,\n    NotificationItemComponentModule,\n    LoadingComponentModule,\n  ],\n  declarations: [NotificationPage],\n  exports: [NotificationPage],\n})\nexport class NotificationPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport * as text from './constants/notification.json';\nimport {Notification} from '@shared-lib/services/notification/models/notification.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {ActivatedRoute} from '@angular/router';\nimport {HeaderType} from '../../constants/headerType.enum';\nimport {ActionOptions} from '../../models/ActionOptions.model';\nimport {HeaderTypeService} from '../../services/header-type/header-type.service';\nimport {NotificationService} from '../../services/notification/notification.service';\n\n@Component({\n  selector: 'app-shared-notification',\n  templateUrl: './notification.page.html',\n  styleUrls: ['./notification.page.scss'],\n})\nexport class NotificationPage implements OnInit {\n  pageText: Record<string, string> = JSON.parse(JSON.stringify(text)).default;\n  actionOption: ActionOptions = {\n    headername: this.pageText.pageTitle,\n    btnright: false,\n    btnleft: true,\n    buttonLeft: {\n      name: '',\n      link: 'back',\n    },\n  };\n  notifications: Notification;\n  isWeb: boolean;\n  previousRootPath: string;\n\n  constructor(\n    private footerType: FooterTypeService,\n    private headerType: HeaderTypeService,\n    private notificationService: NotificationService,\n    private sharedUtilityService: SharedUtilityService,\n    private activatedRoute: ActivatedRoute\n  ) {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n  }\n\n  ngOnInit() {\n    if (this.isWeb) {\n      this.getNotificationData();\n    }\n\n    this.footerType.publish(null);\n    if (this.isWeb) {\n      this.activatedRoute.queryParams.subscribe(data => {\n        this.previousRootPath = data.previousRootPath;\n      });\n    }\n  }\n\n  async getNotificationData() {\n    this.notifications = await this.notificationService.getNotification();\n    this.notificationService.savePageVisit();\n  }\n\n  ionViewWillEnter() {\n    this.getNotificationData();\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n  }\n\n  ngOnDestroy() {\n    if (this.isWeb) {\n      if (this.previousRootPath) {\n        this.footerType.publish({\n          type: FooterType.tabsnav,\n          selectedTab: this.previousRootPath,\n        });\n      } else {\n        this.footerType.publish(null);\n      }\n    } else {\n      this.footerType.publish({type: FooterType.tabsnav});\n    }\n  }\n}\n","export default \"<div *ngIf=\\\"loading\\\">\\n  <ion-spinner [class.center]=\\\"center\\\"></ion-spinner>\\n</div>\\n<div *ngIf=\\\"!loading\\\">\\n  <ng-content></ng-content>\\n</div>\\n\";","export default \"<div [ngClass]=\\\"isWeb ? 'webNotificationItem' : ''\\\">\\n  <ion-item lines=\\\"none\\\" *ngFor=\\\"let notification of notificationList\\\">\\n    <ion-row>\\n      <ion-col size=\\\"auto\\\">\\n        <div class=\\\"dot\\\" [ngClass]=\\\"{dot: true, new: notification.new}\\\"></div>\\n      </ion-col>\\n      <ion-col>\\n        <div class=\\\"mid-text-wrap\\\">\\n          <ion-label class=\\\"item-header\\\">\\n            {{ notification.Title }}\\n          </ion-label>\\n          <p class=\\\"item-desc\\\">\\n            {{ notification.Description }}\\n          </p>\\n          <span\\n            class=\\\"item-link\\\"\\n            *ngIf=\\\"notification.Link_name && notification.Link_url\\\"\\n            (click)=\\\"handleNotificationUrlClick(notification.Link_url)\\\"\\n          >\\n            {{ notification.Link_name }}\\n          </span>\\n        </div>\\n      </ion-col>\\n      <ion-col class=\\\"time-label-col\\\">\\n        <span class=\\\"time-label\\\">{{ notification?.eventAge }}</span>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n</div>\\n\";","export default \"<app-loading [loading]=\\\"notifications == null\\\">\\n  <div [ngClass]=\\\"isWeb? 'webNotifications':''\\\">\\n    <ng-container *ngIf=\\\"isWeb\\\">\\n      <ion-card *ngIf=\\\"notifications?.highPriority.length > 0\\\">\\n        <ng-container *ngTemplateOutlet=\\\"highPriority\\\"> </ng-container>\\n      </ion-card>\\n      <ion-card *ngIf=\\\"notifications?.recent?.length > 0\\\">\\n        <ng-container *ngTemplateOutlet=\\\"recent\\\"> </ng-container>\\n      </ion-card>\\n    </ng-container>\\n\\n    <ng-container *ngIf=\\\"!isWeb\\\">\\n      <ng-container *ngTemplateOutlet=\\\"highPriority\\\"> </ng-container>\\n      <ng-container *ngTemplateOutlet=\\\"recent\\\"> </ng-container>\\n    </ng-container>\\n\\n    <ng-template #highPriority>\\n      <div class=\\\"high-priority\\\" *ngIf=\\\"notifications?.highPriority.length > 0\\\">\\n        <ion-list-header>\\n          <ion-label>{{pageText.highPriority}}</ion-label>\\n        </ion-list-header>\\n        <ion-list scroll=\\\"false\\\">\\n          <ng-container>\\n            <app-notification-item\\n              [notificationList]=\\\"notifications?.highPriority\\\"\\n            ></app-notification-item>\\n          </ng-container>\\n        </ion-list>\\n      </div>\\n    </ng-template>\\n\\n    <ng-template #recent>\\n      <div class=\\\"recent-notifications\\\">\\n        <ion-list-header\\n          class=\\\"recent\\\"\\n          *ngIf=\\\"notifications?.recent?.length > 0\\\"\\n        >\\n          <ion-label>{{pageText.recent}}</ion-label>\\n        </ion-list-header>\\n        <ion-list scroll=\\\"false\\\">\\n          <ng-container>\\n            <app-notification-item\\n              [notificationList]=\\\"notifications?.recent\\\"\\n            ></app-notification-item>\\n          </ng-container>\\n        </ion-list>\\n      </div>\\n    </ng-template>\\n    <ion-card\\n      class=\\\"no-notifications\\\"\\n      *ngIf=\\\"(notifications?.recent?.length === 0) && (notifications?.highPriority?.length === 0)\\\"\\n    >\\n      <ion-text>\\n        You do not have any notifications at this time.\\n      </ion-text>\\n    </ion-card>\\n  </div>\\n</app-loading>\\n\";"]}