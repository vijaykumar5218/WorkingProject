{"version":3,"file":"default-shared-lib_components_coverages_tpastream-connect_tpastream-connect_page_ts-shared-li-22dd60-es2015.js","mappings":"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","sources":["./node_modules/rxjs/_esm2015/internal/operators/skip.js","./shared-lib/components/coverages/tpastream-connect/tpastream-connect.page.ts","./shared-lib/components/modal-header/modal-header.component.ts","./shared-lib/components/modal-header/modal-header.module.ts","./shared-lib/services/consent/consent.service.ts","./shared-lib/services/consent/constants/consentType.enum.ts","./shared-lib/services/consent/constants/endpoints.ts","./shared-lib/services/tpa-stream/constants/endpoints.ts","./shared-lib/services/tpa-stream/tpastream.service.ts","./shared-lib/components/coverages/tpastream-connect/tpastream-connect.page.html","./shared-lib/components/modal-header/modal-header.component.html"],"sourcesContent":["import { Subscriber } from '../Subscriber';\nexport function skip(count) {\n    return (source) => source.lift(new SkipOperator(count));\n}\nclass SkipOperator {\n    constructor(total) {\n        this.total = total;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new SkipSubscriber(subscriber, this.total));\n    }\n}\nclass SkipSubscriber extends Subscriber {\n    constructor(destination, total) {\n        super(destination);\n        this.total = total;\n        this.count = 0;\n    }\n    _next(x) {\n        if (++this.count > this.total) {\n            this.destination.next(x);\n        }\n    }\n}\n","import {Component, NgZone, OnInit} from '@angular/core';\nimport {ModalController} from '@ionic/angular';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\nimport {\n  QualtricsService,\n  QualtricsUserProps,\n} from '@shared-lib/services/qualtrics/qualtrics.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Subscription} from 'rxjs';\nimport {first} from 'rxjs/operators';\nimport {TPAStreamService} from '../../../services/tpa-stream/tpastream.service';\nimport * as pageText from './constants/text-data.json';\n\nexport enum StreamStep {\n  NONE,\n  LOAD,\n  CHOOSE_PAYER,\n  TERMS_OF_SERVICE,\n  CREATED_FORM,\n  POST_CREDS,\n  REAL_TIME,\n  POPUP,\n  DONE_ENROLL,\n  FORM_ERROR,\n}\n\n@Component({\n  selector: 'app-tpastream-connect',\n  templateUrl: './tpastream-connect.page.html',\n  styleUrls: ['./tpastream-connect.page.scss'],\n})\nexport class TPAStreamConnectPage implements OnInit {\n  pageText: Record<string, string> = pageText;\n  isWeb = false;\n  streamStep = StreamStep;\n  step = StreamStep.NONE;\n  subscription = new Subscription();\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private accountService: AccountService,\n    private qualtricsService: QualtricsService,\n    private ngZone: NgZone,\n    private modalController: ModalController,\n    private tpaStreamService: TPAStreamService\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  ngOnInit() {\n    this.displayTPA('#tpa-stream');\n  }\n\n  displayTPA(elementId: string, streamConnect = window.StreamConnect) {\n    const prefix = this.utilityService.getEnvironment().tpaPrefix;\n    this.subscription.add(\n      this.accountService\n        .getParticipant()\n        .pipe(first())\n        .subscribe(async (part: Participant) => {\n          const userProps: QualtricsUserProps = await this.qualtricsService.getUserProperties();\n          streamConnect({\n            el: elementId,\n            isDemo: false,\n            sdkToken: this.utilityService.getEnvironment().tpaSdk,\n            user: {\n              firstName: part.firstName,\n              lastName: part.lastName,\n              email: part.profileId + '@voya.com',\n              memberSystemKey: part.profileId,\n            },\n            employer: {\n              name: prefix + userProps.clientName,\n              systemKey: prefix + userProps.clientId,\n              vendor: 'internal',\n            },\n            doneGetSDK: () => {\n              this.setStep(StreamStep.LOAD);\n            },\n            doneChoosePayer: () => {\n              this.setStep(StreamStep.CHOOSE_PAYER);\n            },\n            doneTermsOfService: () => {\n              this.setStep(StreamStep.TERMS_OF_SERVICE);\n            },\n            doneCreatedForm: () => {\n              this.setStep(StreamStep.CREATED_FORM);\n            },\n            donePostCredentials: () => {\n              this.setStep(StreamStep.POST_CREDS);\n            },\n            doneRealTime: () => {\n              this.setStep(StreamStep.REAL_TIME);\n            },\n            donePopUp: () => {\n              this.setStep(StreamStep.POPUP);\n            },\n            doneEasyEnroll: () => {\n              this.setStep(StreamStep.DONE_ENROLL);\n            },\n            handleFormErrors: () => {\n              this.setStep(StreamStep.FORM_ERROR);\n            },\n            userSchema: {},\n          });\n        })\n    );\n  }\n\n  setStep(aStep: StreamStep) {\n    this.ngZone.run(() => {\n      this.step = aStep;\n    });\n  }\n\n  closeClicked() {\n    this.tpaStreamService.getTPAData(true);\n    if (this.isWeb) {\n      this.utilityService.navigateByUrl('coverages/all-coverages/tpaclaims');\n    } else {\n      this.modalController.dismiss();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {ModalHeaderContent} from './models/modalHeaderContentModel';\nimport modalHeaderContent from './constants/modalHeaderContent.json';\nimport {ModalController} from '@ionic/angular';\nimport {Location} from '@angular/common';\nimport {MXService} from '@shared-lib/services/mx-service/mx.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-modal-header',\n  templateUrl: './modal-header.component.html',\n  styleUrls: ['./modal-header.component.scss'],\n})\nexport class ModalHeaderComponent {\n  content: ModalHeaderContent = modalHeaderContent;\n  @Input() headerText: string;\n  @Input() back: boolean;\n  @Input() border = true;\n  @Input() mxAccount: boolean;\n  @Input() backUrl?: string;\n\n  constructor(\n    private modalController: ModalController,\n    private location: Location,\n    private mxService: MXService,\n    private router: Router\n  ) {}\n\n  closeDialog() {\n    if (this.back) {\n      if (this.backUrl) {\n        this.router.navigateByUrl(this.backUrl);\n      } else {\n        this.location.back();\n      }\n    } else {\n      if (this.mxAccount) {\n        this.mxService.getMxMemberConnect(true);\n        this.mxService.getMxAccountConnect(true);\n        this.mxService.removeMXWindowEventListener();\n      }\n      this.modalController.dismiss();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {ModalHeaderComponent} from './modal-header.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [ModalHeaderComponent],\n  exports: [ModalHeaderComponent],\n})\nexport class ModalHeaderComponentModule {}\n","import {Injectable} from '@angular/core';\nimport {\n  BehaviorSubject,\n  from,\n  Observable,\n  ReplaySubject,\n  Subscription,\n} from 'rxjs';\nimport {BaseService} from '../base/base-factory-provider';\nimport {SharedUtilityService} from '../utility/utility.service';\nimport {ConsentType} from './constants/consentType.enum';\nimport {endpoints} from './constants/endpoints';\nimport {ConsentStatus} from './model/consent.model';\nimport {NavigationStart, Router} from '@angular/router';\nimport {skip} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ConsentService {\n  private endpoints;\n  private subscription = new Subscription();\n  private medicalConsentData: Observable<ConsentStatus>;\n  private medicalConsentSubject: ReplaySubject<boolean> = new ReplaySubject<\n    boolean\n  >(1);\n\n  justGaveConsent = new BehaviorSubject<boolean>(false);\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService,\n    private router: Router\n  ) {\n    this.endpoints = this.utilityService.appendBaseUrlToEndpoints(endpoints);\n  }\n\n  getMedicalConsent(refresh = false): Observable<boolean> {\n    if (!this.medicalConsentData || refresh) {\n      this.medicalConsentData = from(\n        this.baseService.post(this.endpoints.getConsent, {\n          consentTypeName: ConsentType.MEDICAL,\n        })\n      );\n      const subscription = this.medicalConsentData.subscribe(result =>\n        this.medicalConsentSubject.next(result.consentStatus === 'APPROVED')\n      );\n      this.subscription.add(subscription);\n    }\n    return this.medicalConsentSubject;\n  }\n\n  setConsent(type: ConsentType, approved: boolean): Promise<void> {\n    if (approved) {\n      this.setJustGaveConsent();\n    }\n    return this.baseService.post(this.endpoints.saveConsent, {\n      consentTypeName: type,\n      consentStatus: approved ? 'APPROVED' : 'DENIED',\n    });\n  }\n\n  setJustGaveConsent() {\n    this.justGaveConsent.next(true);\n    const sub = this.router.events.pipe(skip(1)).subscribe(async event => {\n      if (event instanceof NavigationStart) {\n        this.justGaveConsent.next(false);\n        sub.unsubscribe();\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","export enum ConsentType {\n  MEDICAL = 'Medical',\n}\n","const contextRoot = 'myvoyage/ws/ers/';\n\nexport const endpoints = {\n  getConsent: contextRoot + 'service/person/consent',\n  saveConsent: contextRoot + 'service/saveConsent',\n};\n","const contextRoot = 'myvoyage/tpa/';\n\nexport const endPoints = {\n  healthUtilization: contextRoot + 'healthUtlization',\n  disablePolicyHolder: contextRoot + 'health/enableDisable',\n};\n","import {Injectable, OnDestroy} from '@angular/core';\nimport {BaseService} from '../base/base-factory-provider';\nimport {endPoints} from './constants/endpoints';\nimport {SharedUtilityService} from '../utility/utility.service';\nimport {\n  BehaviorSubject,\n  from,\n  Observable,\n  ReplaySubject,\n  Subscription,\n} from 'rxjs';\nimport {TPAClaimsData} from './models/tpa.model';\nimport {ModalController} from '@ionic/angular';\nimport {TPAStreamConnectPage} from '@shared-lib/components/coverages/tpastream-connect/tpastream-connect.page';\nimport {Router} from '@angular/router';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TPAStreamService implements OnDestroy {\n  endpoints;\n  isWeb = false;\n  private tpaData: Observable<TPAClaimsData> = null;\n  private tpaDataSubject: ReplaySubject<TPAClaimsData> = new ReplaySubject();\n  private subscription: Subscription = new Subscription();\n\n  tpaDataReload$: BehaviorSubject<void> = new BehaviorSubject(null);\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private baseService: BaseService,\n    private modalController: ModalController,\n    private router: Router\n  ) {\n    this.endpoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  processTPAData(tpaData: TPAClaimsData) {\n    const carrierNames = {};\n    tpaData.carriers.forEach(carrier => {\n      carrierNames[carrier.carrierId] = carrier.carrierName;\n    });\n\n    Object.keys(tpaData.groupingCategoryDetails).forEach(key => {\n      for (const element of tpaData.groupingCategoryDetails[key]) {\n        if (element.serviceName === 'rx') {\n          if (element.claimLines && element.claimLines.length > 0) {\n            element.drugName = element.claimLines[0].procedure_name;\n          }\n        }\n        element.carrierName = carrierNames[element.carrierId];\n      }\n    });\n  }\n\n  getTPAData(refresh = false): Observable<TPAClaimsData> {\n    if (this.tpaData == null || refresh) {\n      this.tpaDataReload$.next();\n      this.tpaData = from(\n        this.baseService.post(this.endpoints.healthUtilization, {})\n      );\n\n      const subscription = this.tpaData.subscribe(result => {\n        this.processTPAData(result);\n        this.tpaDataSubject.next(result);\n      });\n      this.subscription.add(subscription);\n    }\n    return this.tpaDataSubject;\n  }\n\n  async openTPAConnect(redirect = false) {\n    if (this.isWeb) {\n      this.router.navigateByUrl('coverages/all-coverages/tpaclaims/connect');\n    } else {\n      const modal = await this.modalController.create({\n        component: TPAStreamConnectPage,\n        cssClass: 'modal-fullscreen',\n        swipeToClose: false,\n      });\n      if (redirect) {\n        modal.onWillDismiss().then(() => {\n          this.router.navigateByUrl('coverages/coverage-tabs/insights');\n        });\n      }\n      modal.present();\n    }\n  }\n\n  async revokeCarrier(\n    policyHolderId: number,\n    memberId: number\n  ): Promise<boolean> {\n    const payload = {\n      memberId: memberId,\n      policyHolderId: policyHolderId,\n      enable: false,\n    };\n    const result = await this.baseService.post(\n      this.endpoints.disablePolicyHolder,\n      payload\n    );\n    return result === true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","export default \"<div class=\\\"tpa\\\">\\n  <app-modal-header\\n    *ngIf=\\\"!isWeb\\\"\\n    [headerText]=\\\"pageText.headerLable\\\"\\n  ></app-modal-header>\\n  <div *ngIf=\\\"isWeb\\\" class=\\\"web-header\\\">\\n    <ion-row>\\n      <ion-col (click)=\\\"closeClicked()\\\" size=\\\"3\\\" class=\\\"close\\\">Close</ion-col>\\n      <ion-col size=\\\"6\\\" class=\\\"title-col\\\"\\n        ><span class=\\\"title\\\">{{pageText.headerLable}}</span></ion-col\\n      >\\n      <ion-col size=\\\"3\\\"></ion-col>\\n    </ion-row>\\n  </div>\\n  <div *ngIf=\\\"step == streamStep.CHOOSE_PAYER\\\">\\n    <div class=\\\"header\\\">\\n      <h6>{{pageText.choseCarrier}}</h6>\\n      <span>{{pageText.addMore}}</span>\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"step == streamStep.REAL_TIME || step == streamStep.DONE_ENROLL\\\">\\n    <img\\n      class=\\\"real-time-img\\\"\\n      src=\\\"assets/icon/realtime_verification.svg\\\"\\n      alt=\\\"{{pageText.verificationAlt}}\\\"\\n    />\\n  </div>\\n  <div id=\\\"tpa-stream\\\"></div>\\n  <div *ngIf=\\\"step == streamStep.DONE_ENROLL\\\">\\n    <ion-button\\n      (click)=\\\"closeClicked()\\\"\\n      name=\\\"submit\\\"\\n      shape=\\\"round\\\"\\n      expand=\\\"block\\\"\\n      type=\\\"submit\\\"\\n      color=\\\"btncolor\\\"\\n      id=\\\"close-btn\\\"\\n    >\\n      {{pageText.close}}\\n    </ion-button>\\n  </div>\\n</div>\\n\";","export default \"<ion-header>\\n  <ion-toolbar mode=\\\"ios\\\" [ngClass]=\\\"{border: border}\\\">\\n    <ion-buttons slot=\\\"secondary\\\">\\n      <ion-button id=\\\"close-button\\\" (click)=\\\"closeDialog()\\\">\\n        {{ content.closeText }}\\n      </ion-button>\\n    </ion-buttons>\\n    <ion-title>{{ headerText }}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\";"],"names":[],"sourceRoot":"webpack:///"}