{"version":3,"mappings":"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","names":["routes","path","component","_biometrics_page__WEBPACK_IMPORTED_MODULE_0__","BiometricsPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","BiometricsPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_biometrics_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_biometrics_page__WEBPACK_IMPORTED_MODULE_1__","BiometricsPage","vaultService","headerFooterService","authService","alertController","platform","getBiometricsIconName","bioIcon","getBiometricsLabel","bioText","publishType","type","_shared_lib_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_7__","actionOption","displayLogo","headername","_shared_lib_modules_footer_constants_footerType_enum__WEBPACK_IMPORTED_MODULE_2__","create","header","pageText","biometricsError","buttons","alert","present","biometricsChanged","result","showError","faceIDEnabled","is","lockVault","unlockVault","isLocked","navigateToLoggedInLanding","enableFaceID","setDefaultFaceIDDisabled","disableFaceID","_shared_service_authentication_vault_service__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_services_header_footer_type_headerFooterType_service__WEBPACK_IMPORTED_MODULE_5__","_mobile_app_modules_shared_service_authentication_authentication_service__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_9__","selector","template","HeaderFooterTypeService","headerTypeService","footerTypeService","headerInfo","footerInfo","publish","_header_type_header_type_service__WEBPACK_IMPORTED_MODULE_1__","_shared_lib_modules_footer_services_footer_type_footer_type_service__WEBPACK_IMPORTED_MODULE_0__","providedIn","__webpack_exports__"],"sources":["webpack:///mobile/src/app/modules/features/landing/biometrics/biometrics-routing.module.ts","webpack:///mobile/src/app/modules/features/landing/biometrics/biometrics.module.ts","webpack:///mobile/src/app/modules/features/landing/biometrics/biometrics.page.ts","webpack:///shared-lib/services/header-footer-type/headerFooterType.service.ts","webpack:///mobile/src/app/modules/features/landing/biometrics/biometrics.page.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {BiometricsPage} from './biometrics.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: BiometricsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class BiometricsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {BiometricsPageRoutingModule} from './biometrics-routing.module';\n\nimport {BiometricsPage} from './biometrics.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    BiometricsPageRoutingModule,\n  ],\n  declarations: [BiometricsPage],\n})\nexport class BiometricsPageModule {}\n","import {Component, OnInit} from '@angular/core';\nimport {AlertController, Platform, ViewWillEnter} from '@ionic/angular';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {AuthenticationService} from '@mobile/app/modules/shared/service/authentication/authentication.service';\nimport {VaultService} from '../../../shared/service/authentication/vault.service';\nimport {HeaderFooterTypeService} from '@shared-lib/services/header-footer-type/headerFooterType.service';\nimport * as bioText from './constants/biometrics-content.json';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\n\n@Component({\n  selector: 'app-biometrics',\n  templateUrl: './biometrics.page.html',\n  styleUrls: ['./biometrics.page.scss'],\n})\nexport class BiometricsPage implements ViewWillEnter, OnInit {\n  pageText: Record<string, string> = bioText;\n  bioIcon: string;\n  bioText: string;\n  faceIDEnabled = false;\n\n  constructor(\n    private vaultService: VaultService,\n    private headerFooterService: HeaderFooterTypeService,\n    private authService: AuthenticationService,\n    private alertController: AlertController,\n    private platform: Platform\n  ) {}\n\n  async ngOnInit(): Promise<void> {\n    this.bioIcon = await this.authService.getBiometricsIconName();\n    this.bioText = await this.authService.getBiometricsLabel();\n  }\n\n  ionViewWillEnter(): void {\n    this.headerFooterService.publishType(\n      {\n        type: HeaderType.navbar,\n        actionOption: {\n          displayLogo: true,\n          headername: '',\n        },\n      },\n      {type: FooterType.none}\n    );\n  }\n\n  async showError() {\n    const alert = await this.alertController.create({\n      header: this.pageText.biometricsError,\n      buttons: ['OK'],\n    });\n    alert.present();\n  }\n\n  async continueClicked() {\n    const result = await this.biometricsChanged();\n    if (!result) {\n      this.showError();\n      return;\n    }\n\n    if (this.faceIDEnabled) {\n      if (this.platform.is('ios')) {\n        await this.vaultService.lockVault();\n        await this.vaultService.unlockVault();\n      }\n\n      const isLocked = await this.vaultService.isLocked();\n      if (!isLocked) {\n        this.authService.navigateToLoggedInLanding();\n      }\n    } else {\n      this.authService.navigateToLoggedInLanding();\n    }\n  }\n\n  async biometricsChanged(): Promise<boolean> {\n    if (this.faceIDEnabled) {\n      const result = await this.vaultService.enableFaceID();\n      if (result) {\n        this.vaultService.setDefaultFaceIDDisabled(false);\n      } else {\n        this.faceIDEnabled = false;\n      }\n      return result;\n    } else {\n      this.vaultService.disableFaceID();\n      this.vaultService.setDefaultFaceIDDisabled(true);\n      return true;\n    }\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FooterInfo} from '@shared-lib/modules/footer/models/footerInfo.model';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport {HeaderInfo} from '../../models/headerInfo.model';\nimport {HeaderTypeService} from '../header-type/header-type.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeaderFooterTypeService {\n  constructor(\n    private headerTypeService: HeaderTypeService,\n    private footerTypeService: FooterTypeService\n  ) {}\n\n  publishType(headerInfo: HeaderInfo, footerInfo: FooterInfo): void {\n    this.headerTypeService.publish(headerInfo);\n    this.footerTypeService.publish(footerInfo);\n  }\n}\n","export default \"<ion-grid>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"header\\\">{{pageText.header}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"sub-header\\\">{{pageText.subHeader}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"toggle-row\\\">\\n    <ion-col>\\n      <img src=\\\"{{bioIcon}}\\\" alt=\\\"biometrics\\\" /><ion-text class=\\\"bio-name\\\"\\n        >{{bioText}}</ion-text\\n      >\\n    </ion-col>\\n    <ion-col class=\\\"toggle-col\\\">\\n      <ion-toggle\\n        id=\\\"biometrics-toggle\\\"\\n        class=\\\"biometrics-toggle\\\"\\n        [(ngModel)]=\\\"faceIDEnabled\\\"\\n      ></ion-toggle>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"continue-row\\\">\\n    <ion-col>\\n      <ion-button\\n        (click)=\\\"continueClicked()\\\"\\n        class=\\\"continue\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        id=\\\"continue-btn\\\"\\n      >\\n        {{pageText.continue}}\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";"]}