{"version":3,"mappings":"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","names":["routes","path","component","_account_and_personal_info_page__WEBPACK_IMPORTED_MODULE_0__","children","loadChildren","Promise","then","m","AccountInfoPageModule","PersonalInfoPageModule","__webpack_require__","EditDisplayNamePageModule","EditEmailPageModule","EditPhonePageModule","EditPasswordPageModule","EditAccountRecoveryPageModule","UnregisterDevicePageModule","AccountAndPersonalInfoPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","AccountAndPersonalInfoPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_7__","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","_ionic_angular__WEBPACK_IMPORTED_MODULE_9__","_account_and_personal_info_routing_module__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_components_loading_text_loading_text_module__WEBPACK_IMPORTED_MODULE_4__","_components_account_info_account_info_module__WEBPACK_IMPORTED_MODULE_0__","_components_personal_info_personal_info_module__WEBPACK_IMPORTED_MODULE_1__","declarations","_account_and_personal_info_page__WEBPACK_IMPORTED_MODULE_3__","AccountAndPersonalInfoPage","headerType","router","sharedUtilityService","headername","btnleft","btnright","buttonLeft","name","link","buttonRight","_constants_persionalInfo_json__WEBPACK_IMPORTED_MODULE_4__","isWeb","getIsWeb","tabs","push","label","content","tabslabel","persionalInfo","accountInfo","publish","type","_shared_lib_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_2__","actionOption","rootPath","selectedTab","navigateByUrl","_shared_lib_services_header_type_header_type_service__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_6__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_5__","selector","template","_account_info_page__WEBPACK_IMPORTED_MODULE_0__","AccountInfoPageRoutingModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_account_info_routing_module__WEBPACK_IMPORTED_MODULE_0__","_account_info_page__WEBPACK_IMPORTED_MODULE_1__","_components_account_info_menu_account_info_menu_component__WEBPACK_IMPORTED_MODULE_2__","AccountInfoPage","accountInfoService","accountService","settingsService","utilityService","JSON","parse","stringify","fetchData","getPrefs","settingsPrefSubscription","getNotificationSettings","subscribe","settingsPrefs","email","primaryEmail","_a","phone","formatPhoneNumber","mobilePhone","_b","phoneNumber","emailError","_c","lastFailedInd","loading","participantDataSubscription","getParticipant","participantData","data","unsubscribe","_shared_lib_services_account_info_account_info_service__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_services_account_account_service__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_services_notification_setting_notification_setting_service__WEBPACK_IMPORTED_MODULE_5__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_6__","AccountInfoMenuComponent","platformService","modalController","accessService","editDisplayNameService","injector","_shared_lib_services_account_info_constants_accountText_json__WEBPACK_IMPORTED_MODULE_2__","rxjs__WEBPACK_IMPORTED_MODULE_16__","get","_shared_lib_services_account_account_service__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_17__","notificationService","_shared_lib_services_notification_setting_notification_setting_service__WEBPACK_IMPORTED_MODULE_12__","_shared_lib_services_account_info_account_info_service__WEBPACK_IMPORTED_MODULE_13__","isDesktop","subscription","add","prefSettings","emailContactId","partyContactId","formatPhone","phoneContactId","checkMyvoyageAccess","myVoyaAccess","openPwebAccountLink","decodeURIComponent","myProfileURL","displayText","edit","nameTitle","displayName","_shared_lib_components_popup_input_dialog_constants_popup_input_type_enum__WEBPACK_IMPORTED_MODULE_7__","emailTitle","phoneTitle","phoneSubTitle","loginInfo","openPwebProfile","title","inputTitle","defaultValue","accountType","inputType","popupTextKey","create","_shared_lib_components_popup_input_dialog_popup_input_dialog_component__WEBPACK_IMPORTED_MODULE_6__","cssClass","swipeToClose","componentProps","value","validator","validation","saveFunction","saveData","res","modal","onDidDismiss","modalDismissed","undefined","present","emailVaild","validateEmail","invalidEmail","phoneVaild","validatePhone","invalidPhone","trim","length","invalidDisplayName","_shared_lib_components_alert_alert_component__WEBPACK_IMPORTED_MODULE_8__","titleMessage","alert","message","imageUrl","saveDisplayName","saveEmailOrPhone","replace","resp","functionName","contactId","saved","setNotificationSettings","setParticipant","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_services_platform_platform_service__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_19__","_shared_lib_services_access_access_service__WEBPACK_IMPORTED_MODULE_14__","_shared_lib_services_edit_display_name_edit_display_name_service__WEBPACK_IMPORTED_MODULE_15__","_angular_core__WEBPACK_IMPORTED_MODULE_20__","_personal_info_page__WEBPACK_IMPORTED_MODULE_0__","PersonalInfoPageRoutingModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_personal_info_routing_module__WEBPACK_IMPORTED_MODULE_0__","_personal_info_page__WEBPACK_IMPORTED_MODULE_1__","PersonalInfoPage","_constants_personalInfoText_json__WEBPACK_IMPORTED_MODULE_2__","fetchParticipant","AccountInfoService","baseService","_constants_endpoints__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_3__","endPoints","appendBaseUrlToEndpoints","moreContentSubject","rxjs__WEBPACK_IMPORTED_MODULE_4__","recoveryInfoSubject","refresh","recoveryInfo","getAccountRecovery","next","result","getMessage","payload","post","saveContact","phoneNum","newStr","substring","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_1__","_shared_lib_services_base_base_factory_provider__WEBPACK_IMPORTED_MODULE_2__","providedIn","contextRootCustomers","contextRoot","partyID","EditDisplayNameService","__webpack_exports__"],"sources":["webpack:///shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info-routing.module.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info.module.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info.page.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info-routing.module.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info.module.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info.page.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/account-info/components/account-info-menu/account-info-menu.component.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info-routing.module.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info.module.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info.page.ts","webpack:///shared-lib/services/account-info/account-info.service.ts","webpack:///shared-lib/services/account-info/constants/endpoints.ts","webpack:///shared-lib/services/edit-display-name/constants/endpoints.ts","webpack:///shared-lib/services/edit-display-name/edit-display-name.service.ts","webpack:///shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info.page.html","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info.page.html","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/account-info/components/account-info-menu/account-info-menu.component.html","webpack:///shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info.page.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {AccountAndPersonalInfoPage} from './account-and-personal-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountAndPersonalInfoPage,\n    children: [\n      {\n        path: 'account-info',\n        loadChildren: () =>\n          import('./components/account-info/account-info.module').then(\n            m => m.AccountInfoPageModule\n          ),\n      },\n      {\n        path: 'personal-info',\n        loadChildren: () =>\n          import('./components/personal-info/personal-info.module').then(\n            m => m.PersonalInfoPageModule\n          ),\n      },\n    ],\n  },\n  {\n    path: 'edit-display-name',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-display-name/edit-display-name.module'\n      ).then(m => m.EditDisplayNamePageModule),\n  },\n  {\n    path: 'edit-email',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-email/edit-email.module'\n      ).then(m => m.EditEmailPageModule),\n  },\n  {\n    path: 'edit-phone',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-phone/edit-phone.module'\n      ).then(m => m.EditPhonePageModule),\n  },\n  {\n    path: 'edit-password',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-password/edit-password.module'\n      ).then(m => m.EditPasswordPageModule),\n  },\n\n  {\n    path: 'edit-account-recovery',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-account-recovery/edit-account-recovery.module'\n      ).then(m => m.EditAccountRecoveryPageModule),\n  },\n\n  {\n    path: 'unregister-device',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/unregister-device/unregister-device.module'\n      ).then(m => m.UnregisterDevicePageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountAndPersonalInfoPageRoutingModule {}\n","import {AccountInfoPageModule} from './components/account-info/account-info.module';\nimport {PersonalInfoPageModule} from './components/personal-info/personal-info.module';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {AccountAndPersonalInfoPageRoutingModule} from './account-and-personal-info-routing.module';\nimport {AccountAndPersonalInfoPage} from './account-and-personal-info.page';\nimport {LoadingTextComponentModule} from '@shared-lib/components/loading-text/loading-text.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountAndPersonalInfoPageRoutingModule,\n    LoadingTextComponentModule,\n    AccountInfoPageModule,\n    PersonalInfoPageModule,\n  ],\n  declarations: [AccountAndPersonalInfoPage],\n})\nexport class AccountAndPersonalInfoPageModule {}\n","import {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport {ActionOptions} from '@shared-lib/models/ActionOptions.model';\nimport {HeaderTypeService} from '@shared-lib/services/header-type/header-type.service';\nimport {Component, OnInit} from '@angular/core';\nimport {SubHeaderTab} from 'shared-lib/models/tab-sub-header.model';\nimport * as pageText from './constants/persionalInfo.json';\nimport {Router} from '@angular/router';\nimport {PersonalInfoTab} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'app-account-and-personal-info',\n  templateUrl: './account-and-personal-info.page.html',\n  styleUrls: ['./account-and-personal-info.page.scss'],\n})\nexport class AccountAndPersonalInfoPage implements OnInit {\n  actionOption: ActionOptions = {\n    headername: 'Personal & Account Info',\n    btnleft: true,\n    btnright: true,\n    buttonLeft: {\n      name: '',\n      link: 'settings',\n    },\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n\n  tabs: SubHeaderTab[] = [];\n  selectedTab = 'account-info';\n  isWeb: boolean;\n  content: PersonalInfoTab = (pageText as any).default;\n\n  constructor(\n    private headerType: HeaderTypeService,\n    private router: Router,\n    private sharedUtilityService: SharedUtilityService\n  ) {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n  }\n\n  ngOnInit(): void {\n    this.tabs.push({\n      label: this.content.tabslabel.persionalInfo,\n      link: 'personal-info',\n    });\n    this.tabs.push({\n      label: this.content.tabslabel.accountInfo,\n      link: 'account-info',\n    });\n  }\n\n  ionViewWillEnter() {\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n    const rootPath = this.isWeb ? 'more' : 'settings';\n    if (this.selectedTab == 'personal-info') {\n      this.router.navigateByUrl(\n        `${rootPath}/account-and-personal-info/personal-info`\n      );\n    } else {\n      this.router.navigateByUrl(\n        `${rootPath}/account-and-personal-info/account-info`\n      );\n    }\n  }\n\n  handleClick(selectedTab: SubHeaderTab) {\n    this.selectedTab = selectedTab.link;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {AccountInfoPage} from './account-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountInfoPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountInfoPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {AccountInfoPageRoutingModule} from './account-info-routing.module';\n\nimport {AccountInfoPage} from './account-info.page';\nimport {AccountInfoMenuComponent} from './components/account-info-menu/account-info-menu.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountInfoPageRoutingModule,\n  ],\n  declarations: [AccountInfoPage, AccountInfoMenuComponent],\n  exports: [AccountInfoPage, AccountInfoMenuComponent],\n})\nexport class AccountInfoPageModule {}\n","import {\n  AccountInfoText,\n  PasswordResponse,\n} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {Subscription} from 'rxjs';\nimport * as accountText from '@shared-lib/services/account-info/constants/accountText.json';\nimport {Component, OnInit} from '@angular/core';\nimport {AccountInfoService} from '@shared-lib/services/account-info/account-info.service';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {SettingsPreferences} from '@shared-lib/services/notification-setting/models/notification-settings-preferences.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\n\n@Component({\n  selector: 'app-account-info',\n  templateUrl: './account-info.page.html',\n  styleUrls: ['./account-info.page.scss'],\n})\nexport class AccountInfoPage implements OnInit {\n  displayText: AccountInfoText = JSON.parse(JSON.stringify(accountText))\n    .default;\n  participantDataSubscription: Subscription;\n  settingsPrefSubscription: Subscription;\n  participantData: Participant;\n  PasswordData: PasswordResponse;\n  emailError = false;\n  loading = true;\n  email: string;\n  phone: string;\n  isWeb: boolean;\n\n  constructor(\n    private accountInfoService: AccountInfoService,\n    private accountService: AccountService,\n    private settingsService: NotificationsSettingService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.fetchData();\n    this.getPrefs();\n  }\n\n  async getPrefs(): Promise<void> {\n    this.settingsPrefSubscription = this.settingsService\n      .getNotificationSettings()\n      .subscribe((settingsPrefs: SettingsPreferences) => {\n        this.email = settingsPrefs.primaryEmail?.email;\n        this.phone = this.accountInfoService.formatPhoneNumber(\n          settingsPrefs.mobilePhone?.phoneNumber\n        );\n        this.emailError = settingsPrefs.primaryEmail?.lastFailedInd === 'Y';\n        this.loading = false;\n      });\n  }\n\n  fetchData(): void {\n    this.participantDataSubscription = this.accountService\n      .getParticipant()\n      .subscribe(data => {\n        this.participantData = data;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.settingsPrefSubscription.unsubscribe();\n    this.participantDataSubscription.unsubscribe();\n  }\n}\n","import {Component, Injector, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AccountInfoText} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport accountText from '@shared-lib/services/account-info/constants/accountText.json';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PlatformService} from '@shared-lib/services/platform/platform.service';\nimport {ModalController} from '@ionic/angular';\nimport {PopupInputDialogComponent} from '@shared-lib/components/popup-input-dialog/popup-input-dialog.component';\nimport {Subscription} from 'rxjs';\nimport {PopupInputType} from '@shared-lib/components/popup-input-dialog/constants/popup-input-type.enum';\nimport {AlertComponent} from '@shared-lib/components/alert/alert.component';\nimport * as editDisplayName from '@shared-lib/services/edit-display-name/constants/displayText.json';\nimport * as editEmail from '../edit-email/constants/displayText.json';\nimport * as editPhone from '../edit-phone/constants/displayText.json';\nimport {SettingsPreferences} from '@shared-lib/services/notification-setting/models/notification-settings-preferences.model';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {AccountInfoService} from '@shared-lib/services/account-info/account-info.service';\nimport {AccessService} from '@shared-lib/services/access/access.service';\nimport {EditDisplayNameService} from '@shared-lib/services/edit-display-name/edit-display-name.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\n@Component({\n  selector: 'app-account-info-menu',\n  templateUrl: './account-info-menu.component.html',\n  styleUrls: ['./account-info-menu.component.scss'],\n})\nexport class AccountInfoMenuComponent {\n  @Input() label: string;\n  @Input() value: string;\n  @Input() recoveryType: string;\n  @Input() emailError: boolean;\n  displayText: AccountInfoText = accountText;\n  isWeb: boolean;\n  isDesktop: boolean;\n  participantData: Participant;\n  subscription = new Subscription();\n  editNamePopupText: any = JSON.parse(JSON.stringify(editDisplayName)).default;\n  editEmailPopupText: any = JSON.parse(JSON.stringify(editEmail)).default;\n  editPhonePopupText: any = JSON.parse(JSON.stringify(editPhone)).default;\n  email: string;\n  emailContactId: string;\n  prefSettings: SettingsPreferences;\n  phone: string;\n  phoneContactId: string;\n  private accountService: AccountService;\n  private router: Router;\n  private notificationService: NotificationsSettingService;\n  private accountInfoService: AccountInfoService;\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private platformService: PlatformService,\n    private modalController: ModalController,\n    private accessService: AccessService,\n    private editDisplayNameService: EditDisplayNameService,\n    private injector: Injector\n  ) {\n    this.accountService = injector.get<AccountService>(AccountService);\n    this.router = injector.get<Router>(Router);\n    this.notificationService = injector.get<NotificationsSettingService>(\n      NotificationsSettingService\n    );\n    this.accountInfoService = injector.get<AccountInfoService>(\n      AccountInfoService\n    );\n    this.isWeb = this.utilityService.getIsWeb();\n    this.platformService.isDesktop().subscribe(data => {\n      this.isDesktop = data;\n    });\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.accountService.getParticipant().subscribe(data => {\n        this.participantData = data;\n      })\n    );\n    this.subscription.add(\n      this.notificationService\n        .getNotificationSettings()\n        .subscribe((prefSettings: SettingsPreferences) => {\n          this.prefSettings = prefSettings;\n          this.emailContactId = prefSettings.primaryEmail.partyContactId;\n          this.email = prefSettings.primaryEmail.email;\n          this.phone = this.utilityService.formatPhone(\n            prefSettings.mobilePhone.phoneNumber\n          );\n          this.phoneContactId = prefSettings.mobilePhone.partyContactId;\n        })\n    );\n  }\n\n  async openPwebProfile() {\n    const myVoyaAccess = await this.accessService.checkMyvoyageAccess();\n    this.accountService.openPwebAccountLink(\n      decodeURIComponent(myVoyaAccess.myProfileURL)\n    );\n  }\n\n  editProperty(): void {\n    const rootPath = this.isWeb && !this.isDesktop ? 'more' : 'settings';\n    if (this.isWeb && this.isDesktop) {\n      switch (this.label) {\n        case this.displayText.name:\n          this.edit(\n            this.displayText.nameTitle,\n            this.displayText.name,\n            this.participantData.displayName,\n            this.displayText.name,\n            PopupInputType.text,\n            'editNamePopupText'\n          );\n          break;\n        case this.displayText.email:\n          this.edit(\n            this.displayText.emailTitle,\n            this.displayText.email,\n            this.email,\n            this.displayText.email,\n            PopupInputType.email,\n            'editEmailPopupText'\n          );\n          break;\n        case this.displayText.phone:\n          this.edit(\n            this.displayText.phoneTitle,\n            this.displayText.phoneSubTitle,\n            this.phone,\n            this.displayText.phone,\n            PopupInputType.phone,\n            'editPhonePopupText'\n          );\n          break;\n        case this.displayText.loginInfo:\n          this.openPwebProfile();\n          break;\n      }\n    } else {\n      switch (this.label) {\n        case this.displayText.name:\n          this.router.navigateByUrl(\n            `/${rootPath}/account-and-personal-info/edit-display-name`\n          );\n          break;\n        case this.displayText.email:\n          this.router.navigateByUrl(\n            `/${rootPath}/account-and-personal-info/edit-email`\n          );\n          break;\n        case this.displayText.phone:\n          this.router.navigateByUrl(\n            `/${rootPath}/account-and-personal-info/edit-phone`\n          );\n          break;\n        case this.displayText.loginInfo:\n          this.openPwebProfile();\n          break;\n      }\n    }\n  }\n\n  async edit(\n    title: string,\n    inputTitle: string,\n    defaultValue: string,\n    accountType: string,\n    inputType: string,\n    popupTextKey: string\n  ) {\n    const modal = await this.modalController.create({\n      component: PopupInputDialogComponent,\n      cssClass: 'modal-not-fullscreen',\n      swipeToClose: false,\n      componentProps: {\n        title: title,\n        inputTitle: inputTitle,\n        value: defaultValue,\n        inputType: inputType,\n        validator: (value?: string): string => {\n          return this.validation(accountType, value);\n        },\n        saveFunction: async (value: string): Promise<boolean> => {\n          return new Promise(res => {\n            this.saveData(value, accountType, popupTextKey);\n            res(true);\n          });\n        },\n      },\n    });\n    modal.onDidDismiss().then(data => {\n      this.modalDismissed(data, undefined, undefined);\n    });\n    return modal.present();\n  }\n\n  validation(accountType: string, value: string): string | null {\n    if (accountType === this.displayText.email) {\n      const emailVaild = this.utilityService.validateEmail(value);\n      if (!emailVaild) {\n        return this.displayText.invalidEmail;\n      } else {\n        return null;\n      }\n    } else if (accountType === this.displayText.phone) {\n      const phoneVaild = this.utilityService.validatePhone(value);\n      if (!phoneVaild) {\n        return this.displayText.invalidPhone;\n      } else {\n        return null;\n      }\n    } else if (accountType === this.displayText.name) {\n      if (value.trim().length < 1) {\n        return this.displayText.invalidDisplayName;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  async saveData(\n    value: string,\n    accountType: string,\n    popupTextKey: string\n  ): Promise<void> {\n    const modal = await this.modalController.create({\n      component: AlertComponent,\n      cssClass: 'modal-not-fullscreen',\n      swipeToClose: false,\n      componentProps: {\n        titleMessage: this[popupTextKey].alert.message,\n        imageUrl: this[popupTextKey].alert.imageUrl,\n        saveFunction: async (): Promise<boolean> => {\n          if (accountType === this.displayText.name) {\n            return this.saveDisplayName(value);\n          } else if (accountType === this.displayText.email) {\n            return this.saveEmailOrPhone(\n              value,\n              'saveEmail',\n              this.emailContactId\n            );\n          } else if (accountType === this.displayText.phone) {\n            value = value?.replace(/[-\\s]/g, '');\n            return this.saveEmailOrPhone(\n              value,\n              'savePhone',\n              this.phoneContactId\n            );\n          }\n        },\n      },\n    });\n    modal.onDidDismiss().then(data => {\n      this.modalDismissed(data, accountType, value);\n    });\n    return modal.present();\n  }\n\n  saveDisplayName(value: string): Promise<boolean> {\n    return new Promise(res => {\n      this.editDisplayNameService.saveDisplayName(value).then(resp => {\n        if (resp.displayName && resp.displayName === value) {\n          res(true);\n        } else {\n          res(false);\n        }\n      });\n    });\n  }\n\n  saveEmailOrPhone(\n    value: string,\n    functionName: string,\n    contactId: string\n  ): Promise<boolean> {\n    return new Promise(res => {\n      this.accountInfoService[functionName](value, contactId).then(resp => {\n        if (resp) {\n          res(true);\n        } else {\n          res(false);\n        }\n      });\n    });\n  }\n\n  modalDismissed(data, accountType: string, value: string) {\n    if (data.data.saved || data.saved) {\n      if (accountType === this.displayText.email) {\n        this.prefSettings.primaryEmail.email = value;\n        this.notificationService.setNotificationSettings(this.prefSettings);\n      } else if (accountType === this.displayText.phone) {\n        this.prefSettings.mobilePhone.phoneNumber = value.replace(/-/g, '');\n        this.notificationService.setNotificationSettings(this.prefSettings);\n      } else if (accountType === this.displayText.name) {\n        this.participantData.displayName = value;\n        this.accountService.setParticipant(this.participantData);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {PersonalInfoPage} from './personal-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PersonalInfoPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PersonalInfoPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {PersonalInfoPageRoutingModule} from './personal-info-routing.module';\n\nimport {PersonalInfoPage} from './personal-info.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PersonalInfoPageRoutingModule,\n  ],\n  declarations: [PersonalInfoPage],\n  exports: [PersonalInfoPage],\n})\nexport class PersonalInfoPageModule {}\n","import {Subscription} from 'rxjs';\nimport {Component, OnInit} from '@angular/core';\nimport * as personalInfoText from './constants/personalInfoText.json';\nimport {PersonalInfo} from './models/personal-info.model';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\n@Component({\n  selector: 'app-personal-info',\n  templateUrl: './personal-info.page.html',\n  styleUrls: ['./personal-info.page.scss'],\n})\nexport class PersonalInfoPage implements OnInit {\n  displayText: PersonalInfo = (personalInfoText as any).default;\n  subscription: Subscription;\n  participantData: Participant;\n  isWeb: boolean;\n\n  constructor(\n    private accountService: AccountService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  async ngOnInit() {\n    this.fetchParticipant();\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  fetchParticipant() {\n    this.subscription = this.accountService.getParticipant().subscribe(data => {\n      this.participantData = data;\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  AccountRecovery,\n  MoreDescription,\n} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport {endPoints} from './constants/endpoints';\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {from, Observable, ReplaySubject, Subscription} from 'rxjs';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountInfoService implements OnDestroy {\n  endPoints: Record<string, string> = endPoints;\n  private message: Observable<MoreDescription> = null;\n  private recoveryInfo: Observable<AccountRecovery> = null;\n  private moreContentSubject: ReplaySubject<MoreDescription> = null;\n  private recoveryInfoSubject: ReplaySubject<AccountRecovery> = null;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private baseService: BaseService\n  ) {\n    this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n    this.moreContentSubject = new ReplaySubject(1);\n    this.recoveryInfoSubject = new ReplaySubject(1);\n  }\n\n  getAccountRecovery(refresh = false): Observable<AccountRecovery> {\n    if (!this.recoveryInfo || refresh) {\n      this.recoveryInfo = from(\n        this.baseService.get(this.endPoints.getAccountRecovery)\n      );\n      const subscription = this.recoveryInfo.subscribe(result => {\n        this.recoveryInfoSubject.next(result);\n      });\n      this.subscription.add(subscription);\n    }\n    return this.recoveryInfoSubject;\n  }\n\n  getScreenMessage(refresh = false): Observable<MoreDescription> {\n    if (!this.message || refresh) {\n      this.message = from(this.baseService.get(this.endPoints.getMessage));\n      const subscription = this.message.subscribe(result => {\n        this.moreContentSubject.next(result);\n      });\n      this.subscription.add(subscription);\n    }\n    return this.moreContentSubject;\n  }\n\n  saveEmail(email: string, contactId: string): Promise<any> {\n    let payload;\n    if (contactId) {\n      payload = {\n        primaryEmail: {\n          partyContactId: contactId,\n          email: email,\n        },\n      };\n    } else {\n      payload = {\n        primaryEmail: {\n          email: email,\n        },\n      };\n    }\n\n    return this.baseService.post(this.endPoints.saveContact, payload);\n  }\n\n  savePhone(phone: string, contactId: string): Promise<any> {\n    let payload;\n    if (contactId) {\n      payload = {\n        mobilePhone: {\n          partyContactId: contactId,\n          phoneNumber: phone,\n        },\n      };\n    } else {\n      payload = {\n        mobilePhone: {\n          phoneNumber: phone,\n        },\n      };\n    }\n\n    return this.baseService.post(this.endPoints.saveContact, payload);\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  formatPhoneNumber(phoneNum: string): string {\n    let newStr = '';\n    if (!phoneNum || phoneNum.length < 1) {\n      return newStr;\n    }\n    newStr = newStr + phoneNum.substring(0, 3) + '-';\n    newStr = newStr + phoneNum.substring(3, 6) + '-';\n    newStr = newStr + phoneNum.substring(6, 10);\n    return newStr;\n  }\n}\n","const contextRootCustomers = 'myvoya/ws/ers/service/customers/';\nconst contextRoot = 'myvoyage/ws/ers/';\nconst partyID = '272c2587-6b79-d874-e053-d22aac0a0939';\n\nexport const endPoints = {\n  getAccountRecovery: contextRootCustomers + `${partyID}/profile/loginInfo`,\n  getMessage: contextRoot + 'content/section/more',\n  saveContact: contextRoot + 'emvdata/saveContacts',\n};\n","const contextRoot = 'myvoya/ws/ers/service/customers/';\nconst partyID = '272c2587-6b79-d874-e053-d22aac0a0939';\n\nexport const endPoints = {\n  saveDisplayName: contextRoot + `${partyID}/profile/personalInfo`,\n};\n","import {Injectable} from '@angular/core';\nimport {endPoints} from './constants/endpoints';\nimport {DisplayName} from './models/edit-display-name.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditDisplayNameService {\n  endPoints: any = endPoints;\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private baseService: BaseService\n  ) {\n    this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n  }\n\n  async saveDisplayName(displayName: string): Promise<DisplayName> {\n    const name: DisplayName = {displayName: displayName};\n    return this.baseService.post(this.endPoints.saveDisplayName, name);\n  }\n}\n","export default \"<ion-tabs [ngClass]=\\\"isWeb? 'web-tabs':'mobile-tabs'\\\">\\n  <ion-tab-bar slot=\\\"top\\\">\\n    <ion-tab-button\\n      *ngFor=\\\"let tab of tabs\\\"\\n      [ngClass]=\\\"{'selectedRipple': selectedTab === tab.link}\\\"\\n      (click)=\\\"handleClick(tab)\\\"\\n      class=\\\"lightgrey\\\"\\n      [tab]=\\\"tab.link\\\"\\n    >\\n      <ion-label>{{tab.label}}</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n</ion-tabs>\\n\";","export default \"<div [ngClass]=\\\"isWeb? 'web-account-container':'mobile-account-container'\\\">\\n  <div *ngIf=\\\"loading; else elseBlock\\\">\\n    <ion-spinner></ion-spinner>\\n  </div>\\n  <ng-template #elseBlock>\\n    <app-account-info-menu\\n      *ngIf=\\\"participantData?.displayName\\\"\\n      [label]=\\\"displayText.name\\\"\\n      [value]=\\\"participantData?.displayName\\\"\\n    ></app-account-info-menu>\\n    <app-account-info-menu\\n      *ngIf=\\\"email\\\"\\n      [label]=\\\"displayText?.email\\\"\\n      [value]=\\\"email\\\"\\n      [emailError]=\\\"emailError\\\"\\n    ></app-account-info-menu>\\n    <app-account-info-menu\\n      *ngIf=\\\"phone\\\"\\n      [label]=\\\"displayText?.phone\\\"\\n      [value]=\\\"phone\\\"\\n    ></app-account-info-menu>\\n    <app-account-info-menu\\n      *ngIf=\\\"displayText?.loginInfoDesc\\\"\\n      [label]=\\\"displayText?.loginInfo\\\"\\n      [value]=\\\"displayText?.loginInfoDesc\\\"\\n    ></app-account-info-menu>\\n  </ng-template>\\n</div>\\n\";","export default \"<ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\n  <div [ngClass]=\\\"isWeb ? 'accountInfoWeb' : 'accountInfoMobile'\\\">\\n    <ion-item inset=\\\"true\\\" class=\\\"ion-no-padding\\\">\\n      <div\\n        class=\\\"menu-item menu-with-border\\\"\\n        [ngClass]=\\\"\\n          emailError && label === displayText?.email ? 'menu-item-error' : ''\\n        \\\"\\n      >\\n        <div class=\\\"menu-inner\\\" (click)=\\\"editProperty()\\\" id=\\\"{{ label }}\\\">\\n          <ion-row class=\\\"font-16 w-100\\\">\\n            <ion-col class=\\\"account-values\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text class=\\\"account-label\\\">{{ label }}</ion-text>\\n                </ion-col>\\n                <ion-col class=\\\"account-value\\\">\\n                  <ion-text class=\\\"error-value\\\">{{ value }}<br /></ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col class=\\\"ion-no-padding\\\">\\n                  <ion-text class=\\\"account-data font-w-600 recovery-value\\\">\\n                    <span\\n                      *ngIf=\\\"emailError && label === displayText?.email\\\"\\n                      class=\\\"error-text\\\"\\n                    >\\n                      {{ displayText?.emailErrorMsg }}<br /><br\\n                    /></span>\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row> </ion-row>\\n            </ion-col>\\n            <ion-col class=\\\"ionic-icon\\\">\\n              <div *ngIf=\\\"!isWeb\\\" class=\\\"chevron_right\\\">\\n                <img alt=\\\"edit\\\" src=\\\"assets/icon/chevron_right.svg\\\" />\\n              </div>\\n              <div *ngIf=\\\"isWeb\\\" class=\\\"pencil-circle\\\">\\n                <img\\n                  *ngIf=\\\"!isDesktop\\\"\\n                  alt=\\\"edit\\\"\\n                  src=\\\"assets/icon/chevron_right.svg\\\"\\n                />\\n                <img\\n                  *ngIf=\\\"isDesktop\\\"\\n                  alt=\\\"edit\\\"\\n                  src=\\\"assets/icon/pencil-circle.svg\\\"\\n                />\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </div>\\n    </ion-item>\\n  </div>\\n</ion-grid>\\n\";","export default \"<div [ngClass]=\\\"isWeb? 'webItems':'mobileItem'\\\">\\n  <ion-item class=\\\"ion-no-padding\\\">\\n    <!--First Name-->\\n    <ion-row class=\\\"first-name-row\\\">\\n      <ion-col class=\\\"first-name-txt\\\">\\n        <ion-text class=\\\"firstname-label\\\"\\n          >{{ displayText?.firstName }}</ion-text\\n        >\\n      </ion-col>\\n      <ion-col class=\\\"first-name-value\\\">\\n        <ion-text class=\\\"firstname-data font-w-600\\\">\\n          {{ participantData?.firstName }}\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n  <!--Last Name-->\\n  <ion-item class=\\\"ion-no-padding\\\">\\n    <ion-row class=\\\"last-name-row\\\">\\n      <ion-col class=\\\"last-name-txt\\\">\\n        <ion-text class=\\\"lastname-label\\\">{{ displayText?.lastName }}</ion-text>\\n      </ion-col>\\n      <ion-col class=\\\"last-name-value\\\">\\n        <ion-text class=\\\"lastname-data font-w-600\\\">\\n          {{ participantData?.lastName }}\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n  <!--DOB-->\\n  <ion-item class=\\\"ion-no-padding\\\">\\n    <ion-row class=\\\"dob-row\\\">\\n      <ion-col class=\\\"dob-txt\\\">\\n        <ion-text class=\\\"dob-label\\\">{{ displayText?.dob }}</ion-text>\\n      </ion-col>\\n      <ion-col class=\\\"dob-value\\\">\\n        <ion-text class=\\\"dob-data font-w-600\\\">\\n          {{ participantData?.birthDate }}\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n</div>\\n\";"]}