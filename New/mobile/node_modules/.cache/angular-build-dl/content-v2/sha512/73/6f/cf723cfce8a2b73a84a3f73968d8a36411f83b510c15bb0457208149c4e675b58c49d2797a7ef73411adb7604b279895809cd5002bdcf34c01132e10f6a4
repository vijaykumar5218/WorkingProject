{"version":3,"mappings":"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","names":["routes","path","component","_home_page__WEBPACK_IMPORTED_MODULE_0__","_shared_lib_components_coverages_insights_insights_component__WEBPACK_IMPORTED_MODULE_1__","loadChildren","__webpack_require__","then","m","FinancialSummaryPageModule","HomePageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_4__","exports","HomePageModule","_angular_common__WEBPACK_IMPORTED_MODULE_12__","_angular_forms__WEBPACK_IMPORTED_MODULE_13__","_ionic_angular__WEBPACK_IMPORTED_MODULE_14__","_shared_lib_components_mx_widget_mx_widget_module__WEBPACK_IMPORTED_MODULE_6__","_home_routing_module__WEBPACK_IMPORTED_MODULE_0__","_shared_lib_components_benefits_selection_benefits_selection_module__WEBPACK_IMPORTED_MODULE_3__","_shared_lib_modules_journeys_components_status_status_module__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_components_net_worth_net_worth_module__WEBPACK_IMPORTED_MODULE_5__","_shared_lib_modules_journeys_journeys_module__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_components_home_medical_spending_medical_spending_module__WEBPACK_IMPORTED_MODULE_7__","_shared_lib_components_mx_error_mxerror_module__WEBPACK_IMPORTED_MODULE_8__","_landing_preferences_selection_preferences_selection_module__WEBPACK_IMPORTED_MODULE_9__","declarations","_home_page__WEBPACK_IMPORTED_MODULE_1__","HomePage","headerFooterType","journeyService","orangeMoneyService","benefitsService","accountService","modalController","_shared_lib_services_mx_service_models_widget_type_enum__WEBPACK_IMPORTED_MODULE_11__","headername","btnright","displayLogo","buttonRight","name","link","_shared_lib_constants_home_home_content_json__WEBPACK_IMPORTED_MODULE_6__","openPreference","getOrangeData","openBenefitSelectionModal","participantSubscription","getParticipant","subscribe","data","firstName","getDisplayNameOrFirst","getBenefitsEnrollment","benefitsEnrollment$","journeyResponse$","fetchJourneys","publishType","type","_shared_lib_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_3__","actionOption","_shared_lib_modules_footer_constants_footerType_enum__WEBPACK_IMPORTED_MODULE_2__","setBenefitSummaryBackButton","firstLoad","finstrongWidget","refreshWidget","netWorthWidget","widget","openBenefitsSelectionModalIfEnabled","undefined","unsubscribe","create","_landing_preferences_selection_preferences_selection_page__WEBPACK_IMPORTED_MODULE_12__","componentProps","fullscreen","cssClass","swipeToClose","modal","present","_shared_lib_services_header_footer_type_headerFooterType_service__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_services_journey_journey_service__WEBPACK_IMPORTED_MODULE_5__","_shared_lib_modules_orange_money_services_orange_money_service__WEBPACK_IMPORTED_MODULE_7__","_shared_lib_services_benefits_benefits_service__WEBPACK_IMPORTED_MODULE_8__","_shared_lib_services_account_account_service__WEBPACK_IMPORTED_MODULE_9__","_angular_core__WEBPACK_IMPORTED_MODULE_15__","args","_shared_lib_components_net_worth_net_worth_component__WEBPACK_IMPORTED_MODULE_10__","selector","template","_preferences_selection_page__WEBPACK_IMPORTED_MODULE_0__","PreferenceSelectionRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","PreferenceSelectionModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_preferences_selection_routing_module__WEBPACK_IMPORTED_MODULE_0__","_preferences_selection_page__WEBPACK_IMPORTED_MODULE_1__","PreferenceSelectionPage","settingService","closeDialog","JSON","getPreferenceNudge","PreferenceNudge","pageText","parse","dismiss","_shared_lib_services_settings_settings_service__WEBPACK_IMPORTED_MODULE_2__","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","AlertComponent","stringify","buttons","yes","no","saved","save","error","saving","saveFunction","result","BenefitsSelectModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","_modal_component_benefits_banner_benefits_banner_component__WEBPACK_IMPORTED_MODULE_0__","_modal_modal_component__WEBPACK_IMPORTED_MODULE_3__","_modal_nudge_nudge_component__WEBPACK_IMPORTED_MODULE_1__","_modal_before_starting_before_starting_component__WEBPACK_IMPORTED_MODULE_2__","BeforeStartingComponent","router","_angular_core__WEBPACK_IMPORTED_MODULE_2__","navigate","closeModal","emit","BenefitsBannerComponent","sharedUtilityService","eventTrackingService","rxjs__WEBPACK_IMPORTED_MODULE_5__","isWeb","getIsWeb","subscription","benefitsEnrollment","add","getBenefitsSelectionHomeContent","enrollmentBannerContent","eventTracking","eventName","passThruAttributes","attributeName","attributeValue","status","openGuidelines","displayBanner","_shared_lib_services_benefits_benefits_service__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_3__","_shared_lib_services_event_tracker_event_tracking_service__WEBPACK_IMPORTED_MODULE_4__","NudgeComponent","utilityService","_angular_core__WEBPACK_IMPORTED_MODULE_4__","setFullScreenModal","navigateByUrl","selectBenefits","_angular_router__WEBPACK_IMPORTED_MODULE_7__","MedicalConsentPage","consentService","loadingController","location","translucent","loading","radioSelection","setConsent","_shared_lib_services_consent_constants_consentType_enum__WEBPACK_IMPORTED_MODULE_4__","getMedicalConsent","completion","back","publishSelectedTab","event","hasScrolledToBottom","target","getScrollElement","scrollElement","scrollHeight","clientHeight","currentScrollDepth","scrollTop","triggerDepth","_shared_lib_services_consent_consent_service__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_9__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_10__","_angular_core__WEBPACK_IMPORTED_MODULE_11__","TPAStreamConnectPageModule","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_modal_header_modal_header_module__WEBPACK_IMPORTED_MODULE_1__","_tpastream_connect_page__WEBPACK_IMPORTED_MODULE_0__","endpoints","settingsDisplayFlags","SettingsService","baseService","appendBaseUrlToEndpoints","_constants_endpoints__WEBPACK_IMPORTED_MODULE_2__","refresh","displayFlag","get","console","log","displayContactLink","suppressAppointment","preferencesContentPromise","_shared_lib_services_base_base_factory_provider__WEBPACK_IMPORTED_MODULE_0__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_1__","providedIn","__webpack_exports__"],"sources":["webpack:///mobile/src/app/modules/features/home/home-routing.module.ts","webpack:///mobile/src/app/modules/features/home/home.module.ts","webpack:///mobile/src/app/modules/features/home/home.page.ts","webpack:///mobile/src/app/modules/features/landing/preferences-selection/preferences-selection-routing.module.ts","webpack:///mobile/src/app/modules/features/landing/preferences-selection/preferences-selection.module.ts","webpack:///mobile/src/app/modules/features/landing/preferences-selection/preferences-selection.page.ts","webpack:///shared-lib/components/alert/alert.component.ts","webpack:///shared-lib/components/benefits-selection/benefits-selection.module.ts","webpack:///shared-lib/components/benefits-selection/modal/before-starting/before-starting.component.ts","webpack:///shared-lib/components/benefits-selection/modal/component/benefits-banner/benefits-banner.component.ts","webpack:///shared-lib/components/benefits-selection/modal/nudge/nudge.component.ts","webpack:///shared-lib/components/coverages/consent-required/medical-consent/medical-consent.page.ts","webpack:///shared-lib/components/coverages/tpastream-connect/tpastream-connect.module.ts","webpack:///shared-lib/services/settings/constants/endpoints.ts","webpack:///shared-lib/services/settings/settings.service.ts","webpack:///mobile/src/app/modules/features/home/home.page.html","webpack:///mobile/src/app/modules/features/landing/preferences-selection/preferences-selection.page.html","webpack:///shared-lib/components/alert/alert.component.html","webpack:///shared-lib/components/benefits-selection/modal/before-starting/before-starting.component.html","webpack:///shared-lib/components/benefits-selection/modal/component/benefits-banner/benefits-banner.component.html","webpack:///shared-lib/components/benefits-selection/modal/nudge/nudge.component.html","webpack:///shared-lib/components/coverages/consent-required/medical-consent/medical-consent.page.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HomePage} from './home.page';\nimport {InsightsComponent} from '@shared-lib/components/coverages/insights/insights.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  },\n  {\n    path: 'insight',\n    component: InsightsComponent,\n  },\n  {\n    path: 'financial-summary',\n    loadChildren: () =>\n      import('./financial-summary/financial-summary.module').then(\n        m => m.FinancialSummaryPageModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {HomePageRoutingModule} from './home-routing.module';\nimport {HomePage} from './home.page';\nimport {JourneysModule} from '@shared-lib/modules/journeys/journeys.module';\nimport {BenefitsSelectModule} from '../../../../../../shared-lib/components/benefits-selection/benefits-selection.module';\nimport {StatusModule} from '@shared-lib/modules/journeys/components/status/status.module';\nimport {NetWorthModule} from '@shared-lib/components/net-worth/net-worth.module';\nimport {MXWidgetModule} from '@shared-lib/components/mx-widget/mx-widget.module';\nimport {MedicalSpendingModule} from '@shared-lib/components/home/medical-spending/medical-spending.module';\nimport {MXErrorComponentModule} from '@shared-lib/components/mx-error/mxerror.module';\nimport {PreferenceSelectionModule} from '../landing/preferences-selection/preferences-selection.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MXWidgetModule,\n    HomePageRoutingModule,\n    BenefitsSelectModule,\n    StatusModule,\n    NetWorthModule,\n    JourneysModule,\n    MedicalSpendingModule,\n    MXErrorComponentModule,\n    PreferenceSelectionModule\n  ],\n  declarations: [HomePage],\n})\nexport class HomePageModule {}\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport {HeaderFooterTypeService} from '@shared-lib/services/header-footer-type/headerFooterType.service';\nimport {JourneyResponse} from '@shared-lib/services/journey/models/journey.model';\nimport {JourneyService} from '@shared-lib/services/journey/journey.service';\nimport {HomeContent} from '@shared-lib/components/home/models/home-content.model';\nimport * as homeContent from '@shared-lib/constants/home/home-content.json';\nimport {OrangeMoneyService} from '@shared-lib/modules/orange-money/services/orange-money.service';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {BenefitEnrollment} from '@shared-lib/services/benefits/models/benefits.model';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\nimport {ModalController, ViewWillEnter, ViewWillLeave} from '@ionic/angular';\nimport {MXWidgetComponent} from '@shared-lib/components/mx-widget/mx-widget.component';\nimport {NetWorthComponent} from '@shared-lib/components/net-worth/net-worth.component';\nimport {WidgetType} from '@shared-lib/services/mx-service/models/widget-type.enum';\nimport {ActionOptions} from '@shared-lib/models/ActionOptions.model';\nimport { PreferenceSelectionPage} from '../landing/preferences-selection/preferences-selection.page'\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage\n  implements OnInit, OnDestroy, ViewWillEnter, ViewWillLeave {\n  readonly widgetType = WidgetType;\n  journeyResponse$: Observable<JourneyResponse>;\n  hasMXError = false;\n  firstLoad = true;\n  firstName = '';\n  actionOption: ActionOptions = {\n    headername: 'Home',\n    btnright: true,\n    displayLogo: true,\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n  @ViewChild('homeFinstrong') finstrongWidget: MXWidgetComponent;\n  @ViewChild(NetWorthComponent) netWorthWidget: NetWorthComponent;\n\n  private participantSubscription: Subscription;\n  benefitsEnrollment$: Observable<BenefitEnrollment>;\n\n  content: HomeContent = (homeContent as any).default;\n\n  constructor(\n    private headerFooterType: HeaderFooterTypeService,\n    private journeyService: JourneyService,\n    private orangeMoneyService: OrangeMoneyService,\n    private benefitsService: BenefitsService,\n    private accountService: AccountService,\n    private modalController:ModalController\n  ) {}\n\n  async ngOnInit() {\n    this.openPreference();\n    this.orangeMoneyService.getOrangeData();\n    this.openBenefitSelectionModal();\n    this.participantSubscription = this.accountService\n      .getParticipant()\n      .subscribe(async (data: Participant) => {\n        this.firstName = this.accountService.getDisplayNameOrFirst(data);\n      });\n    this.benefitsEnrollment$ = await this.benefitsService.getBenefitsEnrollment();\n  }\n\n  async ionViewWillEnter() {\n    this.journeyResponse$ = this.journeyService.fetchJourneys();\n\n    this.headerFooterType.publishType(\n      {\n        type: HeaderType.navbar,\n        actionOption: this.actionOption,\n      },\n      {type: FooterType.tabsnav}\n    );\n    this.benefitsService.setBenefitSummaryBackButton('settings');\n\n    if (!this.firstLoad) {\n      this.finstrongWidget.refreshWidget();\n      this.netWorthWidget.widget.refreshWidget();\n    }\n    this.firstLoad = false;\n  }\n\n  openBenefitSelectionModal() {\n    this.benefitsService.openBenefitsSelectionModalIfEnabled();\n  }\n\n  ionViewWillLeave() {\n    this.journeyResponse$ = undefined;\n  }\n\n  ngOnDestroy(): void {\n    this.participantSubscription.unsubscribe();\n  }\n  async openPreference(){\n    const modal = await this.modalController.create({\n      component: PreferenceSelectionPage,\n      componentProps: {fullscreen :true},\n      cssClass:'modal-fullscreen',\n      swipeToClose: false,\n    });\n   modal.present();\n  }  \n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {PreferenceSelectionPage} from './preferences-selection.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreferenceSelectionPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PreferenceSelectionRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {PreferenceSelectionRoutingModule} from './preferences-selection-routing.module';\n\nimport {PreferenceSelectionPage} from './preferences-selection.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PreferenceSelectionRoutingModule,\n  ],\n  declarations: [PreferenceSelectionPage],\n})\nexport class PreferenceSelectionModule {}\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport {SettingsService} from '@shared-lib/services/settings/settings.service';\nimport {PreferencesContent} from '@shared-lib/services/settings/models/settings.model';\n\n@Component({\n  selector: 'app-preference-selection',\n  templateUrl: './preferences-selection.page.html',\n  styleUrls: ['preferences-selection.page.scss'],\n})\nexport class PreferenceSelectionPage implements OnInit{\n  pageText: PreferencesContent;\n  @HostListener('window:popstate', ['$event'])\n  onPopState() {\n    this.closeDialog();\n  }\n  constructor(private settingService: SettingsService,\n    private modalController:ModalController){}\n\n  async ngOnInit() {\n    this.pageText = JSON.parse((await this.settingService.getPreferenceNudge()).PreferenceNudge);\n  }\n\n  closeDialog() {\n    this.modalController.dismiss();\n  }\n}","import {ModalController} from '@ionic/angular';\nimport {Component, Input} from '@angular/core';\nimport * as pageText from './constants/pageText.json';\n\ninterface SaveFunction {\n  (): Promise<boolean>;\n}\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n})\nexport class AlertComponent {\n  pageText = JSON.parse(JSON.stringify(pageText)).default;\n\n  @Input() public titleMessage: string;\n  @Input() public message: string;\n  @Input() public imageUrl: string = null;\n  @Input() public yesButtonTxt = this.pageText.buttons.yes;\n  @Input() public noButtonTxt = this.pageText.buttons.no;\n\n  public saveFunction: SaveFunction;\n  saving: boolean;\n  error: boolean;\n\n  constructor(private modalController: ModalController) {}\n\n  closeDialog(saved = false) {\n    this.modalController.dismiss({\n      saved: saved,\n    });\n  }\n\n  async closeDialogClicked(save: boolean) {\n    this.error = false;\n    if (save) {\n      this.saving = true;\n      if (this.saveFunction) {\n        const result = await this.saveFunction();\n        this.saving = false;\n        if (result) {\n          this.closeDialog(true);\n        } else {\n          this.error = true;\n        }\n      } else {\n        this.closeDialog();\n      }\n    } else {\n      this.closeDialog();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {FormsModule} from '@angular/forms';\nimport {BenefitsBannerComponent} from './modal/component/benefits-banner/benefits-banner.component';\nimport {NudgeComponent} from './modal/nudge/nudge.component';\nimport {BeforeStartingComponent} from './modal/before-starting/before-starting.component';\nimport {BenefitsSelectionModalComponent} from './modal/modal.component';\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule],\n  declarations: [\n    BenefitsBannerComponent,\n    BenefitsSelectionModalComponent,\n    NudgeComponent,\n    BeforeStartingComponent,\n  ],\n  exports: [BenefitsBannerComponent],\n})\nexport class BenefitsSelectModule {}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {BeforeStartingModalContent} from '@shared-lib/services/benefits/models/benefits.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'benefits-selection-modal-before-starting',\n  templateUrl: './before-starting.component.html',\n  styleUrls: ['./before-starting.component.scss'],\n})\nexport class BeforeStartingComponent {\n  @Input() modalContent: BeforeStartingModalContent;\n  @Output() closeModal = new EventEmitter<void>();\n\n  constructor(private router: Router) {}\n\n  openSavvi() {\n    this.router.navigate(['savvi/enrollment-guidance']);\n    this.closeModal.emit();\n  }\n}\n","import {Component} from '@angular/core';\nimport {\n  BenefitEnrollment,\n  BenefitsHomeContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Subscription} from 'rxjs';\nimport {EventTrackingService} from '@shared-lib/services/event-tracker/event-tracking.service';\n\n@Component({\n  selector: 'app-benefits-banner',\n  templateUrl: './benefits-banner.component.html',\n  styleUrls: ['./benefits-banner.component.scss'],\n})\nexport class BenefitsBannerComponent {\n  enrollmentBannerContent: BenefitsHomeContent;\n  isWeb: boolean;\n  benefitsEnrollment: BenefitEnrollment;\n  private subscription: Subscription = new Subscription();\n  displayBanner = true;\n\n  constructor(\n    private benefitsService: BenefitsService,\n    private sharedUtilityService: SharedUtilityService,\n    private eventTrackingService: EventTrackingService\n  ) {}\n\n  async ngOnInit() {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n    this.subscription.add(\n      (await this.benefitsService.getBenefitsEnrollment()).subscribe(data => {\n        this.benefitsEnrollment = data;\n      })\n    );\n    this.enrollmentBannerContent = await this.benefitsService.getBenefitsSelectionHomeContent();\n  }\n\n  openGuidelines() {\n    this.eventTrackingService.eventTracking({\n      eventName: 'CTAClick',\n      passThruAttributes: [\n        {\n          attributeName: 'subType',\n          attributeValue: 'open_enrollment_banner',\n        },\n        {\n          attributeName: 'Enrollment_user_status',\n          attributeValue: this.benefitsEnrollment.status,\n        },\n      ],\n    });\n    this.benefitsService.openGuidelines();\n  }\n\n  closeBenefitsBanner() {\n    this.displayBanner = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import {Component, Output, EventEmitter, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ModalController} from '@ionic/angular';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  BenefitEnrollment,\n  NudgeContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {Observable} from 'rxjs';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'benefits-selection-modal-nudge',\n  templateUrl: './nudge.component.html',\n  styleUrls: ['./nudge.component.scss'],\n})\nexport class NudgeComponent {\n  @Output() selectBenefits = new EventEmitter<void>();\n  @Input() content: NudgeContent;\n  @Input() nudgeContent: NudgeContent;\n  benefitsEnrollment$: Observable<BenefitEnrollment>;\n  isWeb: boolean;\n  constructor(\n    private modalController: ModalController,\n    private router: Router,\n    private benefitsService: BenefitsService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  async ngOnInit() {\n    this.benefitsEnrollment$ = await this.benefitsService.getBenefitsEnrollment();\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  goToSummaryDetails() {\n    if (this.isWeb) {\n      this.utilityService.setFullScreenModal(false);\n      this.modalController.dismiss();\n      this.router.navigateByUrl('/coverages/all-coverages/elections');\n    } else {\n      this.modalController.dismiss();\n      this.router.navigateByUrl('/settings/summary');\n      this.benefitsService.setBenefitSummaryBackButton('home');\n    }\n  }\n\n  emitSelect() {\n    this.selectBenefits.emit();\n  }\n}\n","import {Location} from '@angular/common';\nimport {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {LoadingController, ModalController} from '@ionic/angular';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {ConsentService} from '@shared-lib/services/consent/consent.service';\nimport {ConsentType} from '@shared-lib/services/consent/constants/consentType.enum';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport * as pageText from './constants/text-data.json';\n\n@Component({\n  selector: 'app-medical-consent',\n  templateUrl: './medical-consent.page.html',\n  styleUrls: ['./medical-consent.page.scss'],\n})\nexport class MedicalConsentPage {\n  @Input() back: boolean;\n  @Input() completion: () => void;\n  pageText: Record<string, string> = pageText;\n  contentData: [\n    {\n      disclosure_description_1: string;\n      disclosure_description_2: string;\n      disclosure_title: string;\n    }\n  ];\n  radioSelection = 'YES';\n  hasScrolledToBottom = false;\n  isWeb: boolean;\n\n  constructor(\n    private modalController: ModalController,\n    private consentService: ConsentService,\n    private loadingController: LoadingController,\n    private router: Router,\n    private benefitsService: BenefitsService,\n    private sharedUtilityService: SharedUtilityService,\n    private location: Location\n  ) {}\n\n  ngOnInit() {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n  }\n\n  async saveConsent() {\n    const loading = await this.loadingController.create({\n      translucent: true,\n    });\n    loading.present();\n\n    if (this.radioSelection === 'YES') {\n      await this.consentService.setConsent(ConsentType.MEDICAL, true);\n      this.consentService.getMedicalConsent(true);\n      if (this.completion) {\n        this.completion();\n      }\n    } else {\n      if (!this.back) {\n        if (this.isWeb) {\n          this.router.navigateByUrl('/coverages/all-coverages/plans');\n        } else {\n          this.router.navigateByUrl('/coverages/coverage-tabs/plans');\n          this.benefitsService.publishSelectedTab('plans');\n        }\n      } else {\n        this.location.back();\n      }\n    }\n    loading.dismiss();\n    this.modalController.dismiss();\n  }\n\n  async onScroll(event: any) {\n    if (this.hasScrolledToBottom) {\n      return;\n    }\n\n    const scrollElement = await event.target.getScrollElement();\n    const scrollHeight =\n      scrollElement.scrollHeight - scrollElement.clientHeight;\n    const currentScrollDepth = scrollElement.scrollTop;\n    const triggerDepth = (scrollHeight / 100) * 95;\n    if (currentScrollDepth > triggerDepth) {\n      this.hasScrolledToBottom = true;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {TPAStreamConnectPage} from './tpastream-connect.page';\nimport {ModalHeaderComponentModule} from '../../modal-header/modal-header.module';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, FormsModule, ModalHeaderComponentModule],\n  declarations: [TPAStreamConnectPage],\n  exports: [TPAStreamConnectPage],\n})\nexport class TPAStreamConnectPageModule {}\n","export const endpoints = {\n  settingsDisplayFlags: 'myvoyage/settings/displayflags',\n  getPreferenceNudge: 'myvoyage/ws/ers/content/section/myvoyage/home'\n};\n","import {Injectable} from '@angular/core';\nimport {SettingPreferences, SettingsDisplayFlags} from './models/settings.model';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {endpoints} from './constants/endpoints';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private endpoints;\n  private displayFlag: SettingsDisplayFlags;\n  private preferencesContentPromise: Promise<SettingPreferences>\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.endpoints = this.utilityService.appendBaseUrlToEndpoints(endpoints);\n  }\n\n  async getSettingsDisplayFlags(\n    refresh = false\n  ): Promise<SettingsDisplayFlags> {\n    try {\n      if (!this.displayFlag || refresh) {\n        this.displayFlag = await this.baseService.get(\n          this.endpoints.settingsDisplayFlags\n        );\n      }\n    } catch (e) {\n      console.log(e);\n      this.displayFlag = {\n        displayContactLink: false,\n        suppressAppointment: false,\n      };\n    }\n    return this.displayFlag;\n  }\n  getPreferenceNudge():Promise<SettingPreferences>{\n    if (!this.preferencesContentPromise) {\n      this.preferencesContentPromise = this.baseService.get(\n        this.endpoints.getPreferenceNudge,\n      );\n    }\n    return this.preferencesContentPromise;\n  }\n}\n","export default \"<ion-grid class=\\\"p-0\\\">\\n  <ion-row class=\\\"full-width\\\">\\n    <app-mxerror></app-mxerror>\\n    <ion-col class=\\\"p-0\\\" size=\\\"12\\\" id=\\\"background-container\\\">\\n      <div id=\\\"welcome-header\\\">\\n        <h2>\\n          {{content.hi}} {{firstName}}!\\n        </h2>\\n        <app-medical-spending class=\\\"networth-web-view\\\"></app-medical-spending>\\n      </div>\\n      <ng-container *ngIf=\\\"benefitsEnrollment$ | async as benefitsEnrollment\\\">\\n        <app-benefits-banner\\n          *ngIf=\\\"benefitsEnrollment?.enrollmentWindowEnabled && benefitsEnrollment?.status != 'COMPLETED'\\\"\\n        ></app-benefits-banner\\n      ></ng-container>\\n      <app-net-worth tagName=\\\"mx-net-worth-home\\\"></app-net-worth>\\n      <app-medical-spending\\n        class=\\\"networth-mobile-view\\\"\\n        [forMobilePlansPage]=\\\"true\\\"\\n      ></app-medical-spending>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0\\\">\\n    <ion-col class=\\\"p-0\\\" size=\\\"12\\\">\\n      <div id=\\\"inner-container\\\">\\n        <ng-container *ngIf=\\\"journeyResponse$ | async as journeys\\\">\\n          <journeys-list\\n            *ngIf=\\\"journeys?.recommended?.length > 0\\\"\\n            headerText=\\\"{{journeys?.recommended.length > 1 ? content.journeyHeader : content.journeyHeader.slice(0, content.journeyHeader.length - 1) }}\\\"\\n            [journeys]=\\\"journeys.recommended\\\"\\n            idPrefix=\\\"recommended\\\"\\n          ></journeys-list>\\n        </ng-container>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0 finstrong-header\\\">\\n    <ion-col class=\\\"p-0\\\">\\n      <ion-label class=\\\"card-header\\\">{{content.finstrongHeader}}</ion-label>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0 finstrong-section\\\">\\n    <ion-col class=\\\"p-0\\\">\\n      <ion-card class=\\\"finstrong-card\\\">\\n        <app-mx-widget\\n          [widgetType]=\\\"widgetType.FINSTRONG_MINI\\\"\\n          [height]=\\\"'400px'\\\"\\n          [tagName]=\\\"'mx-finstrong-mini'\\\"\\n          #homeFinstrong\\n        ></app-mx-widget>\\n        <ion-button\\n          id=\\\"view-finstrong\\\"\\n          class=\\\"font-18\\\"\\n          name=\\\"sign-out\\\"\\n          shape=\\\"round\\\"\\n          expand=\\\"block\\\"\\n          color=\\\"btncolor\\\"\\n          fill=\\\"outline\\\"\\n          routerLink=\\\"/home/financial-summary\\\"\\n        >\\n          {{content.completeFinancialSummary}}\\n        </ion-button>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-grid>\\n  <ion-row>\\n    <ion-col>\\n      <span\\n      class=\\\"x-button\\\"\\n      id=\\\"close-btn\\\"\\n      ><img src=\\\"assets/icon/exit.svg\\\" alt=\\\"Close dialog\\\"\\n      (click)=\\\"closeDialog()\\\"/></span>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"header\\\">{{pageText.header}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"sub-header\\\">{{pageText.subHeader}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col class=\\\"image\\\">\\n      <img src=\\\"assets/icon/preferenceSelectionImage.svg\\\" alt=\\\"\\\" />\\n    </ion-col>\\n  </ion-row>\\n  <ng-container *ngFor=\\\"let text of pageText.preferenceOptions\\\">\\n    <ion-row class=\\\"toggle-row\\\">\\n      <ion-col>\\n        <ion-text class=\\\"preference-selection-text\\\"\\n          >{{text}}</ion-text\\n        >\\n      </ion-col>\\n      <ion-col class=\\\"toggle-col\\\">\\n        <ion-toggle\\n          id=\\\"notification-toggle\\\"\\n          class=\\\"preference-toggle\\\"\\n        ></ion-toggle>\\n      </ion-col>\\n    </ion-row>\\n  </ng-container>\\n  <ion-row class=\\\"save-button-row\\\">\\n    <ion-col>\\n      <ion-button\\n      color=\\\"btncolor\\\"\\n      shape=\\\"round\\\"\\n      expand=\\\"block\\\"\\n      automation=\\\"preferenceSaveButton\\\"\\n      >{{pageText.saveButton }}</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-button\\n      class=\\\"secondary\\\"\\n      color=\\\"white\\\"\\n      shape=\\\"round\\\"\\n      expand=\\\"block\\\"\\n      id=\\\"preferenceNotNowButton\\\"\\n      >{{pageText.notnowButton }}</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"legal-text\\\">{{pageText.legalText}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-card class=\\\"alert-dialog\\\">\\n  <ion-card-header>\\n    <ion-card-title>\\n      <span\\n        class=\\\"x-button\\\"\\n        tabindex=\\\"0\\\"\\n        (click)=\\\"closeDialogClicked(false)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(false)\\\"\\n        id=\\\"close-btn\\\"\\n        ><img src=\\\"assets/icon/exit.svg\\\" alt=\\\"Close dialog\\\"/></span\\n    ></ion-card-title>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <img\\n      [hidden]=\\\"!imageUrl\\\"\\n      class=\\\"image-center\\\"\\n      [src]=\\\"imageUrl\\\"\\n      alt=\\\"warning\\\"\\n    />\\n    <div [hidden]=\\\"imageUrl\\\" class=\\\"spacer\\\"></div>\\n    <p class=\\\"title-message\\\">{{ titleMessage }}</p>\\n    <p class=\\\"message\\\">{{ message }}</p>\\n    <div class=\\\"error\\\" [hidden]=\\\"!error\\\">\\n      An error occurred while saving. Please try again.\\n    </div>\\n    <div>\\n      <ion-button\\n        (click)=\\\"closeDialogClicked(true)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(true)\\\"\\n        class=\\\"font-18 save-button\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        [attr.disabled]=\\\"saving\\\"\\n        id=\\\"yes-btn\\\"\\n      >\\n        <ion-spinner [hidden]=\\\"!saving\\\" class=\\\"save-spinner\\\"></ion-spinner>\\n        {{ yesButtonTxt }}\\n      </ion-button>\\n      <ion-button\\n        (click)=\\\"closeDialogClicked(false)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(false)\\\"\\n        class=\\\"cancel-button\\\"\\n        [attr.disabled]=\\\"saving\\\"\\n        id=\\\"no-btn\\\"\\n      >\\n        {{ noButtonTxt }}\\n      </ion-button>\\n    </div>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<div class=\\\"model-content\\\">\\n  <p class=\\\"header\\\">{{ modalContent?.header }}</p>\\n  <section>\\n    <ul *ngFor=\\\"let content of modalContent?.descList\\\">\\n      <li>{{ content }}</li>\\n    </ul>\\n    <ion-text class=\\\"descNote\\\">{{ modalContent?.descNote }}</ion-text>\\n  </section>\\n  <br />\\n  <ion-text>{{ modalContent?.usefulInfoHeader }}</ion-text>\\n  <section>\\n    <ul *ngFor=\\\"let content of modalContent?.usefulInfoDescList\\\">\\n      <li>{{ content }}</li>\\n    </ul>\\n  </section>\\n  <br />\\n  <ion-button (click)=\\\"openSavvi()\\\" id=\\\"open-savvi\\\">{{\\n    modalContent?.buttonLabel\\n  }}</ion-button>\\n</div>\\n\";","export default \"<div\\n  [ngClass]=\\\"isWeb ? 'webBanner' : 'mobileBanner'\\\"\\n  *ngIf=\\\"benefitsEnrollment\\\"\\n>\\n  <ng-container *ngIf=\\\"benefitsEnrollment?.status != 'IN_PROGRESS'\\\">\\n    <ion-row id=\\\"openGuidelines1\\\" *ngIf=\\\"displayBanner\\\">\\n      <ion-card>\\n        <div class=\\\"banner-content\\\">\\n          <ion-row class=\\\"banner-row-content\\\">\\n            <ion-col (click)=\\\"openGuidelines()\\\" class=\\\"calender-block\\\">\\n              <img\\n                [src]=\\\"enrollmentBannerContent?.banner.icon\\\"\\n                [alt]=\\\"enrollmentBannerContent?.banner.altText\\\"\\n                class=\\\"calender-svg\\\"\\n              />\\n            </ion-col>\\n            <ion-col\\n              (click)=\\\"openGuidelines()\\\"\\n              class=\\\"enrollment-banner-content\\\"\\n            >\\n              <ion-row class=\\\"time-to-select-row\\\">\\n                <ion-col>\\n                  <ion-text class=\\\"time-to-select\\\">\\n                    {{ enrollmentBannerContent?.banner.header }}\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text class=\\\"enrollment-banner-content-text\\\">\\n                    {{ enrollmentBannerContent?.banner.content }}\\n                  </ion-text>\\n                </ion-col>\\n                <ion-col class=\\\"mobile-calender-block\\\">\\n                  <img\\n                    [src]=\\\"enrollmentBannerContent?.banner.icon\\\"\\n                    [alt]=\\\"enrollmentBannerContent?.banner.altText\\\"\\n                    class=\\\"calender-svg\\\"\\n                  />\\n                </ion-col>\\n              </ion-row>\\n            </ion-col>\\n\\n            <ion-col class=\\\"exit-block\\\">\\n              <img\\n                src=\\\"assets/icon/exitWhite.svg\\\"\\n                alt=\\\"exit\\\"\\n                class=\\\"exit-icon\\\"\\n                (click)=\\\"closeBenefitsBanner()\\\"\\n                id=\\\"close-banner1\\\"\\n              />\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </ion-card>\\n    </ion-row>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"benefitsEnrollment?.status == 'IN_PROGRESS'\\\">\\n    <ion-row id=\\\"openGuidelines2\\\" *ngIf=\\\"displayBanner\\\">\\n      <ion-card>\\n        <div class=\\\"banner-content\\\">\\n          <ion-row class=\\\"banner-row-content\\\">\\n            <ion-col (click)=\\\"openGuidelines()\\\" class=\\\"calender-block\\\">\\n              <img\\n                [src]=\\\"enrollmentBannerContent?.bannerInProgress.icon\\\"\\n                [alt]=\\\"enrollmentBannerContent?.bannerInProgress.altText\\\"\\n                class=\\\"calender-img\\\"\\n              />\\n            </ion-col>\\n\\n            <ion-col\\n              (click)=\\\"openGuidelines()\\\"\\n              class=\\\"enrollment-banner-content\\\"\\n            >\\n              <ion-row class=\\\"time-to-select-row\\\">\\n                <ion-col>\\n                  <ion-text class=\\\"time-to-select\\\">\\n                    {{ enrollmentBannerContent?.bannerInProgress.header }}\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text class=\\\"enrollment-banner-content-text\\\">\\n                    {{ enrollmentBannerContent?.bannerInProgress.content }}\\n                  </ion-text>\\n                </ion-col>\\n                <ion-col class=\\\"mobile-calender-block\\\">\\n                  <img\\n                    [src]=\\\"enrollmentBannerContent?.bannerInProgress.icon\\\"\\n                    [alt]=\\\"enrollmentBannerContent?.bannerInProgress.altText\\\"\\n                    class=\\\"calender-img\\\"\\n                  />\\n                </ion-col>\\n              </ion-row>\\n            </ion-col>\\n\\n            <ion-col class=\\\"exit-block\\\">\\n              <img\\n                src=\\\"assets/icon/exitWhite.svg\\\"\\n                alt=\\\"exit\\\"\\n                class=\\\"exit-icon\\\"\\n                (click)=\\\"closeBenefitsBanner()\\\"\\n                id=\\\"close-banner2\\\"\\n              />\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </ion-card>\\n    </ion-row>\\n  </ng-container>\\n</div>\\n\";","export default \"<img src=\\\"{{ content?.icon }}\\\" [alt]=\\\"content?.altText || ''\\\" />\\n<ion-row *ngIf=\\\"benefitsEnrollment$ | async as benefitsEnrollment\\\">\\n  <ion-col>\\n    <div *ngIf=\\\"benefitsEnrollment?.status != 'IN_PROGRESS'\\\">\\n      <ion-text class=\\\"lets-do-this\\\">\\n        {{ content?.header }}\\n      </ion-text>\\n\\n      <ion-text class=\\\"time-to-select\\\">\\n        {{ content?.desc1 }}\\n      </ion-text>\\n\\n      <ion-text>\\n        {{ content?.desc2 }}\\n      </ion-text>\\n    </div>\\n\\n    <div *ngIf=\\\"benefitsEnrollment?.status == 'IN_PROGRESS'\\\">\\n      <ion-text class=\\\"lets-do-this\\\">\\n        {{ nudgeContent?.header }}\\n      </ion-text>\\n\\n      <ion-text class=\\\"time-to-select\\\">\\n        {{ nudgeContent?.desc }}\\n      </ion-text>\\n    </div>\\n  </ion-col>\\n</ion-row>\\n\\n<ion-button id=\\\"open-nudge\\\" (click)=\\\"emitSelect()\\\">{{\\n  content?.buttonText\\n}}</ion-button>\\n\\n<a\\n  id=\\\"open-summary-details\\\"\\n  href=\\\"javascript:void(0)\\\"\\n  (click)=\\\"goToSummaryDetails()\\\"\\n>\\n  {{ content?.linkText }}\\n</a>\\n\";","export default \"<app-modal-header [headerText]=\\\"pageText.authToDisclose\\\"></app-modal-header>\\n<ion-content [scrollEvents]=\\\"true\\\" (ionScroll)=\\\"onScroll($event)\\\">\\n  <div\\n    class=\\\"main-content\\\"\\n    [ngClass]=\\\"isWeb? 'web-main-content':'mobile-main-content'\\\"\\n  >\\n    <div *ngFor=\\\"let part of contentData; let i = index\\\">\\n      <h6>{{part?.disclosure_title}}</h6>\\n      <p [innerHTML]=\\\"part?.disclosure_description_1\\\"></p>\\n      <p [innerHTML]=\\\"part?.disclosure_description_2\\\"></p>\\n    </div>\\n  </div>\\n  <div class=\\\"options\\\" [ngClass]=\\\"isWeb? 'web-options':'mobile-options'\\\">\\n    <ion-row class=\\\"header\\\">{{pageText.doYouAuth}}</ion-row>\\n    <ion-row>\\n      <ion-radio-group mode=\\\"md\\\" [(ngModel)]=\\\"radioSelection\\\">\\n        <ion-row>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-radio\\n                value=\\\"NO\\\"\\n                [attr.disabled]=\\\"hasScrolledToBottom ? null : ''\\\"\\n              ></ion-radio>\\n              <ion-label>{{pageText.no}}</ion-label>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-radio\\n                value=\\\"YES\\\"\\n                [attr.disabled]=\\\"hasScrolledToBottom ? null : ''\\\"\\n              ></ion-radio>\\n              <ion-label>{{pageText.yes}}</ion-label>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n    </ion-row>\\n    <ion-row>\\n      <ion-button\\n        id=\\\"save-button\\\"\\n        (click)=\\\"saveConsent()\\\"\\n        class=\\\"font-18 save-button\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        [attr.disabled]=\\\"hasScrolledToBottom ? null : ''\\\"\\n      >\\n        {{pageText.submit}}\\n      </ion-button>\\n    </ion-row>\\n  </div>\\n</ion-content>\\n\";"]}