{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAiBaA,iBAAgB;AAQ3B,kCACUC,aADV,EAEUC,SAFV,EAGUC,cAHV,EAIUC,eAJV,EAI0C;AAAA;;AAHhC;AACA;AACA;AACA;AAVV,yBAAU,4OAAV;AACA,4BAAa,KAAb;AAUI;;AAbuB;AAAA;AAAA,iBAerB,oBAAQ;;;;;;;;AACZ,yBAAKC,KAAL,GAAa,KAAKF,cAAL,CAAoBG,QAApB,EAAb;;AACmB,2BAAM,KAAKL,aAAL,CAAmBM,mBAAnB,EAAN;;;AAAbC;AACN,yBAAKC,QAAL,GAAgBD,UAAU,CAACC,QAA3B;;AACA,wBAAI,CAAC,KAAKJ,KAAN,IAAe,KAAKI,QAAxB,EAAkC;AAChC,2BAAKC,cAAL;AACD;;AACD,yBAAKN,eAAL,CAAqBO,SAArB,GAAiCC,SAAjC,CAA2C,cAAI,EAAG;AAChD,2BAAI,CAACD,SAAL,GAAiBE,IAAjB;AACD,qBAFD;;;;;;;;AAGD;AAzB0B;AAAA;AAAA,iBA2B3B,0BAAc;AAAA;;AACZ,iBAAKC,YAAL,GAAoB,KAAKZ,SAAL,CACjBa,kBADiB,GAEjBH,SAFiB,CAEP,UAACI,UAAD,EAAmC;AAC5C,oBAAI,CAACC,UAAL,GAAkB,KAAlB;AACAD,wBAAU,CAACE,OAAX,CAAmBC,OAAnB,CAA2B,UAACC,OAAD,EAAoB;AAC7C,oBACEA,OAAO,CAACC,iBAAR,IAA6B,IAA7B,IACAD,OAAO,CAACC,iBAAR,KAA8B,WAFhC,EAGE;AACA,wBAAI,CAACJ,UAAL,GAAkB,IAAlB;AACD;AACF,eAPD;AAQD,aAZiB,CAApB;AAaD;AAzC0B;AAAA;AAAA,iBA2C3B,uBAAW;AACT,gBAAI,KAAKH,YAAT,EAAuB,KAAKA,YAAL,CAAkBQ,WAAlB;AACxB;AA7C0B;;AAAA;AAAA;;;;gBAhBrBC;;gBACAC;;gBAOAC;;gBACAC;;;;;;gBAQLC;;;AADU3B,uBAAgB,uDAL5B,0DAAU;AACT4B,gBAAQ,EAAE,aADD;AAETC,qLAFS;;AAAA,OAAV,CAK4B,GAAhB7B,iBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCNA8B,uBAAsB;AAAA;AAAA;;AAAtBA,6BAAsB,uDANlC,yDAAS;AACRC,eAAO,EAAE,CAACC,yDAAD,EAAeC,yDAAf,CADD;AAERC,oBAAY,EAAE,CAACC,gEAAD,CAFN;AAGRC,eAAO,EAAE,CAACD,gEAAD,CAHD;AAIRE,eAAO,EAAE,CAACC,iEAAD;AAJD,OAAT,CAMkC,GAAtBR,uBAAsB,CAAtB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCGAS,kBAAiB;AAY5B,mCACUC,QADV,EAEUC,MAFV,EAGUtC,cAHV,EAG8C;AAAA;;AAFpC;AACA;AACA;AAdD,4BAAauC,+FAAb;AACT,iCAAoCC,iEAApC;AAIA,0BAAW,KAAX;AAUI;;AAhBwB;AAAA;AAAA,iBAkB5B,oBAAQ;AACN,iBAAKC,QAAL,GAAgB,KAAKC,YAAL,GAAoB,KAApB,GAA4B,KAAKL,QAAL,CAAcM,EAAd,CAAiB,QAAjB,CAA5C;AACA,iBAAKzC,KAAL,GAAa,KAAKF,cAAL,CAAoBG,QAApB,EAAb;AACA,iBAAKyC,UAAL,GAAkB,KAAKN,MAAL,CAAYO,GAA9B;AACD;AAtB2B;AAAA;AAAA,iBAwB5B,2BAAe;AACb,iBAAKP,MAAL,CAAYQ,aAAZ,CAA0B,WAA1B;AACD;AA1B2B;;AAAA;AAAA;;;;gBATtBC;;gBACAC;;gBACA1B;;;;;;gBAWLE;;;gBACAA;;;gBAKAA;AAASyB,iBAACC,6EAAD;;;AAVCd,wBAAiB,uDAL7B,0DAAU;AACTX,gBAAQ,EAAE,eADD;AAETC,uLAFS;;AAAA,OAAV,CAK6B,GAAjBU,kBAAiB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCHAe,eAAc;AAAA;AAAA;;AAAdA,qBAAc,uDAL1B,yDAAS;AACRvB,eAAO,EAAE,CAACwB,yDAAD,EAAeC,uDAAf,EAA4BC,uEAA5B,CADD;AAERvB,oBAAY,EAAE,CAACwB,mEAAD,CAFN;AAGRtB,eAAO,EAAE,CAACsB,mEAAD;AAHD,OAAT,CAK0B,GAAdJ,eAAc,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCFAK,qBAAoB;AAI/B,sCACUC,WADV,EAEUzD,cAFV,EAE8C;AAAA;;AADpC;AACA;AALV,2BAAY0D,uFAAZ;AAOE,eAAKC,SAAL,GAAiB,KAAK3D,cAAL,CAAoB4D,wBAApB,CAA6CF,uFAA7C,CAAjB;AACD;;AAT8B;AAAA;AAAA,iBAWzB,uBAAcG,QAAd,EAA0C;;;;;AAC9CA,4BAAQ,CAACC,SAAT,GAAqB,UAArB;;AAC0B,2BAAM,KAAKC,gBAAL,EAAN;;;AAA1BF,4BAAQ,CAACG,+BAAgDA;AACzDH,4BAAQ,CAACI,kBAAT,gCACMJ,QAAQ,CAACI,kBAAT,IAA+B,EADrC,IAEE;AACEC,mCAAa,EAAE,UADjB;AAEEC,oCAAc,EAAE,KAAKnE,cAAL,CAAoBG,QAApB,KAAiC,KAAjC,GAAyC;AAF3D,qBAFF;;AAOA,2BAAM,KAAKsD,WAAL,CAAiBW,IAAjB,CAAsB,KAAKT,SAAL,CAAeU,aAArC,EAAoDR,QAApD,CAAN;;;;;;;;AACD;AAtB8B;AAAA;AAAA,iBAwB/B,4BAAgB;AACd,gBAAI,CAAC,KAAKS,oBAAV,EAAgC;AAC9B,mBAAKA,oBAAL,GAA4B,KAAKb,WAAL,CAAiBc,GAAjB,CAC1B,KAAKZ,SAAL,CAAeK,aADW,CAA5B;AAGD;;AACD,mBAAO,KAAKM,oBAAZ;AACD;AA/B8B;;AAAA;AAAA;;;;gBAPzBE;;gBACAC;;;;AAMKjB,2BAAoB,uDAHhC,2DAAW;AACVkB,kBAAU,EAAE;AADF,OAAX,CAGgC,GAApBlB,qBAAoB,CAApB;;;;;;;;;;;;;ACTb;;;AAAAmB,uCAAe,w4BAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,00BAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["MXErrorComponent","accessService","mxService","utilityService","platformService","isWeb","getIsWeb","checkMyvoyageAccess","accessData","isMxUser","checkForErrors","isDesktop","subscribe","data","subscription","getMxMemberConnect","memConnect","hasMXError","members","forEach","account","connection_status","unsubscribe","_shared_lib_services_access_access_service__WEBPACK_IMPORTED_MODULE_2__","_shared_lib_services_mx_service_mx_service__WEBPACK_IMPORTED_MODULE_3__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_5__","_shared_lib_services_platform_platform_service__WEBPACK_IMPORTED_MODULE_6__","_angular_core__WEBPACK_IMPORTED_MODULE_8__","selector","template","MXErrorComponentModule","imports","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_angular_router__WEBPACK_IMPORTED_MODULE_4__","declarations","_mxerror_component__WEBPACK_IMPORTED_MODULE_0__","exports","schemas","_angular_core__WEBPACK_IMPORTED_MODULE_2__","NetWorthComponent","platform","router","_shared_lib_services_mx_service_models_widget_type_enum__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_constants_net_worth_json__WEBPACK_IMPORTED_MODULE_2__","isTablet","isMiniWidget","is","currentUrl","url","navigateByUrl","_ionic_angular__WEBPACK_IMPORTED_MODULE_6__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","args","_mx_widget_mx_widget_component__WEBPACK_IMPORTED_MODULE_3__","NetWorthModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","_mx_widget_mx_widget_module__WEBPACK_IMPORTED_MODULE_1__","_net_worth_component__WEBPACK_IMPORTED_MODULE_0__","EventTrackingService","baseService","_shared_lib_services_account_constants_endpoints__WEBPACK_IMPORTED_MODULE_0__","endPoints","appendBaseUrlToEndpoints","postData","createdBy","getSubscriberKey","subscriberKey","passThruAttributes","attributeName","attributeValue","post","eventTracking","subscriberKeyPromise","get","_shared_lib_services_base_base_factory_provider__WEBPACK_IMPORTED_MODULE_1__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_2__","providedIn","__webpack_exports__"],"sources":["webpack:///shared-lib/components/mx-error/mxerror.component.ts","webpack:///shared-lib/components/mx-error/mxerror.module.ts","webpack:///shared-lib/components/net-worth/net-worth.component.ts","webpack:///shared-lib/components/net-worth/net-worth.module.ts","webpack:///shared-lib/services/event-tracker/event-tracking.service.ts","webpack:///shared-lib/components/mx-error/mxerror.component.html","webpack:///shared-lib/components/net-worth/net-worth.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit, Input} from '@angular/core';\nimport {AccessService} from '@shared-lib/services/access/access.service';\nimport {MXService} from '@shared-lib/services/mx-service/mx.service';\nimport {\n  MXRootMemberObject,\n  Member,\n} from '@shared-lib/services/mx-service/models/mx.model';\nimport * as mxErrorContent from './constants/content.json';\nimport {Subscription} from 'rxjs';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PlatformService} from '@shared-lib/services/platform/platform.service';\n\n@Component({\n  selector: 'app-mxerror',\n  templateUrl: './mxerror.component.html',\n  styleUrls: ['./mxerror.component.scss'],\n})\nexport class MXErrorComponent implements OnInit, OnDestroy {\n  @Input() noLeftPadding: boolean;\n  content = mxErrorContent;\n  hasMXError = false;\n  private subscription: Subscription;\n  isWeb: boolean;\n  isDesktop: boolean;\n  isMxUser: boolean;\n  constructor(\n    private accessService: AccessService,\n    private mxService: MXService,\n    private utilityService: SharedUtilityService,\n    private platformService: PlatformService\n  ) {}\n\n  async ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n    const accessData = await this.accessService.checkMyvoyageAccess();\n    this.isMxUser = accessData.isMxUser;\n    if (!this.isWeb || this.isMxUser) {\n      this.checkForErrors();\n    }\n    this.platformService.isDesktop().subscribe(data => {\n      this.isDesktop = data;\n    });\n  }\n\n  checkForErrors() {\n    this.subscription = this.mxService\n      .getMxMemberConnect()\n      .subscribe((memConnect: MXRootMemberObject) => {\n        this.hasMXError = false;\n        memConnect.members.forEach((account: Member) => {\n          if (\n            account.connection_status != null &&\n            account.connection_status !== 'CONNECTED'\n          ) {\n            this.hasMXError = true;\n          }\n        });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {MXErrorComponent} from './mxerror.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [MXErrorComponent],\n  exports: [MXErrorComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class MXErrorComponentModule {}\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {NetWorthContent} from '@shared-lib/models/net-worth.model';\nimport * as nwContent from '@shared-lib/constants/net-worth.json';\nimport {MXWidgetComponent} from '../mx-widget/mx-widget.component';\nimport {WidgetType} from '@shared-lib/services/mx-service/models/widget-type.enum';\nimport {Platform} from '@ionic/angular';\nimport {Router} from '@angular/router';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'app-net-worth',\n  templateUrl: './net-worth.component.html',\n  styleUrls: ['./net-worth.component.scss'],\n})\nexport class NetWorthComponent implements OnInit {\n  readonly widgetType = WidgetType;\n  netWorthContent: NetWorthContent = (nwContent as any).default;\n\n  @Input() tagName: string;\n  @Input() isMiniWidget: boolean;\n  isTablet = false;\n  isWeb: boolean;\n  currentUrl: string;\n\n  @ViewChild(MXWidgetComponent) widget: MXWidgetComponent;\n\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit(): void {\n    this.isTablet = this.isMiniWidget ? false : this.platform.is('tablet');\n    this.isWeb = this.utilityService.getIsWeb();\n    this.currentUrl = this.router.url;\n  }\n\n  netWorthClicked() {\n    this.router.navigateByUrl('net-worth');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {NetWorthComponent} from './net-worth.component';\nimport {MXWidgetModule} from '../mx-widget/mx-widget.module';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, MXWidgetModule],\n  declarations: [NetWorthComponent],\n  exports: [NetWorthComponent],\n})\nexport class NetWorthModule {}\n","import {Injectable} from '@angular/core';\nimport {endPoints} from '@shared-lib/services/account/constants/endpoints';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {EventTrackingEvent, SFMCUserInfo} from './models/event-tracking.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventTrackingService {\n  endPoints = endPoints;\n  private subscriberKeyPromise: Promise<SFMCUserInfo>;\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n  }\n\n  async eventTracking(postData: EventTrackingEvent): Promise<void> {\n    postData.createdBy = 'myvoyage';\n    postData.subscriberKey = (await this.getSubscriberKey()).subscriberKey;\n    postData.passThruAttributes = [\n      ...(postData.passThruAttributes || []),\n      {\n        attributeName: 'platform',\n        attributeValue: this.utilityService.getIsWeb() ? 'web' : 'mobile',\n      },\n    ];\n    await this.baseService.post(this.endPoints.eventTracking, postData);\n  }\n\n  getSubscriberKey(): Promise<SFMCUserInfo> {\n    if (!this.subscriberKeyPromise) {\n      this.subscriberKeyPromise = this.baseService.get(\n        this.endPoints.subscriberKey\n      );\n    }\n    return this.subscriberKeyPromise;\n  }\n}\n","export default \"<ion-card\\n  *ngIf=\\\"hasMXError\\\"\\n  [ngClass]=\\\"isWeb && isDesktop ? 'web-content' : ''\\\"\\n  class=\\\"mx-error\\\"\\n>\\n  <ion-card-content [ngClass]=\\\"noLeftPadding ? 'no-left-padding' : ''\\\">\\n    <div id=\\\"mx-error-img\\\" class=\\\"img-div\\\">\\n      <img tabindex=\\\"0\\\" src=\\\"assets/icon/error_circle.svg\\\" alt=\\\"error\\\" />\\n    </div>\\n    <div class=\\\"txt-div\\\" tabindex=\\\"1\\\">\\n      {{ content.mxError\\n      }}<a\\n        class=\\\"mx-error-link\\\"\\n        id=\\\"mx-error-link-mob\\\"\\n        *ngIf=\\\"!isWeb\\\"\\n        tabindex=\\\"2\\\"\\n        routerLink=\\\"/account/manage-accounts\\\"\\n        >{{ content.mxErrorLink }}</a\\n      >\\n      <a\\n        class=\\\"mx-error-link\\\"\\n        id=\\\"mx-error-link-web\\\"\\n        *ngIf=\\\"isWeb\\\"\\n        tabindex=\\\"3\\\"\\n        routerLink=\\\"/accounts/manage-accounts\\\"\\n        >{{ content.mxErrorLink }}</a\\n      >\\n    </div>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<ion-card class=\\\"net-worth\\\">\\n  <ng-container\\n    *ngIf=\\\"isWeb === true && currentUrl !== '/home'; else NetWorthHeader\\\"\\n  >\\n    <ion-card-header>{{ netWorthContent.header }}</ion-card-header>\\n  </ng-container>\\n  <ng-template #NetWorthHeader>\\n    <ion-card-header>{{ netWorthContent.header }}</ion-card-header>\\n  </ng-template>\\n\\n  <app-mx-widget\\n    [widgetType]=\\\"isTablet ? widgetType.NET_WORTH : widgetType.NET_WORTH_MINI\\\"\\n    [height]=\\\"isTablet ? '475px' : '400px'\\\"\\n    [tagName]=\\\"tagName\\\"\\n    #widget\\n  ></app-mx-widget>\\n  <ion-button\\n    id=\\\"view-net-worth-btn\\\"\\n    class=\\\"font-18\\\"\\n    name=\\\"sign-out\\\"\\n    shape=\\\"round\\\"\\n    expand=\\\"block\\\"\\n    color=\\\"btncolor\\\"\\n    fill=\\\"outline\\\"\\n    (click)=\\\"netWorthClicked()\\\"\\n  >\\n    {{ netWorthContent.viewNetWorth }}\\n  </ion-button>\\n</ion-card>\\n\";"]}