{"version":3,"file":"shared-lib_components_settings_components_account-and-personal-info_account-and-personal-info-34f2d4-es2015.js","mappings":"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","sources":["./shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info-routing.module.ts","./shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info.module.ts","./shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info.page.ts","./shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info-routing.module.ts","./shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info.module.ts","./shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info.page.ts","./shared-lib/components/settings/components/account-and-personal-info/components/account-info/components/account-info-menu/account-info-menu.component.ts","./shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info-routing.module.ts","./shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info.module.ts","./shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info.page.ts","./shared-lib/services/account-info/account-info.service.ts","./shared-lib/services/account-info/constants/endpoints.ts","./shared-lib/services/edit-display-name/constants/endpoints.ts","./shared-lib/services/edit-display-name/edit-display-name.service.ts","./shared-lib/components/settings/components/account-and-personal-info/account-and-personal-info.page.html","./shared-lib/components/settings/components/account-and-personal-info/components/account-info/account-info.page.html","./shared-lib/components/settings/components/account-and-personal-info/components/account-info/components/account-info-menu/account-info-menu.component.html","./shared-lib/components/settings/components/account-and-personal-info/components/personal-info/personal-info.page.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {AccountAndPersonalInfoPage} from './account-and-personal-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountAndPersonalInfoPage,\n    children: [\n      {\n        path: 'account-info',\n        loadChildren: () =>\n          import('./components/account-info/account-info.module').then(\n            m => m.AccountInfoPageModule\n          ),\n      },\n      {\n        path: 'personal-info',\n        loadChildren: () =>\n          import('./components/personal-info/personal-info.module').then(\n            m => m.PersonalInfoPageModule\n          ),\n      },\n    ],\n  },\n  {\n    path: 'edit-display-name',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-display-name/edit-display-name.module'\n      ).then(m => m.EditDisplayNamePageModule),\n  },\n  {\n    path: 'edit-email',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-email/edit-email.module'\n      ).then(m => m.EditEmailPageModule),\n  },\n  {\n    path: 'edit-phone',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-phone/edit-phone.module'\n      ).then(m => m.EditPhonePageModule),\n  },\n  {\n    path: 'edit-password',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-password/edit-password.module'\n      ).then(m => m.EditPasswordPageModule),\n  },\n\n  {\n    path: 'edit-account-recovery',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/edit-account-recovery/edit-account-recovery.module'\n      ).then(m => m.EditAccountRecoveryPageModule),\n  },\n\n  {\n    path: 'unregister-device',\n    loadChildren: () =>\n      import(\n        './components/account-info/components/unregister-device/unregister-device.module'\n      ).then(m => m.UnregisterDevicePageModule),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountAndPersonalInfoPageRoutingModule {}\n","import {AccountInfoPageModule} from './components/account-info/account-info.module';\nimport {PersonalInfoPageModule} from './components/personal-info/personal-info.module';\nimport {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {AccountAndPersonalInfoPageRoutingModule} from './account-and-personal-info-routing.module';\nimport {AccountAndPersonalInfoPage} from './account-and-personal-info.page';\nimport {LoadingTextComponentModule} from '@shared-lib/components/loading-text/loading-text.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountAndPersonalInfoPageRoutingModule,\n    LoadingTextComponentModule,\n    AccountInfoPageModule,\n    PersonalInfoPageModule,\n  ],\n  declarations: [AccountAndPersonalInfoPage],\n})\nexport class AccountAndPersonalInfoPageModule {}\n","import {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport {ActionOptions} from '@shared-lib/models/ActionOptions.model';\nimport {HeaderTypeService} from '@shared-lib/services/header-type/header-type.service';\nimport {Component, OnInit} from '@angular/core';\nimport {SubHeaderTab} from 'shared-lib/models/tab-sub-header.model';\nimport * as pageText from './constants/persionalInfo.json';\nimport {Router} from '@angular/router';\nimport {PersonalInfoTab} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'app-account-and-personal-info',\n  templateUrl: './account-and-personal-info.page.html',\n  styleUrls: ['./account-and-personal-info.page.scss'],\n})\nexport class AccountAndPersonalInfoPage implements OnInit {\n  actionOption: ActionOptions = {\n    headername: 'Personal & Account Info',\n    btnleft: true,\n    btnright: true,\n    buttonLeft: {\n      name: '',\n      link: 'settings',\n    },\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n\n  tabs: SubHeaderTab[] = [];\n  selectedTab = 'account-info';\n  isWeb: boolean;\n  content: PersonalInfoTab = (pageText as any).default;\n\n  constructor(\n    private headerType: HeaderTypeService,\n    private router: Router,\n    private sharedUtilityService: SharedUtilityService\n  ) {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n  }\n\n  ngOnInit(): void {\n    this.tabs.push({\n      label: this.content.tabslabel.persionalInfo,\n      link: 'personal-info',\n    });\n    this.tabs.push({\n      label: this.content.tabslabel.accountInfo,\n      link: 'account-info',\n    });\n  }\n\n  ionViewWillEnter() {\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n    const rootPath = this.isWeb ? 'more' : 'settings';\n    if (this.selectedTab == 'personal-info') {\n      this.router.navigateByUrl(\n        `${rootPath}/account-and-personal-info/personal-info`\n      );\n    } else {\n      this.router.navigateByUrl(\n        `${rootPath}/account-and-personal-info/account-info`\n      );\n    }\n  }\n\n  handleClick(selectedTab: SubHeaderTab) {\n    this.selectedTab = selectedTab.link;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {AccountInfoPage} from './account-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AccountInfoPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AccountInfoPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {AccountInfoPageRoutingModule} from './account-info-routing.module';\n\nimport {AccountInfoPage} from './account-info.page';\nimport {AccountInfoMenuComponent} from './components/account-info-menu/account-info-menu.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AccountInfoPageRoutingModule,\n  ],\n  declarations: [AccountInfoPage, AccountInfoMenuComponent],\n  exports: [AccountInfoPage, AccountInfoMenuComponent],\n})\nexport class AccountInfoPageModule {}\n","import {\n  AccountInfoText,\n  PasswordResponse,\n} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {Subscription} from 'rxjs';\nimport * as accountText from '@shared-lib/services/account-info/constants/accountText.json';\nimport {Component, OnInit} from '@angular/core';\nimport {AccountInfoService} from '@shared-lib/services/account-info/account-info.service';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {SettingsPreferences} from '@shared-lib/services/notification-setting/models/notification-settings-preferences.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\n\n@Component({\n  selector: 'app-account-info',\n  templateUrl: './account-info.page.html',\n  styleUrls: ['./account-info.page.scss'],\n})\nexport class AccountInfoPage implements OnInit {\n  displayText: AccountInfoText = JSON.parse(JSON.stringify(accountText))\n    .default;\n  participantDataSubscription: Subscription;\n  settingsPrefSubscription: Subscription;\n  participantData: Participant;\n  PasswordData: PasswordResponse;\n  emailError = false;\n  loading = true;\n  email: string;\n  phone: string;\n  isWeb: boolean;\n\n  constructor(\n    private accountInfoService: AccountInfoService,\n    private accountService: AccountService,\n    private settingsService: NotificationsSettingService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.fetchData();\n    this.getPrefs();\n  }\n\n  async getPrefs(): Promise<void> {\n    this.settingsPrefSubscription = this.settingsService\n      .getNotificationSettings()\n      .subscribe((settingsPrefs: SettingsPreferences) => {\n        this.email = settingsPrefs.primaryEmail?.email;\n        this.phone = this.accountInfoService.formatPhoneNumber(\n          settingsPrefs.mobilePhone?.phoneNumber\n        );\n        this.emailError = settingsPrefs.primaryEmail?.lastFailedInd === 'Y';\n        this.loading = false;\n      });\n  }\n\n  fetchData(): void {\n    this.participantDataSubscription = this.accountService\n      .getParticipant()\n      .subscribe(data => {\n        this.participantData = data;\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.settingsPrefSubscription.unsubscribe();\n    this.participantDataSubscription.unsubscribe();\n  }\n}\n","import {Component, Injector, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AccountInfoText} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport accountText from '@shared-lib/services/account-info/constants/accountText.json';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PlatformService} from '@shared-lib/services/platform/platform.service';\nimport {ModalController} from '@ionic/angular';\nimport {PopupInputDialogComponent} from '@shared-lib/components/popup-input-dialog/popup-input-dialog.component';\nimport {Subscription} from 'rxjs';\nimport {PopupInputType} from '@shared-lib/components/popup-input-dialog/constants/popup-input-type.enum';\nimport {AlertComponent} from '@shared-lib/components/alert/alert.component';\nimport * as editDisplayName from '@shared-lib/services/edit-display-name/constants/displayText.json';\nimport * as editEmail from '../edit-email/constants/displayText.json';\nimport * as editPhone from '../edit-phone/constants/displayText.json';\nimport {SettingsPreferences} from '@shared-lib/services/notification-setting/models/notification-settings-preferences.model';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {AccountInfoService} from '@shared-lib/services/account-info/account-info.service';\nimport {AccessService} from '@shared-lib/services/access/access.service';\nimport {EditDisplayNameService} from '@shared-lib/services/edit-display-name/edit-display-name.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\n@Component({\n  selector: 'app-account-info-menu',\n  templateUrl: './account-info-menu.component.html',\n  styleUrls: ['./account-info-menu.component.scss'],\n})\nexport class AccountInfoMenuComponent {\n  @Input() label: string;\n  @Input() value: string;\n  @Input() recoveryType: string;\n  @Input() emailError: boolean;\n  displayText: AccountInfoText = accountText;\n  isWeb: boolean;\n  isDesktop: boolean;\n  participantData: Participant;\n  subscription = new Subscription();\n  editNamePopupText: any = JSON.parse(JSON.stringify(editDisplayName)).default;\n  editEmailPopupText: any = JSON.parse(JSON.stringify(editEmail)).default;\n  editPhonePopupText: any = JSON.parse(JSON.stringify(editPhone)).default;\n  email: string;\n  emailContactId: string;\n  prefSettings: SettingsPreferences;\n  phone: string;\n  phoneContactId: string;\n  private accountService: AccountService;\n  private router: Router;\n  private notificationService: NotificationsSettingService;\n  private accountInfoService: AccountInfoService;\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private platformService: PlatformService,\n    private modalController: ModalController,\n    private accessService: AccessService,\n    private editDisplayNameService: EditDisplayNameService,\n    private injector: Injector\n  ) {\n    this.accountService = injector.get<AccountService>(AccountService);\n    this.router = injector.get<Router>(Router);\n    this.notificationService = injector.get<NotificationsSettingService>(\n      NotificationsSettingService\n    );\n    this.accountInfoService = injector.get<AccountInfoService>(\n      AccountInfoService\n    );\n    this.isWeb = this.utilityService.getIsWeb();\n    this.platformService.isDesktop().subscribe(data => {\n      this.isDesktop = data;\n    });\n  }\n\n  ngOnInit() {\n    this.subscription.add(\n      this.accountService.getParticipant().subscribe(data => {\n        this.participantData = data;\n      })\n    );\n    this.subscription.add(\n      this.notificationService\n        .getNotificationSettings()\n        .subscribe((prefSettings: SettingsPreferences) => {\n          this.prefSettings = prefSettings;\n          this.emailContactId = prefSettings.primaryEmail.partyContactId;\n          this.email = prefSettings.primaryEmail.email;\n          this.phone = this.utilityService.formatPhone(\n            prefSettings.mobilePhone.phoneNumber\n          );\n          this.phoneContactId = prefSettings.mobilePhone.partyContactId;\n        })\n    );\n  }\n\n  async openPwebProfile() {\n    const myVoyaAccess = await this.accessService.checkMyvoyageAccess();\n    this.accountService.openPwebAccountLink(\n      decodeURIComponent(myVoyaAccess.myProfileURL)\n    );\n  }\n\n  editProperty(): void {\n    const rootPath = this.isWeb && !this.isDesktop ? 'more' : 'settings';\n    if (this.isWeb && this.isDesktop) {\n      switch (this.label) {\n        case this.displayText.name:\n          this.edit(\n            this.displayText.nameTitle,\n            this.displayText.name,\n            this.participantData.displayName,\n            this.displayText.name,\n            PopupInputType.text,\n            'editNamePopupText'\n          );\n          break;\n        case this.displayText.email:\n          this.edit(\n            this.displayText.emailTitle,\n            this.displayText.email,\n            this.email,\n            this.displayText.email,\n            PopupInputType.email,\n            'editEmailPopupText'\n          );\n          break;\n        case this.displayText.phone:\n          this.edit(\n            this.displayText.phoneTitle,\n            this.displayText.phoneSubTitle,\n            this.phone,\n            this.displayText.phone,\n            PopupInputType.phone,\n            'editPhonePopupText'\n          );\n          break;\n        case this.displayText.loginInfo:\n          this.openPwebProfile();\n          break;\n      }\n    } else {\n      switch (this.label) {\n        case this.displayText.name:\n          this.router.navigateByUrl(\n            `/${rootPath}/account-and-personal-info/edit-display-name`\n          );\n          break;\n        case this.displayText.email:\n          this.router.navigateByUrl(\n            `/${rootPath}/account-and-personal-info/edit-email`\n          );\n          break;\n        case this.displayText.phone:\n          this.router.navigateByUrl(\n            `/${rootPath}/account-and-personal-info/edit-phone`\n          );\n          break;\n        case this.displayText.loginInfo:\n          this.openPwebProfile();\n          break;\n      }\n    }\n  }\n\n  async edit(\n    title: string,\n    inputTitle: string,\n    defaultValue: string,\n    accountType: string,\n    inputType: string,\n    popupTextKey: string\n  ) {\n    const modal = await this.modalController.create({\n      component: PopupInputDialogComponent,\n      cssClass: 'modal-not-fullscreen',\n      swipeToClose: false,\n      componentProps: {\n        title: title,\n        inputTitle: inputTitle,\n        value: defaultValue,\n        inputType: inputType,\n        validator: (value?: string): string => {\n          return this.validation(accountType, value);\n        },\n        saveFunction: async (value: string): Promise<boolean> => {\n          return new Promise(res => {\n            this.saveData(value, accountType, popupTextKey);\n            res(true);\n          });\n        },\n      },\n    });\n    modal.onDidDismiss().then(data => {\n      this.modalDismissed(data, undefined, undefined);\n    });\n    return modal.present();\n  }\n\n  validation(accountType: string, value: string): string | null {\n    if (accountType === this.displayText.email) {\n      const emailVaild = this.utilityService.validateEmail(value);\n      if (!emailVaild) {\n        return this.displayText.invalidEmail;\n      } else {\n        return null;\n      }\n    } else if (accountType === this.displayText.phone) {\n      const phoneVaild = this.utilityService.validatePhone(value);\n      if (!phoneVaild) {\n        return this.displayText.invalidPhone;\n      } else {\n        return null;\n      }\n    } else if (accountType === this.displayText.name) {\n      if (value.trim().length < 1) {\n        return this.displayText.invalidDisplayName;\n      } else {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  async saveData(\n    value: string,\n    accountType: string,\n    popupTextKey: string\n  ): Promise<void> {\n    const modal = await this.modalController.create({\n      component: AlertComponent,\n      cssClass: 'modal-not-fullscreen',\n      swipeToClose: false,\n      componentProps: {\n        titleMessage: this[popupTextKey].alert.message,\n        imageUrl: this[popupTextKey].alert.imageUrl,\n        saveFunction: async (): Promise<boolean> => {\n          if (accountType === this.displayText.name) {\n            return this.saveDisplayName(value);\n          } else if (accountType === this.displayText.email) {\n            return this.saveEmailOrPhone(\n              value,\n              'saveEmail',\n              this.emailContactId\n            );\n          } else if (accountType === this.displayText.phone) {\n            value = value?.replace(/[-\\s]/g, '');\n            return this.saveEmailOrPhone(\n              value,\n              'savePhone',\n              this.phoneContactId\n            );\n          }\n        },\n      },\n    });\n    modal.onDidDismiss().then(data => {\n      this.modalDismissed(data, accountType, value);\n    });\n    return modal.present();\n  }\n\n  saveDisplayName(value: string): Promise<boolean> {\n    return new Promise(res => {\n      this.editDisplayNameService.saveDisplayName(value).then(resp => {\n        if (resp.displayName && resp.displayName === value) {\n          res(true);\n        } else {\n          res(false);\n        }\n      });\n    });\n  }\n\n  saveEmailOrPhone(\n    value: string,\n    functionName: string,\n    contactId: string\n  ): Promise<boolean> {\n    return new Promise(res => {\n      this.accountInfoService[functionName](value, contactId).then(resp => {\n        if (resp) {\n          res(true);\n        } else {\n          res(false);\n        }\n      });\n    });\n  }\n\n  modalDismissed(data, accountType: string, value: string) {\n    if (data.data.saved || data.saved) {\n      if (accountType === this.displayText.email) {\n        this.prefSettings.primaryEmail.email = value;\n        this.notificationService.setNotificationSettings(this.prefSettings);\n      } else if (accountType === this.displayText.phone) {\n        this.prefSettings.mobilePhone.phoneNumber = value.replace(/-/g, '');\n        this.notificationService.setNotificationSettings(this.prefSettings);\n      } else if (accountType === this.displayText.name) {\n        this.participantData.displayName = value;\n        this.accountService.setParticipant(this.participantData);\n      }\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {PersonalInfoPage} from './personal-info.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PersonalInfoPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PersonalInfoPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {PersonalInfoPageRoutingModule} from './personal-info-routing.module';\n\nimport {PersonalInfoPage} from './personal-info.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PersonalInfoPageRoutingModule,\n  ],\n  declarations: [PersonalInfoPage],\n  exports: [PersonalInfoPage],\n})\nexport class PersonalInfoPageModule {}\n","import {Subscription} from 'rxjs';\nimport {Component, OnInit} from '@angular/core';\nimport * as personalInfoText from './constants/personalInfoText.json';\nimport {PersonalInfo} from './models/personal-info.model';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\n@Component({\n  selector: 'app-personal-info',\n  templateUrl: './personal-info.page.html',\n  styleUrls: ['./personal-info.page.scss'],\n})\nexport class PersonalInfoPage implements OnInit {\n  displayText: PersonalInfo = (personalInfoText as any).default;\n  subscription: Subscription;\n  participantData: Participant;\n  isWeb: boolean;\n\n  constructor(\n    private accountService: AccountService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  async ngOnInit() {\n    this.fetchParticipant();\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  fetchParticipant() {\n    this.subscription = this.accountService.getParticipant().subscribe(data => {\n      this.participantData = data;\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import {\n  AccountRecovery,\n  MoreDescription,\n} from '@shared-lib/services/account-info/models/account-and-personal-info.model';\nimport {endPoints} from './constants/endpoints';\nimport {Injectable, OnDestroy} from '@angular/core';\nimport {from, Observable, ReplaySubject, Subscription} from 'rxjs';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountInfoService implements OnDestroy {\n  endPoints: Record<string, string> = endPoints;\n  private message: Observable<MoreDescription> = null;\n  private recoveryInfo: Observable<AccountRecovery> = null;\n  private moreContentSubject: ReplaySubject<MoreDescription> = null;\n  private recoveryInfoSubject: ReplaySubject<AccountRecovery> = null;\n  private subscription: Subscription = new Subscription();\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private baseService: BaseService\n  ) {\n    this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n    this.moreContentSubject = new ReplaySubject(1);\n    this.recoveryInfoSubject = new ReplaySubject(1);\n  }\n\n  getAccountRecovery(refresh = false): Observable<AccountRecovery> {\n    if (!this.recoveryInfo || refresh) {\n      this.recoveryInfo = from(\n        this.baseService.get(this.endPoints.getAccountRecovery)\n      );\n      const subscription = this.recoveryInfo.subscribe(result => {\n        this.recoveryInfoSubject.next(result);\n      });\n      this.subscription.add(subscription);\n    }\n    return this.recoveryInfoSubject;\n  }\n\n  getScreenMessage(refresh = false): Observable<MoreDescription> {\n    if (!this.message || refresh) {\n      this.message = from(this.baseService.get(this.endPoints.getMessage));\n      const subscription = this.message.subscribe(result => {\n        this.moreContentSubject.next(result);\n      });\n      this.subscription.add(subscription);\n    }\n    return this.moreContentSubject;\n  }\n\n  saveEmail(email: string, contactId: string): Promise<any> {\n    let payload;\n    if (contactId) {\n      payload = {\n        primaryEmail: {\n          partyContactId: contactId,\n          email: email,\n        },\n      };\n    } else {\n      payload = {\n        primaryEmail: {\n          email: email,\n        },\n      };\n    }\n\n    return this.baseService.post(this.endPoints.saveContact, payload);\n  }\n\n  savePhone(phone: string, contactId: string): Promise<any> {\n    let payload;\n    if (contactId) {\n      payload = {\n        mobilePhone: {\n          partyContactId: contactId,\n          phoneNumber: phone,\n        },\n      };\n    } else {\n      payload = {\n        mobilePhone: {\n          phoneNumber: phone,\n        },\n      };\n    }\n\n    return this.baseService.post(this.endPoints.saveContact, payload);\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n\n  formatPhoneNumber(phoneNum: string): string {\n    let newStr = '';\n    if (!phoneNum || phoneNum.length < 1) {\n      return newStr;\n    }\n    newStr = newStr + phoneNum.substring(0, 3) + '-';\n    newStr = newStr + phoneNum.substring(3, 6) + '-';\n    newStr = newStr + phoneNum.substring(6, 10);\n    return newStr;\n  }\n}\n","const contextRootCustomers = 'myvoya/ws/ers/service/customers/';\nconst contextRoot = 'myvoyage/ws/ers/';\nconst partyID = '272c2587-6b79-d874-e053-d22aac0a0939';\n\nexport const endPoints = {\n  getAccountRecovery: contextRootCustomers + `${partyID}/profile/loginInfo`,\n  getMessage: contextRoot + 'content/section/more',\n  saveContact: contextRoot + 'emvdata/saveContacts',\n};\n","const contextRoot = 'myvoya/ws/ers/service/customers/';\nconst partyID = '272c2587-6b79-d874-e053-d22aac0a0939';\n\nexport const endPoints = {\n  saveDisplayName: contextRoot + `${partyID}/profile/personalInfo`,\n};\n","import {Injectable} from '@angular/core';\nimport {endPoints} from './constants/endpoints';\nimport {DisplayName} from './models/edit-display-name.model';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EditDisplayNameService {\n  endPoints: any = endPoints;\n\n  constructor(\n    private utilityService: SharedUtilityService,\n    private baseService: BaseService\n  ) {\n    this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n  }\n\n  async saveDisplayName(displayName: string): Promise<DisplayName> {\n    const name: DisplayName = {displayName: displayName};\n    return this.baseService.post(this.endPoints.saveDisplayName, name);\n  }\n}\n","export default \"<ion-tabs [ngClass]=\\\"isWeb? 'web-tabs':'mobile-tabs'\\\">\\n  <ion-tab-bar slot=\\\"top\\\">\\n    <ion-tab-button\\n      *ngFor=\\\"let tab of tabs\\\"\\n      [ngClass]=\\\"{'selectedRipple': selectedTab === tab.link}\\\"\\n      (click)=\\\"handleClick(tab)\\\"\\n      class=\\\"lightgrey\\\"\\n      [tab]=\\\"tab.link\\\"\\n    >\\n      <ion-label>{{tab.label}}</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n</ion-tabs>\\n\";","export default \"<div [ngClass]=\\\"isWeb? 'web-account-container':'mobile-account-container'\\\">\\n  <div *ngIf=\\\"loading; else elseBlock\\\">\\n    <ion-spinner></ion-spinner>\\n  </div>\\n  <ng-template #elseBlock>\\n    <app-account-info-menu\\n      *ngIf=\\\"participantData?.displayName\\\"\\n      [label]=\\\"displayText.name\\\"\\n      [value]=\\\"participantData?.displayName\\\"\\n    ></app-account-info-menu>\\n    <app-account-info-menu\\n      *ngIf=\\\"email\\\"\\n      [label]=\\\"displayText?.email\\\"\\n      [value]=\\\"email\\\"\\n      [emailError]=\\\"emailError\\\"\\n    ></app-account-info-menu>\\n    <app-account-info-menu\\n      *ngIf=\\\"phone\\\"\\n      [label]=\\\"displayText?.phone\\\"\\n      [value]=\\\"phone\\\"\\n    ></app-account-info-menu>\\n    <app-account-info-menu\\n      *ngIf=\\\"displayText?.loginInfoDesc\\\"\\n      [label]=\\\"displayText?.loginInfo\\\"\\n      [value]=\\\"displayText?.loginInfoDesc\\\"\\n    ></app-account-info-menu>\\n  </ng-template>\\n</div>\\n\";","export default \"<ion-grid class=\\\"ion-no-margin ion-no-padding\\\">\\n  <div [ngClass]=\\\"isWeb ? 'accountInfoWeb' : 'accountInfoMobile'\\\">\\n    <ion-item inset=\\\"true\\\" class=\\\"ion-no-padding\\\">\\n      <div\\n        class=\\\"menu-item menu-with-border\\\"\\n        [ngClass]=\\\"\\n          emailError && label === displayText?.email ? 'menu-item-error' : ''\\n        \\\"\\n      >\\n        <div class=\\\"menu-inner\\\" (click)=\\\"editProperty()\\\" id=\\\"{{ label }}\\\">\\n          <ion-row class=\\\"font-16 w-100\\\">\\n            <ion-col class=\\\"account-values\\\">\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text class=\\\"account-label\\\">{{ label }}</ion-text>\\n                </ion-col>\\n                <ion-col class=\\\"account-value\\\">\\n                  <ion-text class=\\\"error-value\\\">{{ value }}<br /></ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col class=\\\"ion-no-padding\\\">\\n                  <ion-text class=\\\"account-data font-w-600 recovery-value\\\">\\n                    <span\\n                      *ngIf=\\\"emailError && label === displayText?.email\\\"\\n                      class=\\\"error-text\\\"\\n                    >\\n                      {{ displayText?.emailErrorMsg }}<br /><br\\n                    /></span>\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row> </ion-row>\\n            </ion-col>\\n            <ion-col class=\\\"ionic-icon\\\">\\n              <div *ngIf=\\\"!isWeb\\\" class=\\\"chevron_right\\\">\\n                <img alt=\\\"edit\\\" src=\\\"assets/icon/chevron_right.svg\\\" />\\n              </div>\\n              <div *ngIf=\\\"isWeb\\\" class=\\\"pencil-circle\\\">\\n                <img\\n                  *ngIf=\\\"!isDesktop\\\"\\n                  alt=\\\"edit\\\"\\n                  src=\\\"assets/icon/chevron_right.svg\\\"\\n                />\\n                <img\\n                  *ngIf=\\\"isDesktop\\\"\\n                  alt=\\\"edit\\\"\\n                  src=\\\"assets/icon/pencil-circle.svg\\\"\\n                />\\n              </div>\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </div>\\n    </ion-item>\\n  </div>\\n</ion-grid>\\n\";","export default \"<div [ngClass]=\\\"isWeb? 'webItems':'mobileItem'\\\">\\n  <ion-item class=\\\"ion-no-padding\\\">\\n    <!--First Name-->\\n    <ion-row class=\\\"first-name-row\\\">\\n      <ion-col class=\\\"first-name-txt\\\">\\n        <ion-text class=\\\"firstname-label\\\"\\n          >{{ displayText?.firstName }}</ion-text\\n        >\\n      </ion-col>\\n      <ion-col class=\\\"first-name-value\\\">\\n        <ion-text class=\\\"firstname-data font-w-600\\\">\\n          {{ participantData?.firstName }}\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n  <!--Last Name-->\\n  <ion-item class=\\\"ion-no-padding\\\">\\n    <ion-row class=\\\"last-name-row\\\">\\n      <ion-col class=\\\"last-name-txt\\\">\\n        <ion-text class=\\\"lastname-label\\\">{{ displayText?.lastName }}</ion-text>\\n      </ion-col>\\n      <ion-col class=\\\"last-name-value\\\">\\n        <ion-text class=\\\"lastname-data font-w-600\\\">\\n          {{ participantData?.lastName }}\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n  <!--DOB-->\\n  <ion-item class=\\\"ion-no-padding\\\">\\n    <ion-row class=\\\"dob-row\\\">\\n      <ion-col class=\\\"dob-txt\\\">\\n        <ion-text class=\\\"dob-label\\\">{{ displayText?.dob }}</ion-text>\\n      </ion-col>\\n      <ion-col class=\\\"dob-value\\\">\\n        <ion-text class=\\\"dob-data font-w-600\\\">\\n          {{ participantData?.birthDate }}\\n        </ion-text>\\n      </ion-col>\\n    </ion-row>\\n  </ion-item>\\n</div>\\n\";"],"names":[],"sourceRoot":"webpack:///"}