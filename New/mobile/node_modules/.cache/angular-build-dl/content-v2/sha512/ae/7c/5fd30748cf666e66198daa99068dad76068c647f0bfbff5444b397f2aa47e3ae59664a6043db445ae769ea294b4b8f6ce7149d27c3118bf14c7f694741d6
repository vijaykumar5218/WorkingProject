{"version":3,"file":"shared-lib_services_settings_settings_service_ts-es2015.js","mappings":";;;;;;;;;;;;;AAAO,MAAM,SAAS,GAAG;IACvB,oBAAoB,EAAE,gCAAgC;IACtD,kBAAkB,EAAE,+CAA+C;CACpE,CAAC;;;;;;;;;;;;;;;;;;;;;ACHuC;AAEmC;AACM;AAClC;IAKnC,eAAe,SAAf,eAAe;IAK1B,YACU,WAAwB,EACxB,cAAoC;QADpC,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAsB;QAE5C,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,wBAAwB,CAAC,2DAAS,CAAC,CAAC;IAC3E,CAAC;IAEK,uBAAuB,CAC3B,OAAO,GAAG,KAAK;;YAEf,IAAI;gBACF,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI,OAAO,EAAE;oBAChC,IAAI,CAAC,WAAW,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,GAAG,CAC3C,IAAI,CAAC,SAAS,CAAC,oBAAoB,CACpC,CAAC;iBACH;aACF;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBACf,IAAI,CAAC,WAAW,GAAG;oBACjB,kBAAkB,EAAE,KAAK;oBACzB,mBAAmB,EAAE,KAAK;iBAC3B,CAAC;aACH;YACD,OAAO,IAAI,CAAC,WAAW,CAAC;QAC1B,CAAC;KAAA;IACD,kBAAkB;QAChB,IAAI,CAAC,IAAI,CAAC,yBAAyB,EAAE;YACnC,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CACnD,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAClC,CAAC;SACH;QACD,OAAO,IAAI,CAAC,yBAAyB,CAAC;IACxC,CAAC;CACF;;YA7CO,wFAAW;YACX,8FAAoB;;AAMf,eAAe;IAH3B,yDAAU,CAAC;QACV,UAAU,EAAE,MAAM;KACnB,CAAC;GACW,eAAe,CAsC3B;AAtC2B","sources":["./shared-lib/services/settings/constants/endpoints.ts","./shared-lib/services/settings/settings.service.ts"],"sourcesContent":["export const endpoints = {\n  settingsDisplayFlags: 'myvoyage/settings/displayflags',\n  getPreferenceNudge: 'myvoyage/ws/ers/content/section/myvoyage/home'\n};\n","import {Injectable} from '@angular/core';\nimport {SettingPreferences, SettingsDisplayFlags} from './models/settings.model';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {endpoints} from './constants/endpoints';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private endpoints;\n  private displayFlag: SettingsDisplayFlags;\n  private preferencesContentPromise: Promise<SettingPreferences>\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.endpoints = this.utilityService.appendBaseUrlToEndpoints(endpoints);\n  }\n\n  async getSettingsDisplayFlags(\n    refresh = false\n  ): Promise<SettingsDisplayFlags> {\n    try {\n      if (!this.displayFlag || refresh) {\n        this.displayFlag = await this.baseService.get(\n          this.endpoints.settingsDisplayFlags\n        );\n      }\n    } catch (e) {\n      console.log(e);\n      this.displayFlag = {\n        displayContactLink: false,\n        suppressAppointment: false,\n      };\n    }\n    return this.displayFlag;\n  }\n  getPreferenceNudge():Promise<SettingPreferences>{\n    if (!this.preferencesContentPromise) {\n      this.preferencesContentPromise = this.baseService.get(\n        this.endpoints.getPreferenceNudge,\n      );\n    }\n    return this.preferencesContentPromise;\n  }\n}\n"],"names":[],"sourceRoot":"webpack:///"}