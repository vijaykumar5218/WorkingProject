{"version":3,"mappings":"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","names":["NotificationEventsComponent","settingService","_shared_lib_services_notification_setting_constants_common_content_json__WEBPACK_IMPORTED_MODULE_3__","subscription","notificationPrefsChanged$","subscribe","partyIdsUpdated","bind","partyIds","sectionChecked","getCheckedAndActive","basePropName","pushChecked","emailChecked","textChecked","sectionActive","checked","fieldName","updateSettings","unsubscribe","_shared_lib_services_notification_setting_notification_setting_service__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","selector","template","NotificationEventsPageModule","imports","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_ionic_angular__WEBPACK_IMPORTED_MODULE_5__","declarations","_notification_events_component__WEBPACK_IMPORTED_MODULE_0__","exports","routes","path","component","_notification_settings_page__WEBPACK_IMPORTED_MODULE_0__","NotificationSettingsPageRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","NotificationSettingsPageModule","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_notification_settings_routing_module__WEBPACK_IMPORTED_MODULE_0__","_components_notification_events_notification_events_module__WEBPACK_IMPORTED_MODULE_2__","_notification_settings_page__WEBPACK_IMPORTED_MODULE_1__","NotificationSettingsPage","headerFooterType","loadingController","router","utilityService","platformService","journeyService","_shared_lib_services_notification_setting_constants_common_content_json__WEBPACK_IMPORTED_MODULE_2__","headername","content","btnleft","btnright","buttonLeft","name","link","buttonRight","rxjs__WEBPACK_IMPORTED_MODULE_10__","isWeb","getIsWeb","isDesktop","data","initData","backLink","getJourneyBackButton","actionOption","savePath","publishType","type","_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_9__","_shared_lib_modules_footer_constants_footerType_enum__WEBPACK_IMPORTED_MODULE_7__","selectedTab","setJourneyBackButton","undefined","getSettingsContent","settingsContent","setPrefsSettings","create","translucent","loading","present","saveNotificationPrefs","getNotificationSettings","rootPath","navigateByUrl","dismiss","_services_header_footer_type_headerFooterType_service__WEBPACK_IMPORTED_MODULE_8__","_shared_lib_services_notification_setting_notification_setting_service__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_12__","_angular_router__WEBPACK_IMPORTED_MODULE_13__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_services_platform_platform_service__WEBPACK_IMPORTED_MODULE_5__","_shared_lib_services_journey_journey_service__WEBPACK_IMPORTED_MODULE_6__","HeaderFooterTypeService","headerTypeService","footerTypeService","headerInfo","footerInfo","publish","_header_type_header_type_service__WEBPACK_IMPORTED_MODULE_1__","_shared_lib_modules_footer_services_footer_type_footer_type_service__WEBPACK_IMPORTED_MODULE_0__","providedIn","__webpack_exports__"],"sources":["webpack:///shared-lib/components/settings/components/notification-settings/components/notification-events/notification-events.component.ts","webpack:///shared-lib/components/settings/components/notification-settings/components/notification-events/notification-events.module.ts","webpack:///shared-lib/components/settings/components/notification-settings/notification-settings-routing.module.ts","webpack:///shared-lib/components/settings/components/notification-settings/notification-settings.module.ts","webpack:///shared-lib/components/settings/components/notification-settings/notification-settings.page.ts","webpack:///shared-lib/services/header-footer-type/headerFooterType.service.ts","webpack:///shared-lib/components/settings/components/notification-settings/components/notification-events/notification-events.component.html","webpack:///shared-lib/components/settings/components/notification-settings/notification-settings.page.html"],"sourcesContent":["import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {CommonContent} from '@shared-lib/services/notification-setting/models/common-content.model';\nimport {\n  PartyIds,\n  SectionChecked,\n} from '@shared-lib/services/notification-setting/models/party-ids.model';\nimport * as commonContent from '@shared-lib/services/notification-setting/constants/common-content.json';\nimport {Subscription} from 'rxjs';\n\n@Component({\n  selector: 'app-notification-events',\n  templateUrl: './notification-events.component.html',\n  styleUrls: ['../../common.scss'],\n})\nexport class NotificationEventsComponent implements OnInit, OnDestroy {\n  @Input() title: string;\n  @Input() subTitle: string;\n  @Input() basePropName: string;\n\n  commonContent: CommonContent = (commonContent as any).default;\n  sectionActive = false;\n  pushChecked = false;\n  textChecked = false;\n  emailChecked = false;\n\n  private subscription: Subscription;\n\n  constructor(private settingService: NotificationsSettingService) {}\n\n  async ngOnInit() {\n    this.subscription = this.settingService.notificationPrefsChanged$.subscribe(\n      this.partyIdsUpdated.bind(this)\n    );\n  }\n\n  partyIdsUpdated(partyIds: PartyIds) {\n    const sectionChecked: SectionChecked = this.settingService.getCheckedAndActive(\n      partyIds,\n      this.basePropName\n    );\n    this.pushChecked = sectionChecked.pushChecked;\n    this.emailChecked = sectionChecked.emailChecked;\n    this.textChecked = sectionChecked.textChecked;\n    this.sectionActive = sectionChecked.sectionActive;\n  }\n\n  updateSetting(checked: boolean, fieldName: string) {\n    this.settingService.updateSettings(checked, fieldName);\n  }\n\n  toggleSection(): void {\n    if (!this.sectionActive) {\n      this.settingService.updateSettings(\n        false,\n        this.basePropName + 'MobileContactId-DONT_TEXT'\n      );\n      this.settingService.updateSettings(\n        false,\n        this.basePropName + 'EmailContactId-DONT_EMAIL'\n      );\n      this.settingService.updateSettings(\n        false,\n        this.basePropName + 'PushContactId-DONT_PUSH'\n      );\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationEventsComponent} from './notification-events.component';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [FormsModule, CommonModule, IonicModule],\n  declarations: [NotificationEventsComponent],\n  exports: [NotificationEventsComponent],\n})\nexport class NotificationEventsPageModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {NotificationSettingsPage} from './notification-settings.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: NotificationSettingsPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class NotificationSettingsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {NotificationSettingsPageRoutingModule} from './notification-settings-routing.module';\nimport {NotificationSettingsPage} from './notification-settings.page';\nimport {FormsModule} from '@angular/forms';\nimport {NotificationEventsPageModule} from './components/notification-events/notification-events.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    IonicModule,\n    NotificationSettingsPageRoutingModule,\n    NotificationEventsPageModule,\n  ],\n  declarations: [NotificationSettingsPage],\n  exports: [NotificationSettingsPage],\n})\nexport class NotificationSettingsPageModule {}\n","import {Component, OnDestroy} from '@angular/core';\nimport {SettingsContent} from '@shared-lib/services/notification-setting/models/notification-settings-content.model';\nimport {PartyIds} from '@shared-lib/services/notification-setting/models/party-ids.model';\nimport * as commonContent from '@shared-lib/services/notification-setting/constants/common-content.json';\nimport {NotificationsSettingService} from '@shared-lib/services/notification-setting/notification-setting.service';\nimport {LoadingController} from '@ionic/angular';\nimport {Subscription} from 'rxjs';\nimport {Router} from '@angular/router';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PlatformService} from '@shared-lib/services/platform/platform.service';\nimport {JourneyService} from '@shared-lib/services/journey/journey.service';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {HeaderFooterTypeService} from '../../../../services/header-footer-type/headerFooterType.service';\nimport {ActionOptions} from '../../../../models/ActionOptions.model';\nimport {HeaderType} from '../../../../constants/headerType.enum';\n\n@Component({\n  selector: 'app-notification-settings',\n  templateUrl: './notification-settings.page.html',\n  styleUrls: ['./notification-settings.page.scss'],\n})\nexport class NotificationSettingsPage implements OnDestroy {\n  content = (commonContent as any).default;\n  actionOption: ActionOptions = {\n    headername: this.content.headername,\n    btnleft: true,\n    btnright: true,\n    buttonLeft: {\n      name: '',\n      link: 'settings',\n    },\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n  isWeb: boolean;\n  isDesktop: boolean;\n\n  settingsHeader: string;\n  settingsFooter: string;\n  partyIdVals: PartyIds;\n  settingsContent: SettingsContent;\n  subscription = new Subscription();\n  savePath = '/settings';\n\n  constructor(\n    private headerFooterType: HeaderFooterTypeService,\n    private settingService: NotificationsSettingService,\n    private loadingController: LoadingController,\n    private router: Router,\n    private utilityService: SharedUtilityService,\n    private platformService: PlatformService,\n    private journeyService: JourneyService\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.platformService.isDesktop().subscribe(data => {\n      this.isDesktop = data;\n    });\n  }\n\n  ngOnInit() {\n    this.initData();\n  }\n\n  async ionViewWillEnter() {\n    const backLink = this.journeyService.getJourneyBackButton();\n    if (backLink) {\n      this.actionOption.buttonLeft.link = backLink;\n      this.savePath = backLink;\n    } else {\n      this.actionOption.buttonLeft.link = 'settings';\n      this.savePath = '/settings';\n    }\n    this.headerFooterType.publishType(\n      {\n        type: HeaderType.navbar,\n        actionOption: this.actionOption,\n      },\n      {type: FooterType.tabsnav, selectedTab: 'settings'}\n    );\n    this.journeyService.setJourneyBackButton(undefined);\n  }\n\n  async initData() {\n    this.settingsContent = await this.settingService.getSettingsContent();\n    this.settingService.setPrefsSettings();\n  }\n\n  async saveSettings(): Promise<void> {\n    const loading = await this.loadingController.create({\n      translucent: true,\n    });\n    await loading.present();\n\n    await this.settingService.saveNotificationPrefs();\n    this.settingService.getNotificationSettings(true);\n    const rootPath = this.isWeb && !this.isDesktop ? 'more' : this.savePath;\n    this.router.navigateByUrl(rootPath);\n    loading.dismiss();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FooterInfo} from '@shared-lib/modules/footer/models/footerInfo.model';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport {HeaderInfo} from '../../models/headerInfo.model';\nimport {HeaderTypeService} from '../header-type/header-type.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeaderFooterTypeService {\n  constructor(\n    private headerTypeService: HeaderTypeService,\n    private footerTypeService: FooterTypeService\n  ) {}\n\n  publishType(headerInfo: HeaderInfo, footerInfo: FooterInfo): void {\n    this.headerTypeService.publish(headerInfo);\n    this.footerTypeService.publish(footerInfo);\n  }\n}\n","export default \"<div class=\\\"settings-section-wrapper\\\">\\n  <div>\\n    <ion-toggle\\n      (ionChange)=\\\"toggleSection()\\\"\\n      [(ngModel)]=\\\"sectionActive\\\"\\n      id=\\\"{{ 'toogle-btn-' + basePropName }}\\\"\\n    ></ion-toggle>\\n    <h4>{{ title }}</h4>\\n    <p class=\\\"settings-subtext\\\">\\n      {{ subTitle }}\\n    </p>\\n  </div>\\n  <div *ngIf=\\\"sectionActive\\\">\\n    <div class=\\\"settings-section\\\">\\n      <!-- PUSH notifications -->\\n      <ion-row>\\n        <ion-checkbox\\n          id=\\\"{{ basePropName + 'PushContactId' }}\\\"\\n          name=\\\"{{ basePropName + 'PushContactId' }}\\\"\\n          color=\\\"btncolor\\\"\\n          class=\\\"settings-checkbox\\\"\\n          [(ngModel)]=\\\"pushChecked\\\"\\n          (ionChange)=\\\"\\n            updateSetting(pushChecked, basePropName + 'PushContactId-DONT_PUSH')\\n          \\\"\\n          mode=\\\"md\\\"\\n        >\\n        </ion-checkbox>\\n        <ion-label class=\\\"settings-checkbox-label\\\"\\n          >{{ commonContent.pushNotification }}\\n        </ion-label>\\n      </ion-row>\\n      <!-- TEXT notifications -->\\n      <ion-row>\\n        <ion-checkbox\\n          id=\\\"{{ basePropName + 'MobileContactId' }}\\\"\\n          name=\\\"{{ basePropName + 'MobileContactId' }}\\\"\\n          color=\\\"btncolor\\\"\\n          [(ngModel)]=\\\"textChecked\\\"\\n          (ionChange)=\\\"\\n            updateSetting(\\n              textChecked,\\n              basePropName + 'MobileContactId-DONT_TEXT'\\n            )\\n          \\\"\\n          class=\\\"settings-checkbox\\\"\\n          mode=\\\"md\\\"\\n        >\\n        </ion-checkbox>\\n        <ion-label class=\\\"settings-checkbox-label\\\">{{\\n          commonContent.textLabel\\n        }}</ion-label>\\n      </ion-row>\\n      <!-- EMAIL notifications -->\\n      <ion-row>\\n        <ion-checkbox\\n          id=\\\"{{ basePropName + 'EmailContactId' }}\\\"\\n          name=\\\"{{ basePropName + 'EmailContactId' }}\\\"\\n          color=\\\"btncolor\\\"\\n          [(ngModel)]=\\\"emailChecked\\\"\\n          (ionChange)=\\\"\\n            updateSetting(\\n              emailChecked,\\n              basePropName + 'EmailContactId-DONT_EMAIL'\\n            )\\n          \\\"\\n          class=\\\"settings-checkbox\\\"\\n          mode=\\\"md\\\"\\n        >\\n        </ion-checkbox>\\n        <ion-label class=\\\"settings-checkbox-label\\\"\\n          >{{ commonContent.emailLabel }}\\n        </ion-label>\\n      </ion-row>\\n    </div>\\n  </div>\\n</div>\\n\";","export default \"<div\\n  [ngClass]=\\\"isWeb? 'web-notification-settings':'mobile-notification-settings'\\\"\\n  id=\\\"notification-settings\\\"\\n>\\n  <ion-grid class=\\\"ion-no-padding ion-no-margin\\\">\\n    <ion-row>\\n      <ion-col>\\n        <label class=\\\"ion-no-padding font-18 font-w-600\\\"> </label>\\n      </ion-col>\\n    </ion-row>\\n    <ion-row>\\n      <ion-col>\\n        <p *ngIf=\\\"settingsContent\\\" class=\\\"settings-header\\\">\\n          {{settingsContent.NotificationSettingsDescription}}\\n        </p>\\n      </ion-col>\\n    </ion-row>\\n    <form name=\\\"HPNotificationSettingsForm\\\" id=\\\"HPNotificationSettingsForm\\\">\\n      <app-notification-events\\n        [title]=\\\"content.highPriority\\\"\\n        [subTitle]=\\\"settingsContent?.HighPriorityEventsDescription\\\"\\n        [basePropName]=\\\"'HPPref'\\\"\\n      ></app-notification-events>\\n      <app-notification-events\\n        [title]=\\\"content.accountActivity\\\"\\n        [subTitle]=\\\"settingsContent?.AccountActivitiesDescription\\\"\\n        [basePropName]=\\\"'AAPref'\\\"\\n      ></app-notification-events>\\n      <app-notification-events\\n        [title]=\\\"content.insights\\\"\\n        [subTitle]=\\\"settingsContent?.InsightsRecommendationsDescription\\\"\\n        [basePropName]=\\\"'INPref'\\\"\\n      ></app-notification-events>\\n      <ion-row class=\\\"button-row\\\">\\n        <ion-col class=\\\"cancel-button\\\">\\n          <ion-button\\n            id=\\\"cancel-button\\\"\\n            class=\\\"cancel-button\\\"\\n            shape=\\\"round\\\"\\n            expand=\\\"block\\\"\\n            fill=\\\"outline\\\"\\n            [routerLink]=\\\"savePath\\\"\\n          >\\n            {{content.cancelLabel}}</ion-button\\n          >\\n        </ion-col>\\n        <ion-col class=\\\"continue-button\\\">\\n          <ion-button\\n            id=\\\"save-button\\\"\\n            class=\\\"save-button\\\"\\n            shape=\\\"round\\\"\\n            expand=\\\"block\\\"\\n            fill=\\\"outline\\\"\\n            (click)=\\\"saveSettings()\\\"\\n            >{{content.saveLabel}}</ion-button\\n          >\\n        </ion-col>\\n      </ion-row>\\n      <ion-row>\\n        <ion-col>\\n          <div\\n            class=\\\"settings-footer\\\"\\n            *ngIf=\\\"settingsContent\\\"\\n            [innerHtml]=\\\"settingsContent.NotificationSettingsFooterTxt\\\"\\n          ></div>\\n        </ion-col>\\n      </ion-row>\\n    </form>\\n  </ion-grid>\\n</div>\\n\";"]}