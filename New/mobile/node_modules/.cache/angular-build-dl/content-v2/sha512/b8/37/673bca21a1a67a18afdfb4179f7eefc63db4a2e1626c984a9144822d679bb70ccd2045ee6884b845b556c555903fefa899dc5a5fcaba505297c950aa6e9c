{"version":3,"mappings":"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","names":["BenefitsListComponent","benefitService","getBenefitContent","then","res","content","_shared_lib_services_benefits_benefits_service__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_4__","selector","template","BenefitsListComponentModule","imports","_angular_common__WEBPACK_IMPORTED_MODULE_3__","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","declarations","_benefits_list_component__WEBPACK_IMPORTED_MODULE_0__","exports","routes","path","component","_summary_page__WEBPACK_IMPORTED_MODULE_0__","loadChildren","__webpack_require__","m","AddBenefitsPageModule","SummaryPageRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_3__","SummaryPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_angular_forms__WEBPACK_IMPORTED_MODULE_7__","_ionic_angular__WEBPACK_IMPORTED_MODULE_8__","_summary_routing_module__WEBPACK_IMPORTED_MODULE_0__","_shared_lib_components_coverages_benefit_elections_no_benefits_no_benefits_module__WEBPACK_IMPORTED_MODULE_3__","_shared_lib_components_coverages_benefit_elections_benefit_list_benefits_list_module__WEBPACK_IMPORTED_MODULE_2__","_summary_page__WEBPACK_IMPORTED_MODULE_1__","SummaryPage","headerType","router","utilityService","headername","undefined","btnleft","btnright","buttonLeft","name","link","buttonRight","isWeb","getIsWeb","getBenefitData","getNextYearBenefits","benefits","hasBenefits","_a","enrolled","_b","length","_c","provided","_d","_e","declined","_f","benefitsContent","actionOption","header","getBenefitSummaryBackButton","publish","type","_shared_lib_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_5__","setBenefitSummaryBackButton","navigateByUrl","_shared_lib_services_header_type_header_type_service__WEBPACK_IMPORTED_MODULE_2__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","_shared_lib_services_benefits_benefits_service__WEBPACK_IMPORTED_MODULE_3__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_4__","__webpack_exports__"],"sources":["webpack:///shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.component.ts","webpack:///shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.module.ts","webpack:///shared-lib/components/settings/components/summary/summary-routing.module.ts","webpack:///shared-lib/components/settings/components/summary/summary.module.ts","webpack:///shared-lib/components/settings/components/summary/summary.page.ts","webpack:///shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.component.html","webpack:///shared-lib/components/settings/components/summary/summary.page.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  Benefit,\n  BenefitsSummaryContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\n\n@Component({\n  selector: 'app-summary-benefits-list',\n  templateUrl: './benefits-list.component.html',\n  styleUrls: ['./benefits-list.component.scss'],\n})\nexport class BenefitsListComponent {\n  @Input() header: string;\n  @Input() benefitsList: Benefit[];\n  @Input() displayPremiumAndCoverage: boolean;\n  content: BenefitsSummaryContent;\n\n  constructor(private benefitService: BenefitsService) {}\n\n  ngOnInit() {\n    this.getBenefitContent();\n  }\n\n  async getBenefitContent(): Promise<void> {\n    return this.benefitService\n      .getBenefitContent()\n      .then((res: BenefitsSummaryContent) => {\n        this.content = res;\n      });\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {IonicModule} from '@ionic/angular';\nimport {BenefitsListComponent} from './benefits-list.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [BenefitsListComponent],\n  exports: [BenefitsListComponent],\n})\nexport class BenefitsListComponentModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {SummaryPage} from './summary.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SummaryPage,\n  },\n  {\n    path: 'add-benefits',\n    loadChildren: () =>\n      import('./components/add-benefits/add-benefits.module').then(\n        m => m.AddBenefitsPageModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SummaryPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {SummaryPageRoutingModule} from './summary-routing.module';\nimport {SummaryPage} from './summary.page';\nimport {BenefitsListComponentModule} from '@shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.module';\nimport {NoBenefitsComponentModule} from '@shared-lib/components/coverages/benefit-elections/no-benefits/no-benefits.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SummaryPageRoutingModule,\n    NoBenefitsComponentModule,\n    BenefitsListComponentModule,\n  ],\n  declarations: [SummaryPage],\n})\nexport class SummaryPageModule {}\n","import {HeaderTypeService} from '@shared-lib/services/header-type/header-type.service';\nimport {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {\n  Benefits,\n  BenefitsSummaryContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {ActionOptions} from '../../../../models/ActionOptions.model';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.page.html',\n  styleUrls: ['./summary.page.scss'],\n})\nexport class SummaryPage {\n  benefitsContent: BenefitsSummaryContent;\n  actionOption: ActionOptions = {\n    headername: undefined,\n    btnleft: true,\n    btnright: true,\n    buttonLeft: {\n      name: '',\n      link: 'settings',\n    },\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n  benefits: Benefits;\n  hasBenefits: boolean;\n  isWeb: boolean;\n\n  constructor(\n    private headerType: HeaderTypeService,\n    private router: Router,\n    private benefitService: BenefitsService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit(): void {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.getBenefitData();\n  }\n\n  async getBenefitData(): Promise<void> {\n    return this.benefitService\n      .getNextYearBenefits()\n      .then(async (res: Benefits) => {\n        this.benefits = res;\n        this.hasBenefits =\n          this.benefits?.enrolled?.length > 0 ||\n          this.benefits?.provided?.length > 0 ||\n          this.benefits?.declined?.length > 0;\n      });\n  }\n\n  async ionViewWillEnter() {\n    this.benefitsContent = await this.benefitService.getBenefitContent();\n    this.actionOption.headername = this.benefitsContent.header;\n    this.actionOption.buttonLeft.link = this.benefitService.getBenefitSummaryBackButton();\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n    this.benefitService.setBenefitSummaryBackButton('settings');\n  }\n\n  goToAddBenefits() {\n    this.router.navigateByUrl('/settings/summary/add-benefits');\n  }\n}\n","export default \"<div class=\\\"header\\\">{{ header }}</div>\\n<ion-card *ngFor=\\\"let benefit of benefitsList\\\">\\n  <ion-card-content>\\n    <ion-row>\\n      <ion-col class=\\\"img-col\\\">\\n        <img\\n          alt=\\\"\\\"\\n          src=\\\"{{\\n            (content?.iconMapping)[benefit.type] ||\\n              'assets/icon/benefits/benadminflag.svg'\\n          }}\\\"\\n        />\\n      </ion-col>\\n      <ion-col>\\n        <ion-text\\n          [ngClass]=\\\"\\n            displayPremiumAndCoverage &&\\n            (benefit.coverageType || benefit.premium || benefit.premium === 0)\\n              ? 'name'\\n              : 'declined'\\n          \\\"\\n          >{{ benefit.name }}</ion-text\\n        >\\n        <ion-row *ngIf=\\\"displayPremiumAndCoverage\\\">\\n          <ion-col size=\\\"5\\\" class=\\\"mt-0\\\">\\n            <ng-container *ngIf=\\\"benefit.coverageType\\\">\\n              <ion-text class=\\\"label\\\">\\n                {{ content?.coverageLabel }}\\n              </ion-text>\\n              <ion-text class=\\\"amt\\\">{{ benefit?.coverageType }}</ion-text>\\n            </ng-container>\\n          </ion-col>\\n          <ion-col size=\\\"7\\\" class=\\\"m-auto\\\">\\n            <ng-container *ngIf=\\\"benefit.premium || benefit.premium === 0\\\">\\n              <ion-text class=\\\"label\\\">\\n                {{ content?.premiumLabel }}\\n              </ion-text>\\n              <ion-text class=\\\"amt\\\"\\n                >{{ benefit.premium || 0 | currency: 'USD':'symbol' }}\\n                <ng-container *ngIf=\\\"benefit.premium > 0\\\"\\n                  >/{{ benefit.premiumFrequency }}</ng-container\\n                >\\n              </ion-text>\\n            </ng-container>\\n          </ion-col>\\n        </ion-row>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<div [ngClass]=\\\"isWeb? 'web-benefit-summary':'mobile-benefit-summary'\\\">\\n  <ng-container *ngIf=\\\"hasBenefits; else noBenefits\\\">\\n    <section\\n      class=\\\"header-section\\\"\\n      *ngIf=\\\"benefits?.payrollDeduction?.total_deduction || benefits?.payrollDeduction?.total_deduction === 0\\\"\\n    >\\n      <p class=\\\"header-text\\\">\\n        {{benefitsContent?.payrollText}}\\n        {{benefits.payrollDeduction.cycle_time}}\\n      </p>\\n      <p class=\\\"header-text-amount\\\">\\n        {{benefits.payrollDeduction.total_deduction | currency:'USD'}}\\n      </p>\\n    </section>\\n    <app-summary-benefits-list\\n      *ngIf=\\\"benefits?.enrolled?.length > 0\\\"\\n      [header]=\\\"benefitsContent?.enrolledSectionTitle\\\"\\n      [benefitsList]=\\\"benefits.enrolled\\\"\\n      [displayPremiumAndCoverage]=\\\"true\\\"\\n    ></app-summary-benefits-list>\\n    <app-summary-benefits-list\\n      *ngIf=\\\"benefits?.provided?.length > 0\\\"\\n      [header]=\\\"benefitsContent?.providedSectionTitle\\\"\\n      [benefitsList]=\\\"benefits.provided\\\"\\n      [displayPremiumAndCoverage]=\\\"false\\\"\\n    ></app-summary-benefits-list>\\n    <app-summary-benefits-list\\n      *ngIf=\\\"benefits?.declined?.length > 0\\\"\\n      [header]=\\\"benefitsContent?.declinedSectionTitle\\\"\\n      [benefitsList]=\\\"benefits.declined\\\"\\n      [displayPremiumAndCoverage]=\\\"false\\\"\\n    ></app-summary-benefits-list>\\n  </ng-container>\\n</div>\\n<ng-template #noBenefits> <app-no-benefits></app-no-benefits></ng-template>\\n\";"]}