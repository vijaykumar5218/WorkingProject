{"version":3,"mappings":"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","names":["routes","path","component","_landing_page__WEBPACK_IMPORTED_MODULE_0__","LandingPageRoutingModule","imports","_angular_router__WEBPACK_IMPORTED_MODULE_3__","exports","LandingPageModule","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_7__","_landing_routing_module__WEBPACK_IMPORTED_MODULE_0__","swiper_angular__WEBPACK_IMPORTED_MODULE_8__","_shared_lib_components_step_progress_bar_step_progress_bar_module__WEBPACK_IMPORTED_MODULE_2__","declarations","_landing_page__WEBPACK_IMPORTED_MODULE_1__","LandingPage","authService","headerFooterTypeService","landingService","ngZone","route","loadingController","homeService","slidesPerView","centeredSlides","rxjs__WEBPACK_IMPORTED_MODULE_10__","subscription","add","authenticationChange$","subscribe","authenticationChanged","bind","biometricsAuthenticationChange$","biometricsAuthenticationChanged","reloading","publishType","type","_shared_lib_constants_headerType_enum__WEBPACK_IMPORTED_MODULE_7__","_shared_lib_modules_footer_constants_footerType_enum__WEBPACK_IMPORTED_MODULE_2__","getLandingContent","landingSteps","MobileLaunchContent","status","_shared_lib_constants_status_enum__WEBPACK_IMPORTED_MODULE_6__","pageWidth","window","innerWidth","getBiometricsIconName","biometricsIcon","getBiometricsLabel","biometricsText","checkFaceIdSession","queryParams","params","firstTimeLoad","noAutoLogin","attemptFaceIDLogin","checkOldSessionAndRevoke","openVersionAlert","hasFaceIDSession","isAuth","initializeAppForUser","create","translucent","loading","present","validateApplication","valid","alert","pageText","failedAttest","logoutAndRevoke","dismiss","checkMyvoyageAccess","result","enableMyVoyage","shouldShowBiometricsScreen","show","navigateByUrl","navigateToLoggedInLanding","hasNonFaceIDSession","hasSession","signInDisabled","openLogin","openRegister","swiper","slides","url","openInBrowser","run","currentStep","activeIndex","length","unsubscribe","_shared_service_authentication_authentication_service__WEBPACK_IMPORTED_MODULE_3__","_shared_lib_services_header_footer_type_headerFooterType_service__WEBPACK_IMPORTED_MODULE_8__","_service_landing_service__WEBPACK_IMPORTED_MODULE_5__","_angular_core__WEBPACK_IMPORTED_MODULE_12__","_angular_router__WEBPACK_IMPORTED_MODULE_13__","_ionic_angular__WEBPACK_IMPORTED_MODULE_14__","_shared_lib_services_home_home_service__WEBPACK_IMPORTED_MODULE_9__","selector","template","AlertWindowService","alertController","router","msg","link","cssClass","header","systemUnavailable","subHeader","message","youMustUse","buttons","backdropDismiss","undefined","onDidDismiss","then","opts","_ionic_angular__WEBPACK_IMPORTED_MODULE_2__","providedIn","EventTrackingService","baseService","utilityService","_shared_lib_services_account_constants_endpoints__WEBPACK_IMPORTED_MODULE_0__","endPoints","appendBaseUrlToEndpoints","postData","createdBy","getSubscriberKey","subscriberKey","passThruAttributes","attributeName","attributeValue","getIsWeb","post","eventTracking","subscriberKeyPromise","get","_shared_lib_services_base_base_factory_provider__WEBPACK_IMPORTED_MODULE_1__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_2__","HeaderFooterTypeService","headerTypeService","footerTypeService","headerInfo","footerInfo","publish","_header_type_header_type_service__WEBPACK_IMPORTED_MODULE_1__","_shared_lib_modules_footer_services_footer_type_footer_type_service__WEBPACK_IMPORTED_MODULE_0__","HomeService","pushNotificationsService","eventTrackingService","qualtricsService","accountService","googleAnalyticsService","settingsService","eventName","eventContent","eventTrackingLogin","contactKeySet","subscriberKeyInfo","setContactKey","getParticipant","data","setUserProperties","getQualtricsUser","partyId","getNotificationSettings","pipe","toPromise","primaryEmail","_a","email","setSFMCContactKey","setQualtricsProps","trackHomeEvent","_shared_lib_services_pushNotifications_pushNotifications_service__WEBPACK_IMPORTED_MODULE_0__","_shared_lib_services_event_tracker_event_tracking_service__WEBPACK_IMPORTED_MODULE_1__","_shared_lib_services_qualtrics_qualtrics_service__WEBPACK_IMPORTED_MODULE_3__","_shared_lib_services_account_account_service__WEBPACK_IMPORTED_MODULE_4__","_google_Analytics_google_analytics_service__WEBPACK_IMPORTED_MODULE_5__","_notification_setting_notification_setting_service__WEBPACK_IMPORTED_MODULE_6__","PushNotificationsService","mcSDK","MCCordovaPlugin","enableVerboseLogging","setOnNotificationOpenedListener","event","logSdkState","didLaunchWithURL","values","_mobile_src_app_modules_shared_service_authentication_authentication_service__WEBPACK_IMPORTED_MODULE_0__","__webpack_exports__"],"sources":["webpack:///mobile/src/app/modules/features/landing/landing-routing.module.ts","webpack:///mobile/src/app/modules/features/landing/landing.module.ts","webpack:///mobile/src/app/modules/features/landing/landing.page.ts","webpack:///mobile/src/app/modules/shared/service/alert-window/alert-window.service.ts","webpack:///shared-lib/services/event-tracker/event-tracking.service.ts","webpack:///shared-lib/services/header-footer-type/headerFooterType.service.ts","webpack:///shared-lib/services/home/home.service.ts","webpack:///shared-lib/services/pushNotifications/pushNotifications.service.ts","webpack:///mobile/src/app/modules/features/landing/landing.page.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {LandingPage} from './landing.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LandingPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LandingPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {SwiperModule} from 'swiper/angular';\nimport {IonicModule} from '@ionic/angular';\nimport {LandingPageRoutingModule} from './landing-routing.module';\nimport {LandingPage} from './landing.page';\nimport {StepProgressBarComponentModule} from '@shared-lib/components/step-progress-bar/step-progress-bar.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LandingPageRoutingModule,\n    SwiperModule,\n    StepProgressBarComponentModule,\n  ],\n  declarations: [LandingPage],\n})\nexport class LandingPageModule {}\n","import {Component, NgZone, OnDestroy, OnInit} from '@angular/core';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {AuthenticationService} from '../../shared/service/authentication/authentication.service';\nimport * as landingText from './constants/landing-content.json';\nimport {LaunchContentPage} from './models/landing.model';\nimport {LandingService} from './service/landing.service';\nimport Swiper from 'swiper';\nimport {Status} from '@shared-lib/constants/status.enum';\nimport {LoadingController} from '@ionic/angular';\nimport {ActivatedRoute} from '@angular/router';\nimport {Subscription} from 'rxjs';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport {HeaderFooterTypeService} from '@shared-lib/services/header-footer-type/headerFooterType.service';\nimport {HomeService} from '@shared-lib/services/home/home.service';\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.page.html',\n  styleUrls: ['./landing.page.scss'],\n})\nexport class LandingPage implements OnInit, OnDestroy {\n  pageText: Record<string, string> = landingText;\n  firstTimeLoad = true;\n  hasFaceIDSession = false;\n  landingSteps: LaunchContentPage[];\n  slideOpts: Record<string, number | boolean> = {\n    slidesPerView: 1,\n    centeredSlides: true,\n  };\n  slides: Swiper;\n  pageWidth: string;\n  currentStep = 0;\n  biometricsIcon;\n  biometricsText;\n  reloading = false;\n  subscription = new Subscription();\n  signInDisabled = false;\n\n  constructor(\n    private authService: AuthenticationService,\n    private headerFooterTypeService: HeaderFooterTypeService,\n    private landingService: LandingService,\n    private ngZone: NgZone,\n    private route: ActivatedRoute,\n    private loadingController: LoadingController,\n    private homeService: HomeService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.authService.authenticationChange$.subscribe(\n        this.authenticationChanged.bind(this)\n      )\n    );\n    this.subscription.add(\n      this.authService.biometricsAuthenticationChange$.subscribe(\n        this.biometricsAuthenticationChanged.bind(this)\n      )\n    );\n  }\n\n  async ionViewWillEnter() {\n    this.reloading = this.authService.reloading;\n    this.headerFooterTypeService.publishType(\n      {\n        type: HeaderType.none,\n      },\n      {\n        type: FooterType.none,\n      }\n    );\n\n    this.landingSteps = (\n      await this.landingService.getLandingContent()\n    ).MobileLaunchContent;\n    this.landingSteps[0].status = Status.completed;\n\n    this.pageWidth = window.innerWidth * 0.8 + 'px';\n\n    this.biometricsIcon = await this.authService.getBiometricsIconName();\n    this.biometricsText = await this.authService.getBiometricsLabel();\n\n    this.checkFaceIdSession();\n\n    this.route.queryParams.subscribe(async params => {\n      if (this.firstTimeLoad && !params?.noAutoLogin) {\n        await this.authService.attemptFaceIDLogin();\n        this.firstTimeLoad = false;\n\n        //If has prev non-faceid session. Revoke old tokens.\n        this.checkOldSessionAndRevoke();\n      }\n    });\n\n    this.landingService.openVersionAlert();\n  }\n\n  async checkFaceIdSession() {\n    try {\n      this.hasFaceIDSession = await this.authService.hasFaceIDSession();\n    } catch (ex) {\n      this.hasFaceIDSession = false;\n    }\n  }\n\n  biometricsAuthenticationChanged(isAuth: boolean) {\n    if (isAuth) {\n      this.homeService.initializeAppForUser();\n    }\n  }\n\n  async authenticationChanged(isAuth: boolean) {\n    if (isAuth) {\n      const loading = await this.loadingController.create({\n        translucent: true,\n      });\n      loading.present();\n\n      const valid = await this.landingService.validateApplication();\n      if (!valid) {\n        alert(this.pageText.failedAttest);\n        await this.authService.logoutAndRevoke();\n        loading.dismiss();\n        return;\n      }\n\n      const result = await this.landingService.checkMyvoyageAccess();\n\n      if (result.enableMyVoyage === 'Y') {\n        this.homeService.initializeAppForUser();\n\n        const show = await this.authService.shouldShowBiometricsScreen();\n        if (show) {\n          this.landingService.navigateByUrl('biometrics');\n        } else {\n          this.authService.navigateToLoggedInLanding();\n        }\n      } else {\n        this.landingService.navigateByUrl('no-access');\n      }\n\n      loading.dismiss();\n    }\n  }\n\n  async checkOldSessionAndRevoke() {\n    const hasSession = await this.authService.hasNonFaceIDSession();\n    if (hasSession) {\n      await this.authService.logoutAndRevoke();\n    }\n  }\n\n  loginFaceID() {\n    this.authService.attemptFaceIDLogin();\n  }\n\n  async signInClicked() {\n    this.signInDisabled = true;\n    const loading = await this.loadingController.create({\n      translucent: true,\n    });\n    loading.present();\n\n    await this.authService.openLogin();\n\n    this.checkFaceIdSession();\n\n    loading.dismiss();\n    this.signInDisabled = false;\n  }\n\n  async registerClicked() {\n    this.signInDisabled = true;\n    const loading = await this.loadingController.create({\n      translucent: true,\n    });\n    loading.present();\n\n    await this.authService.openRegister();\n\n    this.checkFaceIdSession();\n\n    loading.dismiss();\n    this.signInDisabled = false;\n  }\n\n  setSwiperInstance(swiper: Swiper) {\n    this.slides = swiper;\n  }\n\n  openLink(url: string) {\n    this.landingService.openInBrowser(url);\n  }\n\n  handleSlideChange() {\n    this.ngZone.run(() => {\n      this.currentStep = this.slides.activeIndex;\n      this.landingSteps[this.currentStep].status = Status.completed;\n      if (this.currentStep + 1 < this.landingSteps.length) {\n        this.landingSteps[this.currentStep + 1].status = Status.notStarted;\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {AlertController} from '@ionic/angular';\nimport {AlertWindow} from '../../../../../../src/app/data/schema/AlterWindow';\nimport * as text from './constants/alertText.json';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AlertWindowService {\n  pageText: Record<string, string> = text;\n\n  constructor(\n    public alertController: AlertController,\n    private router: Router\n  ) {}\n\n  async presentAlert(msg?: AlertWindow) {\n    const link = msg.link || '';\n    const alert = await this.alertController.create({\n      cssClass: msg.cssClass || 'alert-window',\n      header: msg.header || this.pageText.systemUnavailable,\n      subHeader: msg.subHeader || '',\n      message: msg.message || this.pageText.youMustUse,\n      buttons: msg.buttons || ['OK'],\n      backdropDismiss:\n        msg?.backdropDismiss !== undefined ? msg.backdropDismiss : true,\n    });\n\n    await alert.present();\n    if (link !== '') {\n      await alert.onDidDismiss().then(() => {\n        this.router.navigateByUrl('' + link);\n      });\n    } else {\n      await alert.onDidDismiss();\n    }\n  }\n\n  async createAndPresent(opts: any) {\n    const alert = await this.alertController.create(opts);\n    return alert.present();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {endPoints} from '@shared-lib/services/account/constants/endpoints';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {EventTrackingEvent, SFMCUserInfo} from './models/event-tracking.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventTrackingService {\n  endPoints = endPoints;\n  private subscriberKeyPromise: Promise<SFMCUserInfo>;\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n  }\n\n  async eventTracking(postData: EventTrackingEvent): Promise<void> {\n    postData.createdBy = 'myvoyage';\n    postData.subscriberKey = (await this.getSubscriberKey()).subscriberKey;\n    postData.passThruAttributes = [\n      ...(postData.passThruAttributes || []),\n      {\n        attributeName: 'platform',\n        attributeValue: this.utilityService.getIsWeb() ? 'web' : 'mobile',\n      },\n    ];\n    await this.baseService.post(this.endPoints.eventTracking, postData);\n  }\n\n  getSubscriberKey(): Promise<SFMCUserInfo> {\n    if (!this.subscriberKeyPromise) {\n      this.subscriberKeyPromise = this.baseService.get(\n        this.endPoints.subscriberKey\n      );\n    }\n    return this.subscriberKeyPromise;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {FooterInfo} from '@shared-lib/modules/footer/models/footerInfo.model';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport {HeaderInfo} from '../../models/headerInfo.model';\nimport {HeaderTypeService} from '../header-type/header-type.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HeaderFooterTypeService {\n  constructor(\n    private headerTypeService: HeaderTypeService,\n    private footerTypeService: FooterTypeService\n  ) {}\n\n  publishType(headerInfo: HeaderInfo, footerInfo: FooterInfo): void {\n    this.headerTypeService.publish(headerInfo);\n    this.footerTypeService.publish(footerInfo);\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {PushNotificationsService} from '@shared-lib/services/pushNotifications/pushNotifications.service';\nimport {EventTrackingService} from '@shared-lib/services/event-tracker/event-tracking.service';\nimport * as eventC from '@shared-lib/services/event-tracker/constants/event-tracking.json';\nimport {EventTrackingConstants} from '@shared-lib/services/event-tracker/models/event-tracking.model';\nimport {QualtricsService} from '@shared-lib/services/qualtrics/qualtrics.service';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\nimport {take} from 'rxjs/operators';\nimport {GoogleAnalyticsService} from '../google-Analytics/google.analytics.service';\nimport {NotificationsSettingService} from '../notification-setting/notification-setting.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomeService {\n  eventContent: EventTrackingConstants = eventC;\n  private contactKeySet = false;\n\n  constructor(\n    private pushNotificationsService: PushNotificationsService,\n    private eventTrackingService: EventTrackingService,\n    private qualtricsService: QualtricsService,\n    private accountService: AccountService,\n    private googleAnalyticsService: GoogleAnalyticsService,\n    private settingsService: NotificationsSettingService\n  ) {}\n\n  private trackHomeEvent() {\n    this.eventTrackingService.eventTracking({\n      eventName: this.eventContent.eventTrackingLogin.eventName,\n    });\n  }\n\n  private async setSFMCContactKey() {\n    if (!this.contactKeySet) {\n      this.contactKeySet = true;\n      const subscriberKeyInfo = await this.eventTrackingService.getSubscriberKey();\n      this.pushNotificationsService.setContactKey(\n        subscriberKeyInfo.subscriberKey\n      );\n    }\n  }\n\n  private setQualtricsProps() {\n    this.accountService.getParticipant().subscribe((data: Participant) => {\n      this.qualtricsService.setUserProperties(data);\n    });\n  }\n\n  async getPartyId() {\n    const result = await this.googleAnalyticsService.getQualtricsUser();\n    return result?.partyId;\n  }\n\n  async getEmail() {\n    const result = await this.settingsService\n      .getNotificationSettings()\n      .pipe(take(1))\n      .toPromise();\n    return result?.primaryEmail?.email;\n  }\n\n  initializeAppForUser() {\n    this.setSFMCContactKey();\n    this.setQualtricsProps();\n    this.trackHomeEvent();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {AuthenticationService} from '../../../mobile/src/app/modules/shared/service/authentication/authentication.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PushNotificationsService {\n  private mcSDK: any;\n\n  constructor(private authService: AuthenticationService) {\n    this.mcSDK = window.MCCordovaPlugin;\n    this.mcSDK.enableVerboseLogging();\n    this.mcSDK.setOnNotificationOpenedListener(\n      (event: {values: {url: string}}) => {\n        this.mcSDK.logSdkState();\n        this.authService.didLaunchWithURL(event.values.url);\n      }\n    );\n    this.mcSDK.logSdkState();\n  }\n\n  setContactKey(partyId: string) {\n    this.mcSDK.setContactKey(partyId);\n    this.mcSDK.logSdkState();\n  }\n}\n","export default \"<ion-grid class=\\\"p-0\\\" *ngIf=\\\"!reloading\\\" class=\\\"container\\\">\\n  <ion-row class=\\\"top-row\\\">\\n    <ion-col>\\n      <ion-text class=\\\"welcome\\\">{{pageText.welcome}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"logo-row\\\">\\n    <ion-col class=\\\"logo-col\\\">\\n      <div class=\\\"logo-div\\\">\\n        <img class=\\\"compass\\\" src=\\\"assets/icon/compass.svg\\\" alt=\\\"voya compass\\\" />\\n        <img class=\\\"logo\\\" src=\\\"assets/icon/myVoyageNoO.svg\\\" alt=\\\"voya logo\\\" />\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n  <swiper\\n    id=\\\"swiper-container\\\"\\n    [config]=\\\"slideOpts\\\"\\n    (swiper)=\\\"setSwiperInstance($event)\\\"\\n    [ngStyle]=\\\"{'width': pageWidth}\\\"\\n    (slideChange)=\\\"handleSlideChange()\\\"\\n  >\\n    <ng-template\\n      #swiper\\n      swiperSlide\\n      *ngFor=\\\"let step of landingSteps; let i = index\\\"\\n    >\\n      <div class=\\\"page-container\\\">\\n        <img\\n          class=\\\"slide-img\\\"\\n          src=\\\"{{step.login_description[0].image_url}}\\\"\\n          alt=\\\"\\\"\\n        />\\n        <ion-text class=\\\"page-title\\\">{{step.login_title}}</ion-text>\\n        <ion-text class=\\\"page-desc\\\">\\n          {{step.login_description[0].description}}\\n          <a\\n            *ngIf=\\\"step.login_description[0].link_name\\\"\\n            (click)=\\\"openLink(step.login_description[0].link_url)\\\"\\n          >\\n            {{step.login_description[0].link_name}}</a\\n          >\\n        </ion-text>\\n      </div>\\n    </ng-template>\\n  </swiper>\\n  <ion-row class=\\\"progress-row\\\">\\n    <ion-col>\\n      <app-step-progress-bar\\n        [steps]=\\\"landingSteps\\\"\\n        [currentStep]=\\\"currentStep\\\"\\n      ></app-step-progress-bar>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"face-id-row\\\" *ngIf=\\\"hasFaceIDSession\\\">\\n    <ion-col>\\n      <img class=\\\"bio-icon\\\" src=\\\"{{biometricsIcon}}\\\" alt=\\\"biometrics\\\" />\\n      <ion-text class=\\\"bio-text\\\" (click)=\\\"loginFaceID()\\\"\\n        >{{pageText.signInWith}}{{biometricsText}}</ion-text\\n      >\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0\\\">\\n    <ion-col class=\\\"p-0\\\">\\n      <ion-button\\n        [disabled]=\\\"signInDisabled\\\"\\n        (click)=\\\"signInClicked()\\\"\\n        class=\\\"sign-in\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        id=\\\"sign-in-button\\\"\\n      >\\n        {{pageText.signin}}\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0\\\">\\n    <ion-col class=\\\"p-0\\\">\\n      <ion-button\\n        [disabled]=\\\"signInDisabled\\\"\\n        (click)=\\\"registerClicked()\\\"\\n        class=\\\"register\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"white\\\"\\n        fill=\\\"outline\\\"\\n        id=\\\"register-button\\\"\\n      >\\n        {{pageText.register}}\\n      </ion-button>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";"]}