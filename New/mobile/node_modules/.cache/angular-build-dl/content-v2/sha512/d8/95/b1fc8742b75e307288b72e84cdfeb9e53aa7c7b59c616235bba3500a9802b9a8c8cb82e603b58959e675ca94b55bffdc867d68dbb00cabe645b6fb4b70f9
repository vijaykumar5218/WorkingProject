(function () {
  "use strict";

  function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == typeof value && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }

  function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

  function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }

  function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

  function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return typeof key === "symbol" ? key : String(key); }

  function _toPrimitive(input, hint) { if (typeof input !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (typeof res !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

  function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }

  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }

  function _possibleConstructorReturn(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }

  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

  (self["webpackChunkmyvoyage"] = self["webpackChunkmyvoyage"] || []).push([["node_modules_capacitor-community_firebase-analytics_dist_esm_web_js"], {
    /***/
    32325:
    /*!******************************************************************************!*\
      !*** ./node_modules/@capacitor-community/firebase-analytics/dist/esm/web.js ***!
      \******************************************************************************/

    /***/
    function _(__unused_webpack_module, __webpack_exports__, __webpack_require__) {
      __webpack_require__.r(__webpack_exports__);
      /* harmony export */


      __webpack_require__.d(__webpack_exports__, {
        /* harmony export */
        "FirebaseAnalyticsWeb": function FirebaseAnalyticsWeb() {
          return (
            /* binding */
            _FirebaseAnalyticsWeb
          );
        }
        /* harmony export */

      });
      /* harmony import */


      var _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
      /*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */
      19369);
      /* harmony import */


      var _capacitor_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
      /*! @capacitor/core */
      95010);

      var _FirebaseAnalyticsWeb = /*#__PURE__*/function (_capacitor_core__WEBP) {
        _inherits(_FirebaseAnalyticsWeb, _capacitor_core__WEBP);

        var _super = _createSuper(_FirebaseAnalyticsWeb);

        function _FirebaseAnalyticsWeb() {
          var _this10;

          _classCallCheck(this, _FirebaseAnalyticsWeb);

          _this10 = _super.call(this);
          _this10.not_supported_mssg = "This method is not supported";
          _this10.options_missing_mssg = "Firebase options are missing";
          _this10.duplicate_app_mssg = "Firebase app already exists";
          _this10.analytics_missing_mssg = "Firebase analytics is not initialized. Make sure initializeFirebase() is called once";
          _this10.scripts = [{
            key: "firebase-app",
            src: "https://www.gstatic.com/firebasejs/8.2.3/firebase-app.js"
          }, {
            key: "firebase-ac",
            src: "https://www.gstatic.com/firebasejs/8.2.3/firebase-analytics.js"
          }];
          _this10.ready = new Promise(function (resolve) {
            return _this10.readyResolver = resolve;
          });

          _this10.configure();

          return _this10;
        }
        /**
         * Configure and Initialize FirebaseApp if not present
         * @param options - web app's Firebase configuration
         * @returns firebase analytics object reference
         * Platform: Web
         */


        _createClass(_FirebaseAnalyticsWeb, [{
          key: "initializeFirebase",
          value: function initializeFirebase(options) {
            var _this = this;

            return new Promise( /*#__PURE__*/function () {
              var _ref = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(resolve, reject) {
                var app;
                return _regeneratorRuntime().wrap(function _callee$(_context) {
                  while (1) switch (_context.prev = _context.next) {
                    case 0:
                      _context.next = 2;
                      return _this.ready;

                    case 2:
                      if (!_this.hasFirebaseInitialized()) {
                        _context.next = 5;
                        break;
                      }

                      reject(_this.duplicate_app_mssg);
                      return _context.abrupt("return");

                    case 5:
                      if (options) {
                        _context.next = 8;
                        break;
                      }

                      reject(_this.options_missing_mssg);
                      return _context.abrupt("return");

                    case 8:
                      app = window.firebase.initializeApp(options);
                      _this.analyticsRef = app.analytics();
                      resolve(_this.analyticsRef);

                    case 11:
                    case "end":
                      return _context.stop();
                  }
                }, _callee);
              }));

              return function (_x, _x2) {
                return _ref.apply(this, arguments);
              };
            }());
          }
          /**
           * Sets the user ID property.
           * @param options - userId: unique identifier of the user to log
           * Platform: Web/Android/iOS
           */

        }, {
          key: "setUserId",
          value: function setUserId(options) {
            var _this2 = this;

            return new Promise( /*#__PURE__*/function () {
              var _ref2 = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(resolve, reject) {
                var _ref9, userId;

                return _regeneratorRuntime().wrap(function _callee2$(_context2) {
                  while (1) switch (_context2.prev = _context2.next) {
                    case 0:
                      _context2.next = 2;
                      return _this2.ready;

                    case 2:
                      if (_this2.analyticsRef) {
                        _context2.next = 5;
                        break;
                      }

                      reject(_this2.analytics_missing_mssg);
                      return _context2.abrupt("return");

                    case 5:
                      _ref9 = options || {
                        userId: undefined
                      }, userId = _ref9.userId;

                      if (userId) {
                        _context2.next = 9;
                        break;
                      }

                      reject("userId property is missing");
                      return _context2.abrupt("return");

                    case 9:
                      _this2.analyticsRef.setUserId(userId);

                      resolve();

                    case 11:
                    case "end":
                      return _context2.stop();
                  }
                }, _callee2);
              }));

              return function (_x3, _x4) {
                return _ref2.apply(this, arguments);
              };
            }());
          }
          /**
           * Sets a user property to a given value.
           * @param options - name: The name of the user property to set.
           *                  value: The value of the user property.
           * Platform: Web/Android/iOS
           */

        }, {
          key: "setUserProperty",
          value: function setUserProperty(options) {
            var _this3 = this;

            return new Promise( /*#__PURE__*/function () {
              var _ref3 = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(resolve, reject) {
                var _ref10, name, value, property;

                return _regeneratorRuntime().wrap(function _callee3$(_context3) {
                  while (1) switch (_context3.prev = _context3.next) {
                    case 0:
                      _context3.next = 2;
                      return _this3.ready;

                    case 2:
                      if (_this3.analyticsRef) {
                        _context3.next = 5;
                        break;
                      }

                      reject(_this3.analytics_missing_mssg);
                      return _context3.abrupt("return");

                    case 5:
                      _ref10 = options || {
                        name: undefined,
                        value: undefined
                      }, name = _ref10.name, value = _ref10.value;

                      if (name) {
                        _context3.next = 9;
                        break;
                      }

                      reject("name property is missing");
                      return _context3.abrupt("return");

                    case 9:
                      if (value) {
                        _context3.next = 12;
                        break;
                      }

                      reject("value property is missing");
                      return _context3.abrupt("return");

                    case 12:
                      property = {};
                      property[name] = value;

                      _this3.analyticsRef.setUserProperties(property);

                      resolve();

                    case 16:
                    case "end":
                      return _context3.stop();
                  }
                }, _callee3);
              }));

              return function (_x5, _x6) {
                return _ref3.apply(this, arguments);
              };
            }());
          }
          /**
           * Retrieves the app instance id from the service.
           * @returns - instanceId: current instance if of the app
           * Platform: Web/Android/iOS
           */

        }, {
          key: "getAppInstanceId",
          value: function getAppInstanceId() {
            return new Promise(function (resolve, _reject) {
              return resolve;
            });
          }
          /**
           * Sets the current screen name, which specifies the current visual context in your app.
           * @param options - screenName: the activity to which the screen name and class name apply.
           *                  nameOverride: the name of the current screen. Set to null to clear the current screen name.
           * Platform: Android/iOS
           */

        }, {
          key: "setScreenName",
          value: function setScreenName(_options) {
            return new Promise(function (resolve, _reject) {
              return resolve;
            });
          }
          /**
           * Clears all analytics data for this app from the device and resets the app instance id.
           * Platform: Android/iOS
           */

        }, {
          key: "reset",
          value: function reset() {
            return new Promise(function (resolve, _reject) {
              return resolve;
            });
          }
          /**
           * Logs an app event.
           * @param options - name: unique name of the event
           *                  params: the map of event parameters.
           * Platform: Web/Android/iOS
           */

        }, {
          key: "logEvent",
          value: function logEvent(options) {
            var _this4 = this;

            return new Promise( /*#__PURE__*/function () {
              var _ref4 = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(resolve, reject) {
                var _ref11, name, params;

                return _regeneratorRuntime().wrap(function _callee4$(_context4) {
                  while (1) switch (_context4.prev = _context4.next) {
                    case 0:
                      _context4.next = 2;
                      return _this4.ready;

                    case 2:
                      if (_this4.analyticsRef) {
                        _context4.next = 5;
                        break;
                      }

                      reject(_this4.analytics_missing_mssg);
                      return _context4.abrupt("return");

                    case 5:
                      _ref11 = options || {
                        name: undefined,
                        params: undefined
                      }, name = _ref11.name, params = _ref11.params;

                      if (name) {
                        _context4.next = 9;
                        break;
                      }

                      reject("name property is missing");
                      return _context4.abrupt("return");

                    case 9:
                      _this4.analyticsRef.logEvent(name, params);

                      resolve();

                    case 11:
                    case "end":
                      return _context4.stop();
                  }
                }, _callee4);
              }));

              return function (_x7, _x8) {
                return _ref4.apply(this, arguments);
              };
            }());
          }
          /**
           * Sets whether analytics collection is enabled for this app on this device.
           * @param options - enabled: boolean true/false to enable/disable logging
           * Platform: Web/Android/iOS
           */

        }, {
          key: "setCollectionEnabled",
          value: function setCollectionEnabled(options) {
            var _this5 = this;

            return new Promise( /*#__PURE__*/function () {
              var _ref5 = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5(resolve, reject) {
                var _ref12, enabled;

                return _regeneratorRuntime().wrap(function _callee5$(_context5) {
                  while (1) switch (_context5.prev = _context5.next) {
                    case 0:
                      _context5.next = 2;
                      return _this5.ready;

                    case 2:
                      if (_this5.analyticsRef) {
                        _context5.next = 5;
                        break;
                      }

                      reject(_this5.analytics_missing_mssg);
                      return _context5.abrupt("return");

                    case 5:
                      _ref12 = options || {
                        enabled: false
                      }, enabled = _ref12.enabled;

                      _this5.analyticsRef.setAnalyticsCollectionEnabled(enabled);

                      resolve();

                    case 8:
                    case "end":
                      return _context5.stop();
                  }
                }, _callee5);
              }));

              return function (_x9, _x10) {
                return _ref5.apply(this, arguments);
              };
            }());
          }
          /**
           * Sets the duration of inactivity that terminates the current session.
           * @param options - duration: duration of inactivity
           * Platform: Android/iOS
           */

        }, {
          key: "setSessionTimeoutDuration",
          value: function setSessionTimeoutDuration(_options) {
            var _this11 = this;

            return new Promise(function (_resolve, reject) {
              reject(_this11.not_supported_mssg);
            });
          }
          /**
           * Returns analytics reference object
           */

        }, {
          key: "remoteConfig",
          get: function get() {
            return this.analyticsRef;
          }
        }, {
          key: "enable",
          value: function enable() {
            var _this6 = this;

            return new Promise( /*#__PURE__*/function () {
              var _ref6 = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee6(resolve, reject) {
                return _regeneratorRuntime().wrap(function _callee6$(_context6) {
                  while (1) switch (_context6.prev = _context6.next) {
                    case 0:
                      _context6.next = 2;
                      return _this6.ready;

                    case 2:
                      if (_this6.analyticsRef) {
                        _context6.next = 5;
                        break;
                      }

                      reject(_this6.analytics_missing_mssg);
                      return _context6.abrupt("return");

                    case 5:
                      _this6.analyticsRef.setAnalyticsCollectionEnabled(true);

                      resolve();

                    case 7:
                    case "end":
                      return _context6.stop();
                  }
                }, _callee6);
              }));

              return function (_x11, _x12) {
                return _ref6.apply(this, arguments);
              };
            }());
          }
        }, {
          key: "disable",
          value: function disable() {
            var _this7 = this;

            return new Promise( /*#__PURE__*/function () {
              var _ref7 = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee7(resolve, reject) {
                return _regeneratorRuntime().wrap(function _callee7$(_context7) {
                  while (1) switch (_context7.prev = _context7.next) {
                    case 0:
                      _context7.next = 2;
                      return _this7.ready;

                    case 2:
                      if (_this7.analyticsRef) {
                        _context7.next = 5;
                        break;
                      }

                      reject(_this7.analytics_missing_mssg);
                      return _context7.abrupt("return");

                    case 5:
                      _this7.analyticsRef.setAnalyticsCollectionEnabled(false);

                      resolve();

                    case 7:
                    case "end":
                      return _context7.stop();
                  }
                }, _callee7);
              }));

              return function (_x13, _x14) {
                return _ref7.apply(this, arguments);
              };
            }());
          }
          /**
           * Ready resolver to check and load firebase analytics
           */

        }, {
          key: "configure",
          value: function configure() {
            var _this8 = this;

            return (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee8() {
              var interval;
              return _regeneratorRuntime().wrap(function _callee8$(_context8) {
                while (1) switch (_context8.prev = _context8.next) {
                  case 0:
                    _context8.prev = 0;
                    _context8.next = 3;
                    return _this8.loadScripts();

                  case 3:
                    if (window.firebase && window.firebase.analytics && _this8.hasFirebaseInitialized()) {
                      _this8.analyticsRef = window.firebase.analytics();
                    }

                    _context8.next = 9;
                    break;

                  case 6:
                    _context8.prev = 6;
                    _context8.t0 = _context8["catch"](0);
                    throw _context8.t0;

                  case 9:
                    interval = setInterval(function () {
                      if (!window.firebase) {
                        return;
                      }

                      clearInterval(interval);

                      _this8.readyResolver();
                    }, 50);

                  case 10:
                  case "end":
                    return _context8.stop();
                }
              }, _callee8, null, [[0, 6]]);
            }))();
          }
          /**
           * Check for existing loaded script and load new scripts
           */

        }, {
          key: "loadScripts",
          value: function loadScripts() {
            var _this9 = this;

            var firebaseAppScript = this.scripts[0];
            var firebaseAnalyticsScript = this.scripts[1];
            return new Promise( /*#__PURE__*/function () {
              var _ref8 = (0, _Users_vijay_a_Documents_GitHub_MYVOYAGE_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__["default"])( /*#__PURE__*/_regeneratorRuntime().mark(function _callee9(resolve, _reject) {
                var scripts;
                return _regeneratorRuntime().wrap(function _callee9$(_context9) {
                  while (1) switch (_context9.prev = _context9.next) {
                    case 0:
                      scripts = _this9.scripts.map(function (script) {
                        return script.key;
                      });

                      if (!(document.getElementById(scripts[0]) && document.getElementById(scripts[1]))) {
                        _context9.next = 3;
                        break;
                      }

                      return _context9.abrupt("return", resolve(null));

                    case 3:
                      _context9.next = 5;
                      return _this9.loadScript(firebaseAppScript.key, firebaseAppScript.src);

                    case 5:
                      _context9.next = 7;
                      return _this9.loadScript(firebaseAnalyticsScript.key, firebaseAnalyticsScript.src);

                    case 7:
                      resolve(null);

                    case 8:
                    case "end":
                      return _context9.stop();
                  }
                }, _callee9);
              }));

              return function (_x15, _x16) {
                return _ref8.apply(this, arguments);
              };
            }());
          }
          /**
           * Loaded single script with provided id and source
           * @param id - unique identifier of the script
           * @param src - source of the script
           */

        }, {
          key: "loadScript",
          value: function loadScript(id, src) {
            return new Promise(function (resolve, reject) {
              var file = document.createElement("script");
              file.type = "text/javascript";
              file.src = src;
              file.id = id;
              file.onload = resolve;
              file.onerror = reject;
              document.querySelector("head").appendChild(file);
            });
          }
          /**
           * Returns true/false if firebase object reference exists inside window
           */

        }, {
          key: "hasFirebaseInitialized",
          value: function hasFirebaseInitialized() {
            if (!window.firebase) {
              return false;
            }

            var firebaseApps = window.firebase.apps;

            if (firebaseApps && firebaseApps.length === 0) {
              return false;
            }

            return true;
          }
        }]);

        return _FirebaseAnalyticsWeb;
      }(_capacitor_core__WEBPACK_IMPORTED_MODULE_1__.WebPlugin);
      /***/

    }
  }]);
})();
//# sourceMappingURL=node_modules_capacitor-community_firebase-analytics_dist_esm_web_js-es5.js.map