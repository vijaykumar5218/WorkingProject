{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FooterType } from '@shared-lib/modules/footer/constants/footerType.enum';\nimport * as bioText from './constants/biometrics-content.json';\nimport { HeaderType } from '@shared-lib/constants/headerType.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../shared/service/authentication/vault.service\";\nimport * as i2 from \"@shared-lib/services/header-footer-type/headerFooterType.service\";\nimport * as i3 from \"@mobile/app/modules/shared/service/authentication/authentication.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/forms\";\nexport let BiometricsPage = /*#__PURE__*/(() => {\n  class BiometricsPage {\n    constructor(vaultService, headerFooterService, authService, alertController, platform) {\n      this.vaultService = vaultService;\n      this.headerFooterService = headerFooterService;\n      this.authService = authService;\n      this.alertController = alertController;\n      this.platform = platform;\n      this.pageText = bioText;\n      this.faceIDEnabled = false;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.bioIcon = yield this.authService.getBiometricsIconName();\n        this.bioText = yield this.authService.getBiometricsLabel();\n      });\n    }\n\n    ionViewWillEnter() {\n      this.headerFooterService.publishType({\n        type: HeaderType.navbar,\n        actionOption: {\n          displayLogo: true,\n          headername: ''\n        }\n      }, {\n        type: FooterType.none\n      });\n    }\n\n    showError() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          header: this.pageText.biometricsError,\n          buttons: ['OK']\n        });\n        alert.present();\n      });\n    }\n\n    continueClicked() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const result = yield this.biometricsChanged();\n\n        if (!result) {\n          this.showError();\n          return;\n        }\n\n        if (this.faceIDEnabled) {\n          if (this.platform.is('ios')) {\n            yield this.vaultService.lockVault();\n            yield this.vaultService.unlockVault();\n          }\n\n          const isLocked = yield this.vaultService.isLocked();\n\n          if (!isLocked) {\n            this.authService.navigateToLoggedInLanding();\n          }\n        } else {\n          this.authService.navigateToLoggedInLanding();\n        }\n      });\n    }\n\n    biometricsChanged() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.faceIDEnabled) {\n          const result = yield this.vaultService.enableFaceID();\n\n          if (result) {\n            this.vaultService.setDefaultFaceIDDisabled(false);\n          } else {\n            this.faceIDEnabled = false;\n          }\n\n          return result;\n        } else {\n          this.vaultService.disableFaceID();\n          this.vaultService.setDefaultFaceIDDisabled(true);\n          return true;\n        }\n      });\n    }\n\n  }\n\n  BiometricsPage.ɵfac = function BiometricsPage_Factory(t) {\n    return new (t || BiometricsPage)(i0.ɵɵdirectiveInject(i1.VaultService), i0.ɵɵdirectiveInject(i2.HeaderFooterTypeService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.AlertController), i0.ɵɵdirectiveInject(i4.Platform));\n  };\n\n  BiometricsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BiometricsPage,\n    selectors: [[\"app-biometrics\"]],\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"header\"], [1, \"sub-header\"], [1, \"toggle-row\"], [\"alt\", \"biometrics\", 3, \"src\"], [1, \"bio-name\"], [1, \"toggle-col\"], [\"id\", \"biometrics-toggle\", 1, \"biometrics-toggle\", 3, \"ngModel\", \"ngModelChange\"], [1, \"continue-row\"], [\"name\", \"submit\", \"shape\", \"round\", \"expand\", \"block\", \"type\", \"submit\", \"color\", \"btncolor\", \"id\", \"continue-btn\", 1, \"continue\", 3, \"click\"]],\n    template: function BiometricsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-grid\");\n        i0.ɵɵelementStart(1, \"ion-row\");\n        i0.ɵɵelementStart(2, \"ion-col\");\n        i0.ɵɵelementStart(3, \"ion-text\", 0);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-row\");\n        i0.ɵɵelementStart(6, \"ion-col\");\n        i0.ɵɵelementStart(7, \"ion-text\", 1);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-row\", 2);\n        i0.ɵɵelementStart(10, \"ion-col\");\n        i0.ɵɵelement(11, \"img\", 3);\n        i0.ɵɵelementStart(12, \"ion-text\", 4);\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"ion-col\", 5);\n        i0.ɵɵelementStart(15, \"ion-toggle\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function BiometricsPage_Template_ion_toggle_ngModelChange_15_listener($event) {\n          return ctx.faceIDEnabled = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-row\", 7);\n        i0.ɵɵelementStart(17, \"ion-col\");\n        i0.ɵɵelementStart(18, \"ion-button\", 8);\n        i0.ɵɵlistener(\"click\", function BiometricsPage_Template_ion_button_click_18_listener() {\n          return ctx.continueClicked();\n        });\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageText.header);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageText.subHeader);\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.bioIcon, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.bioText);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.faceIDEnabled);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.pageText.continue, \" \");\n      }\n    },\n    directives: [i4.IonGrid, i4.IonRow, i4.IonCol, i4.IonText, i4.IonToggle, i4.BooleanValueAccessor, i5.NgControlStatus, i5.NgModel, i4.IonButton],\n    styles: [\"[_nghost-%COMP%]{background-color:var(--primary-colors-voya-white)}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]{margin:20px;display:flex;flex-direction:column}[_nghost-%COMP%]   ion-text[_ngcontent-%COMP%]{color:var(--primary-colors-voya-black)}[_nghost-%COMP%]   ion-text.header[_ngcontent-%COMP%]{font-size:24px;font-weight:bold;text-align:center;display:block}[_nghost-%COMP%]   ion-text.sub-header[_ngcontent-%COMP%]{font-size:18px}[_nghost-%COMP%]   ion-text.bio-name[_ngcontent-%COMP%]{vertical-align:super;margin-left:12px}[_nghost-%COMP%]   .toggle-row[_ngcontent-%COMP%]{border-bottom:1px solid var(--border-light-grey);margin-top:40px;padding-bottom:12px}[_nghost-%COMP%]   .toggle-row[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:24px;height:24px}[_nghost-%COMP%]   .toggle-row[_ngcontent-%COMP%]   ion-toggle[_ngcontent-%COMP%]{float:right;margin-right:4px}[_nghost-%COMP%]   .toggle-row[_ngcontent-%COMP%]   .toggle-col[_ngcontent-%COMP%]{padding-top:10px}[_nghost-%COMP%]   .continue-row[_ngcontent-%COMP%]{height:100%}[_nghost-%COMP%]   .continue-row[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{display:block;margin:auto;width:220px;position:absolute;bottom:30%;left:50%;transform:translate(-50%)}\"]\n  });\n  return BiometricsPage;\n})();","map":null,"metadata":{},"sourceType":"module"}