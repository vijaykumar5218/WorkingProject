{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ConsentType } from '@shared-lib/services/consent/constants/consentType.enum';\nimport * as pageText from './constants/text-data.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@shared-lib/services/consent/consent.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@shared-lib/services/benefits/benefits.service\";\nimport * as i5 from \"@shared-lib/services/utility/utility.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../modal-header/modal-header.component\";\nimport * as i8 from \"@angular/forms\";\n\nfunction MedicalConsentPage_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"h6\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"p\", 11);\n    i0.ɵɵelement(4, \"p\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const part_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(part_r1 == null ? null : part_r1.disclosure_title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", part_r1 == null ? null : part_r1.disclosure_description_1, i0.ɵɵsanitizeHtml);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"innerHTML\", part_r1 == null ? null : part_r1.disclosure_description_2, i0.ɵɵsanitizeHtml);\n  }\n}\n\nexport let MedicalConsentPage = /*#__PURE__*/(() => {\n  class MedicalConsentPage {\n    constructor(modalController, consentService, loadingController, router, benefitsService, sharedUtilityService, location) {\n      this.modalController = modalController;\n      this.consentService = consentService;\n      this.loadingController = loadingController;\n      this.router = router;\n      this.benefitsService = benefitsService;\n      this.sharedUtilityService = sharedUtilityService;\n      this.location = location;\n      this.pageText = pageText;\n      this.radioSelection = 'YES';\n      this.hasScrolledToBottom = false;\n    }\n\n    ngOnInit() {\n      this.isWeb = this.sharedUtilityService.getIsWeb();\n    }\n\n    saveConsent() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const loading = yield _this.loadingController.create({\n          translucent: true\n        });\n        loading.present();\n\n        if (_this.radioSelection === 'YES') {\n          yield _this.consentService.setConsent(ConsentType.MEDICAL, true);\n\n          _this.consentService.getMedicalConsent(true);\n\n          if (_this.completion) {\n            _this.completion();\n          }\n        } else {\n          if (!_this.back) {\n            if (_this.isWeb) {\n              _this.router.navigateByUrl('/coverages/all-coverages/plans');\n            } else {\n              _this.router.navigateByUrl('/coverages/coverage-tabs/plans');\n\n              _this.benefitsService.publishSelectedTab('plans');\n            }\n          } else {\n            _this.location.back();\n          }\n        }\n\n        loading.dismiss();\n\n        _this.modalController.dismiss();\n      })();\n    }\n\n    onScroll(event) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        if (_this2.hasScrolledToBottom) {\n          return;\n        }\n\n        const scrollElement = yield event.target.getScrollElement();\n        const scrollHeight = scrollElement.scrollHeight - scrollElement.clientHeight;\n        const currentScrollDepth = scrollElement.scrollTop;\n        const triggerDepth = scrollHeight / 100 * 95;\n\n        if (currentScrollDepth > triggerDepth) {\n          _this2.hasScrolledToBottom = true;\n        }\n      })();\n    }\n\n  }\n\n  MedicalConsentPage.ɵfac = function MedicalConsentPage_Factory(t) {\n    return new (t || MedicalConsentPage)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.ConsentService), i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.BenefitsService), i0.ɵɵdirectiveInject(i5.SharedUtilityService), i0.ɵɵdirectiveInject(i6.Location));\n  };\n\n  MedicalConsentPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MedicalConsentPage,\n    selectors: [[\"app-medical-consent\"]],\n    inputs: {\n      back: \"back\",\n      completion: \"completion\"\n    },\n    decls: 23,\n    vars: 13,\n    consts: [[3, \"headerText\"], [3, \"scrollEvents\", \"ionScroll\"], [1, \"main-content\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [1, \"options\", 3, \"ngClass\"], [1, \"header\"], [\"mode\", \"md\", 3, \"ngModel\", \"ngModelChange\"], [\"lines\", \"none\"], [\"value\", \"NO\"], [\"value\", \"YES\"], [\"size\", \"small\", \"id\", \"save-button\", \"name\", \"submit\", \"shape\", \"round\", \"expand\", \"block\", \"type\", \"submit\", \"color\", \"btncolor\", 1, \"font-18\", \"save-button\", 3, \"click\"], [3, \"innerHTML\"]],\n    template: function MedicalConsentPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-modal-header\", 0);\n        i0.ɵɵelementStart(1, \"ion-content\", 1);\n        i0.ɵɵlistener(\"ionScroll\", function MedicalConsentPage_Template_ion_content_ionScroll_1_listener($event) {\n          return ctx.onScroll($event);\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, MedicalConsentPage_div_3_Template, 5, 3, \"div\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"ion-row\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-row\");\n        i0.ɵɵelementStart(8, \"ion-radio-group\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function MedicalConsentPage_Template_ion_radio_group_ngModelChange_8_listener($event) {\n          return ctx.radioSelection = $event;\n        });\n        i0.ɵɵelementStart(9, \"ion-row\");\n        i0.ɵɵelementStart(10, \"ion-col\");\n        i0.ɵɵelementStart(11, \"ion-item\", 7);\n        i0.ɵɵelement(12, \"ion-radio\", 8);\n        i0.ɵɵelementStart(13, \"ion-label\");\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-col\");\n        i0.ɵɵelementStart(16, \"ion-item\", 7);\n        i0.ɵɵelement(17, \"ion-radio\", 9);\n        i0.ɵɵelementStart(18, \"ion-label\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-row\");\n        i0.ɵɵelementStart(21, \"ion-button\", 10);\n        i0.ɵɵlistener(\"click\", function MedicalConsentPage_Template_ion_button_click_21_listener() {\n          return ctx.saveConsent();\n        });\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"headerText\", ctx.pageText.authToDisclose);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"scrollEvents\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.isWeb ? \"web-main-content\" : \"mobile-main-content\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contentData == null ? null : ctx.contentData.disclosure_parts);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.isWeb ? \"web-options\" : \"mobile-options\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.contentData == null ? null : ctx.contentData.auth_Text);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.radioSelection);\n        i0.ɵɵadvance(4);\n        i0.ɵɵattribute(\"disabled\", ctx.hasScrolledToBottom ? null : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.pageText.no);\n        i0.ɵɵadvance(3);\n        i0.ɵɵattribute(\"disabled\", ctx.hasScrolledToBottom ? null : \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.pageText.yes);\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"disabled\", ctx.hasScrolledToBottom ? null : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.pageText.submit, \" \");\n      }\n    },\n    directives: [i7.ModalHeaderComponent, i1.IonContent, i6.NgClass, i6.NgForOf, i1.IonRow, i1.IonRadioGroup, i1.SelectValueAccessor, i8.NgControlStatus, i8.NgModel, i1.IonCol, i1.IonItem, i1.IonRadio, i1.RadioValueAccessor, i1.IonLabel, i1.IonButton],\n    styles: [\"ion-content[_ngcontent-%COMP%]{background-color:var(--ion-color-white)}.options[_ngcontent-%COMP%]{transform:translate(0);position:fixed;bottom:0;width:100%;height:235px;padding:20px;box-shadow:0 -4px 4px #00000040;background-color:var(--white)}.options[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-size:16px;font-weight:bold;letter-spacing:.02px;color:var(--primary-colors-voya-black);text-align:center}.options[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]{background-color:var(--white)}.main-content[_ngcontent-%COMP%]{background-color:#fff;padding:20px}.mobile-main-content[_ngcontent-%COMP%]{margin-bottom:235px}.web-main-content[_ngcontent-%COMP%]{margin-top:40px;margin-bottom:320px}.web-options[_ngcontent-%COMP%]{margin-bottom:95px}ion-radio-group[_ngcontent-%COMP%]{margin:auto}ion-radio-group[_ngcontent-%COMP%]   ion-radio[_ngcontent-%COMP%]{margin-right:12px;--color: var(--primary-colors-voya-dark-blue);--color-checked: var(--primary-colors-voya-dark-blue)}#save-button[_ngcontent-%COMP%]{margin:auto auto 30px}\"]\n  });\n  return MedicalConsentPage;\n})();","map":null,"metadata":{},"sourceType":"module"}