{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ElementRef, EventEmitter } from '@angular/core';\nimport * as chartText from '@shared-lib/components/coverages/constants/chartData.json';\nimport moment from 'moment';\nimport { DateRangeFilterComponent } from './date-range-filter/date-range-filter.component';\nimport * as pageText from './constants/pageText.json';\nimport { SortClaimsComponent } from './sort-claims/sort-claims.component';\nimport { FilterPopoverComponent } from '../../../filter-popover/filter-popover.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/benefits/benefits.service\";\nimport * as i2 from \"@shared-lib/services/consent/consent.service\";\nimport * as i3 from \"@shared-lib/services/utility/utility.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../../consent-required/consent-required.component\";\nimport * as i7 from \"../../../loading/loading.component\";\nimport * as i8 from \"../../med-disclaimer/med-disclaimer.component\";\nimport * as i9 from \"@angular/forms\";\nconst _c0 = [\"topmostElement\"];\n\nfunction PlanTransactionsComponent_app_consent_required_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-consent-required\", 4);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"back\", ctx_r1.back);\n  }\n}\n\nfunction PlanTransactionsComponent_div_4_ion_text_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-text\", 19);\n    i0.ɵɵlistener(\"click\", function PlanTransactionsComponent_div_4_ion_text_13_Template_ion_text_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.opnDateRangeFilter($event);\n    });\n    i0.ɵɵelementStart(1, \"span\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"ion-icon\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r7 = ctx.$implicit;\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"hidden\", data_r7.id != ctx_r4.selectedRangeType);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", data_r7.value, \" \");\n  }\n}\n\nfunction PlanTransactionsComponent_div_4_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵelementStart(2, \"ion-text\", 13);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-datetime\", 24);\n    i0.ɵɵlistener(\"ngModelChange\", function PlanTransactionsComponent_div_4_div_14_Template_ion_datetime_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return ctx_r10.fromDate = $event;\n    })(\"ionChange\", function PlanTransactionsComponent_div_4_div_14_Template_ion_datetime_ionChange_4_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext(2);\n      return ctx_r12.customDateRange(ctx_r12.fromDate, ctx_r12.toDate);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"ion-icon\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 23);\n    i0.ɵɵelementStart(7, \"ion-text\", 13);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-datetime\", 26);\n    i0.ɵɵlistener(\"ngModelChange\", function PlanTransactionsComponent_div_4_div_14_Template_ion_datetime_ngModelChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.toDate = $event;\n    })(\"ionChange\", function PlanTransactionsComponent_div_4_div_14_Template_ion_datetime_ionChange_9_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r14 = i0.ɵɵnextContext(2);\n      return ctx_r14.customDateRange(ctx_r14.fromDate, ctx_r14.toDate);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(10, \"ion-icon\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r5.filterContent.fromTxt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.fromDate);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r5.filterContent.toTxt);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.toDate);\n  }\n}\n\nfunction PlanTransactionsComponent_div_4_div_17_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 28);\n    i0.ɵɵelementStart(1, \"span\", 29);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r15 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(3, 1, data_r15 == null ? null : data_r15.date, \"MMMM y\"), \" \");\n  }\n}\n\nfunction PlanTransactionsComponent_div_4_div_17_ion_list_2_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"ion-row\");\n    i0.ɵɵelementStart(2, \"ion-col\", 37);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-row\");\n    i0.ɵɵelementStart(5, \"ion-col\", 38);\n    i0.ɵɵtext(6);\n    i0.ɵɵpipe(7, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const info_r19 = i0.ɵɵnextContext().$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r20.contentP.drugNames, \" \", info_r19.drugName, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r20.contentP.lastFilled, \" \", info_r19.lastFilledDate ? i0.ɵɵpipeBind2(7, 4, info_r19.lastFilledDate, \"MMMM d, y\") : ctx_r20.filterContent.na, \" \");\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    background: a0\n  };\n};\n\nfunction PlanTransactionsComponent_div_4_div_17_ion_list_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵelementStart(1, \"ion-row\");\n    i0.ɵɵelementStart(2, \"ion-col\", 30);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ion-col\", 31);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-row\");\n    i0.ɵɵelementStart(8, \"ion-col\", 32);\n    i0.ɵɵtext(9);\n    i0.ɵɵpipe(10, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"ion-col\", 33);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, PlanTransactionsComponent_div_4_div_17_ion_list_2_div_13_Template, 8, 7, \"div\", 3);\n    i0.ɵɵelementStart(14, \"ion-row\");\n    i0.ɵɵelement(15, \"div\", 34);\n    i0.ɵɵelementStart(16, \"ion-col\", 35);\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"hr\", 36);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const info_r19 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", info_r19.providerName, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind3(6, 8, -info_r19.outOfPocketCost, \"USD\", \"symbol\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(10, 12, info_r19.serviceDate, \"MMMM d, y\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.contentP.myBill, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", info_r19.serviceName === \"genericDrugs\" || info_r19.serviceName === \"preferredDrugs\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(15, _c1, ctx_r17.contentP.colors[info_r19.serviceName]));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r17.contentP.outNetworkCostNames[info_r19.serviceName], \" \", info_r19.inNetwork == true ? \"(\" + ctx_r17.contentP.inNetwork + \")\" : \"(\" + ctx_r17.contentP.outOfNetwork + \")\", \" \");\n  }\n}\n\nfunction PlanTransactionsComponent_div_4_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, PlanTransactionsComponent_div_4_div_17_div_1_Template, 4, 4, \"div\", 27);\n    i0.ɵɵtemplate(2, PlanTransactionsComponent_div_4_div_17_ion_list_2_Template, 19, 17, \"ion-list\", 18);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r15 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (data_r15 == null ? null : data_r15.date) && (data_r15 == null ? null : data_r15.name == null ? null : data_r15.name.length));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", data_r15.name);\n  }\n}\n\nfunction PlanTransactionsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 5);\n    i0.ɵɵelementStart(2, \"div\", 6);\n    i0.ɵɵelementStart(3, \"ion-button\", 7, 8);\n    i0.ɵɵlistener(\"click\", function PlanTransactionsComponent_div_4_Template_ion_button_click_3_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.opnFilter($event);\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelement(6, \"ion-icon\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function PlanTransactionsComponent_div_4_Template_ion_button_click_7_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.opnSorting($event);\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵelement(9, \"ion-icon\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 12);\n    i0.ɵɵelementStart(11, \"ion-text\", 13);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, PlanTransactionsComponent_div_4_ion_text_13_Template, 4, 2, \"ion-text\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, PlanTransactionsComponent_div_4_div_14_Template, 11, 4, \"div\", 15);\n    i0.ɵɵelementStart(15, \"div\", 16);\n    i0.ɵɵelementStart(16, \"app-loading\", 17);\n    i0.ɵɵtemplate(17, PlanTransactionsComponent_div_4_div_17_Template, 3, 2, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(18, \"app-med-disclaimer\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.filterContent.filterLable, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.filterContent.sortLable, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r2.filterContent.dateRangeLbl, \" : \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.filterContent.dateRangeOptions);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedRangeType == \"custom\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"loading\", !ctx_r2.isDataLoaded);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.filteredGroupData);\n  }\n}\n\nexport let PlanTransactionsComponent = /*#__PURE__*/(() => {\n  class PlanTransactionsComponent {\n    constructor(benefitServices, consentService, utilityService, popoverCtrl) {\n      this.benefitServices = benefitServices;\n      this.consentService = consentService;\n      this.utilityService = utilityService;\n      this.popoverCtrl = popoverCtrl;\n      this.back = false;\n      this.consent = new EventEmitter();\n      this.contentP = chartText.default;\n      this.groupData = [];\n      this.filteredGroupData = [];\n      this.hasConsent = false;\n      this.filterContent = pageText.default;\n      this.dateRangeList = this.filterContent.dateRangeOptions;\n      this.fromDate = '';\n      this.toDate = '';\n      this.customAlertOptions = {\n        header: this.filterContent.dateRangeLbl,\n        translucent: true,\n        cssClass: 'pop-over-class'\n      };\n    }\n\n    ngOnInit() {\n      this.selectedRangeType = 'thisYear';\n      this.isWeb = this.utilityService.getIsWeb();\n      this.getFilterOptions();\n      this.getSortOptions();\n      this.getSectionValue();\n      this.getDateOptions();\n      this.checkAuthorization();\n    }\n\n    getSectionValue() {\n      this.benefitServices.getSectionValues().then(data => {\n        this.filterList = data.filterList;\n        this.sortList = data.sortList;\n      });\n    }\n\n    getFilterOptions() {\n      this.subscriptionFilter = this.benefitServices.currentFilter().subscribe(data => {\n        this.filterData(data);\n        this.storeSelectedFilter = data;\n      });\n    }\n\n    getSortOptions() {\n      this.subscriptionSort = this.benefitServices.currentSort().subscribe(data => {\n        this.sortData(data);\n      });\n    }\n\n    getDateOptions() {\n      this.subscriptionDate = this.benefitServices.currentDateOpt().subscribe(data => {\n        this.selectedRangeType = data;\n        this.gethealthDates();\n      });\n    }\n\n    sortData(data) {\n      if (data == 'asc') {\n        this.setFilteredList();\n        this.filteredGroupData.sort((a, b) => {\n          return new Date(a.date).getTime() - new Date(b.date).getTime();\n        });\n        return this.filteredGroupData.forEach(item => {\n          return item.name.sort((a, b) => new Date(a.serviceDate).getTime() - new Date(b.serviceDate).getTime());\n        });\n      }\n\n      if (data == 'dsc') {\n        this.setFilteredList();\n        this.filteredGroupData.sort((a, b) => {\n          return new Date(b.date).getTime() - new Date(a.date).getTime();\n        });\n        return this.filteredGroupData.forEach(item => {\n          return item.name.sort((a, b) => new Date(b.serviceDate).getTime() - new Date(a.serviceDate).getTime());\n        });\n      }\n\n      if (data == 'low') {\n        this.listWithoutMonth();\n        this.filteredGroupData.forEach(item => {\n          return item.name.sort((a, b) => a.outOfPocketCost - b.outOfPocketCost);\n        });\n      }\n\n      if (data == 'high') {\n        this.listWithoutMonth();\n        this.filteredGroupData.forEach(item => {\n          return item.name.sort((a, b) => b.outOfPocketCost - a.outOfPocketCost);\n        });\n      }\n    }\n\n    setFilteredList() {\n      if (this.storeSelectedFilter.length) {\n        this.filterData(this.storeSelectedFilter);\n      } else {\n        this.filteredGroupData = this.groupData;\n      }\n    }\n\n    listWithoutMonth() {\n      const transactions = [];\n      const mergedArray = [];\n      this.filteredGroupData.forEach((item, i) => {\n        if (i >= 0) transactions.push(...item.name);\n      });\n      mergedArray.push({\n        name: transactions\n      });\n      this.filteredGroupData = mergedArray;\n    }\n\n    filterNetwork(data, el) {\n      let show = false;\n\n      if (data[0].values.length < 1) {\n        show = true;\n      } else {\n        data[0].values.forEach(element => {\n          if (show) {\n            return;\n          }\n\n          if (element.key == 'inNetwork') {\n            show = el.inNetwork == true;\n          }\n\n          if (element.key == 'OutNetwork') {\n            show = el.inNetwork == false;\n          }\n        });\n      }\n\n      return show;\n    }\n\n    filterAllCategoryItem(item, data) {\n      return item.name.filter(el => {\n        const show = this.filterNetwork(data, el);\n\n        if (show) {\n          if (data[1].values.length < 1) {\n            return true;\n          }\n\n          let res = false;\n          data[1].values.forEach(element => {\n            if (element.key == el.serviceName) {\n              res = true;\n            }\n          });\n          return res;\n        }\n\n        return show;\n      });\n    }\n\n    filterData(data) {\n      var _a, _b;\n\n      if (((_a = data[0]) === null || _a === void 0 ? void 0 : _a.values.length) < 1 && ((_b = data[1]) === null || _b === void 0 ? void 0 : _b.values.length) < 1) {\n        this.filteredGroupData = this.groupData;\n        return;\n      }\n\n      const filteredData = [];\n      this.groupData.forEach(item => {\n        const arr = this.filterAllCategoryItem(item, data);\n        return filteredData.push({\n          date: item.date,\n          name: arr\n        });\n      });\n      this.filteredGroupData = filteredData;\n    }\n\n    ionViewWillEnter() {\n      if (!this.consentSubscription) {\n        this.checkAuthorization();\n      }\n    }\n\n    checkAuthorization() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.consentSubscription = this.consentService.getMedicalConsent().subscribe(consent => __awaiter(this, void 0, void 0, function* () {\n          this.hasConsent = consent;\n          console.log('HAS CONSETN: ', this.hasConsent);\n\n          if (this.isWeb) {\n            this.utilityService.scrollToTop(this.topmostElement);\n          }\n\n          if (this.hasConsent) {\n            this.consent.emit(true);\n            this.getSpending();\n          } else {\n            this.consent.emit(false);\n          }\n        }));\n      });\n    }\n\n    gethealthDates() {\n      if (this.selectedRangeType == '30Days') {\n        this.healthDates = {\n          startDate: moment().subtract(30, 'days').format('YYYY-MM-DD'),\n          endDate: moment().format('YYYY-MM-DD')\n        };\n      }\n\n      if (this.selectedRangeType == '3Months') {\n        this.healthDates = {\n          startDate: moment().subtract(90, 'days').format('YYYY-MM-DD'),\n          endDate: moment().format('YYYY-MM-DD')\n        };\n      }\n\n      if (this.selectedRangeType == '6Months') {\n        this.healthDates = {\n          startDate: moment().subtract(180, 'days').format('YYYY-MM-DD'),\n          endDate: moment().format('YYYY-MM-DD')\n        };\n      }\n\n      if (this.selectedRangeType == '12Months') {\n        this.healthDates = {\n          startDate: moment().subtract(360, 'days').format('YYYY-MM-DD'),\n          endDate: moment().format('YYYY-MM-DD')\n        };\n      }\n\n      if (this.selectedRangeType == 'lastYear') {\n        this.healthDates = {\n          startDate: moment().startOf('year').subtract(1, 'years').format('YYYY-MM-DD'),\n          endDate: moment().endOf('year').subtract(1, 'years').format('YYYY-MM-DD')\n        };\n      } else if (this.selectedRangeType == 'thisYear') {\n        this.healthDates = {\n          startDate: moment().startOf('year').format('YYYY-MM-DD'),\n          endDate: moment().endOf('year').format('YYYY-MM-DD')\n        };\n      }\n\n      this.filterByDateRange();\n    }\n\n    filterByDateRange() {\n      const dataWithinDate = [];\n      this.groupData.forEach(item => {\n        const res = item.name.filter(d => {\n          return d.serviceDate >= this.healthDates.startDate && d.serviceDate <= this.healthDates.endDate;\n        });\n        return dataWithinDate.push({\n          date: item.date,\n          name: res\n        });\n      });\n      this.filteredGroupData = dataWithinDate;\n    }\n\n    getSpending() {\n      this.healthDates = {\n        startDate: moment().startOf('year').add(-2, 'years').format('MM/DD/YYYY'),\n        endDate: moment().endOf('year').format('MM/DD/YYYY')\n      };\n      this.benefitServices.fetchSpending(this.healthDates).then(resp => {\n        this.isDataLoaded = true;\n        this.createGroupDetails(resp);\n      }).catch(() => {\n        this.isDataLoaded = true;\n      });\n    }\n\n    createGroupDetails(healthDataResp) {\n      if (healthDataResp) {\n        this.groupData = [];\n        Object.keys(healthDataResp.groupingCategoryDetails).forEach(key => {\n          const data = {};\n          data['date'] = key;\n          data['name'] = [];\n\n          for (const element of healthDataResp.groupingCategoryDetails[key]) {\n            data['name'].push(element);\n          }\n\n          this.groupData.push(data);\n        });\n        this.filteredGroupData = this.groupData;\n        this.gethealthDates();\n      }\n\n      this.benefitServices.setFiltSlcted([]);\n    }\n\n    opnFilter(e) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const popover = yield this.popoverCtrl.create({\n          component: FilterPopoverComponent,\n          event: e,\n          cssClass: 'pop-over-class',\n          componentProps: {\n            filterList: this.filterList,\n            service: this.benefitServices\n          },\n          mode: 'ios'\n        });\n        return popover.present();\n      });\n    }\n\n    opnSorting(e) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const popover = yield this.popoverCtrl.create({\n          component: SortClaimsComponent,\n          event: e,\n          cssClass: 'pop-over-class',\n          componentProps: {\n            sortList: this.sortList\n          },\n          mode: 'ios'\n        });\n        return popover.present();\n      });\n    }\n\n    opnDateRangeFilter(e) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const popover = yield this.popoverCtrl.create({\n          component: DateRangeFilterComponent,\n          event: e,\n          cssClass: 'pop-over-class',\n          componentProps: {\n            dateRangeList: this.dateRangeList,\n            selectedDate: this.selectedRangeType\n          },\n          mode: 'ios'\n        });\n        return popover.present();\n      });\n    }\n\n    customDateRange(fromDate, toDate) {\n      this.healthDates = {\n        startDate: moment(fromDate).format('YYYY-MM-DD'),\n        endDate: moment(toDate).format('YYYY-MM-DD')\n      };\n      this.filterByDateRange();\n    }\n\n    ionViewWillLeave() {\n      this.consentSubscription.unsubscribe();\n    }\n\n    ngOnDestroy() {\n      this.subscriptionFilter.unsubscribe();\n      this.subscriptionSort.unsubscribe();\n      this.subscriptionDate.unsubscribe();\n\n      if (this.consentSubscription) {\n        this.consentSubscription.unsubscribe();\n      }\n    }\n\n  }\n\n  PlanTransactionsComponent.ɵfac = function PlanTransactionsComponent_Factory(t) {\n    return new (t || PlanTransactionsComponent)(i0.ɵɵdirectiveInject(i1.BenefitsService), i0.ɵɵdirectiveInject(i2.ConsentService), i0.ɵɵdirectiveInject(i3.SharedUtilityService), i0.ɵɵdirectiveInject(i4.PopoverController));\n  };\n\n  PlanTransactionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PlanTransactionsComponent,\n    selectors: [[\"mobile-plan-transactions\"]],\n    viewQuery: function PlanTransactionsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.topmostElement = _t.first);\n      }\n    },\n    inputs: {\n      back: \"back\"\n    },\n    outputs: {\n      consent: \"consent\"\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[3, \"ngClass\"], [\"topmostElement\", \"\"], [3, \"back\", 4, \"ngIf\"], [4, \"ngIf\"], [3, \"back\"], [1, \"calim-transaction-card\"], [1, \"filter-row\"], [\"size\", \"small\", \"fill\", \"outline\", \"id\", \"filter-button\", 1, \"filt-button\", \"font-14\", 3, \"click\"], [\"filter\", \"\"], [\"name\", \"filter-outline\", 1, \"ml-10\"], [\"size\", \"small\", \"fill\", \"outline\", \"id\", \"sort-button\", 1, \"filt-button\", \"font-14\", 3, \"click\"], [\"name\", \"chevron-down-outline\", 1, \"ml-10\"], [1, \"date-range-row\"], [1, \"font-w-600\"], [\"class\", \"option-name\", 3, \"hidden\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"custom-date-range\", 4, \"ngIf\"], [1, \"data-wrapper\"], [3, \"loading\"], [4, \"ngFor\", \"ngForOf\"], [1, \"option-name\", 3, \"hidden\", \"click\"], [1, \"value-wrap\"], [\"name\", \"caret-down-outline\"], [1, \"custom-date-range\"], [1, \"cdr-block\"], [\"mode\", \"ios\", \"placeholder\", \"mm/dd/yyyy\", \"displayFormat\", \"MM/DD/YYYY\", \"pickerFormat\", \"MMM/DD/YYYY\", \"presentation\", \"fromDate\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"name\", \"chevron-down-outline\"], [\"mode\", \"ios\", \"placeholder\", \"mm/dd/yyyy\", \"displayFormat\", \"MM/DD/YYYY\", \"pickerFormat\", \"MMM/DD/YYYY\", \"presentation\", \"toDate\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"], [\"class\", \"frame\", 4, \"ngIf\"], [1, \"frame\"], [1, \"title\"], [\"size\", \"8\", 1, \"ion-text-start\", \"lastdays\"], [\"size\", \"4\", 1, \"ion-text-end\", \"color\"], [\"size\", \"6\", 1, \"ion-text-start\", \"subdate\"], [\"size\", \"6\", 1, \"ion-text-end\", \"sub-name\"], [1, \"dot\", 3, \"ngStyle\"], [1, \"ion-text-start\", \"sub-category\"], [1, \"divider\"], [1, \"drugname\"], [1, \"lastfilled\"]],\n    template: function PlanTransactionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", null, 1);\n        i0.ɵɵtemplate(3, PlanTransactionsComponent_app_consent_required_3_Template, 1, 1, \"app-consent-required\", 2);\n        i0.ɵɵtemplate(4, PlanTransactionsComponent_div_4_Template, 19, 7, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.isWeb ? \"web-plan-transactions\" : \"mobile-plan-transactions\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.hasConsent);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.hasConsent);\n      }\n    },\n    directives: [i5.NgClass, i5.NgIf, i6.ConsentRequiredComponent, i4.IonButton, i4.IonIcon, i4.IonText, i5.NgForOf, i7.LoadingComponent, i8.MedDisclaimerComponent, i4.IonDatetime, i4.SelectValueAccessor, i9.NgControlStatus, i9.NgModel, i4.IonList, i4.IonRow, i4.IonCol, i5.NgStyle],\n    pipes: [i5.DatePipe, i5.CurrencyPipe],\n    styles: [\".frame[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:10px 10px 10px 20px;background-color:var(--white);font-weight:bold}.frame[_ngcontent-%COMP%]   .title[_ngcontent-%COMP%]{text-align:left;color:var(--ion-color-dark);font-size:18px;font-weight:bold;text-transform:uppercase}.calim-transaction-card[_ngcontent-%COMP%]{padding:0;background-color:var(--primary-colors-voya-white)}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]{background-color:var(--ion-color-white);overflow-y:scroll}@supports not (-webkit-touch-callout: none){.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .lastdays[_ngcontent-%COMP%]{font-size:16px;color:var(--toggle-txt-color);font-weight:bold;padding:0 22px 13px 16px}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .color[_ngcontent-%COMP%]{font-size:16px;font-weight:bold;color:var(--dollar-amount-color);padding:0 22px 13px 16px}}@supports (-webkit-touch-callout: none){.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .lastdays[_ngcontent-%COMP%]{font-size:16px;color:var(--toggle-txt-color);font-weight:bold;padding:20px 22px 13px 16px}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .color[_ngcontent-%COMP%]{font-size:16px;font-weight:bold;color:var(--dollar-amount-color);padding:20px 22px 13px 16px}}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .subdate[_ngcontent-%COMP%]{padding:0 67px 0 16px;font-size:14px;font-weight:600;text-align:left;color:var(--secondary-colors-voya-gray)}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .sub-name[_ngcontent-%COMP%]{height:24px;font-size:14px;font-weight:600;text-align:right;color:var(--secondary-colors-voya-gray);padding:0 22px 13px 16px}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .drugname[_ngcontent-%COMP%]{font-size:14px;font-weight:600;color:var(--primary-colors-voya-black);padding:6px 22px 14px 17px}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .lastfilled[_ngcontent-%COMP%]{font-size:14px;font-weight:600;color:var(--primary-colors-voya-black);padding:0 22px 12px 17px}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .sub-category[_ngcontent-%COMP%]{height:24px;font-size:14px;font-weight:600;text-align:left;color:var(--primary-colors-voya-black);padding:0 22px 13px 6px}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .dot[_ngcontent-%COMP%]{width:16px;height:16px;border-radius:12px;margin-left:16px}.calim-transaction-card[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   .divider[_ngcontent-%COMP%]{height:1px;margin:19px 0 0;background-color:var(--white)}.calim-transaction-card[_ngcontent-%COMP%]   .filter-row[_ngcontent-%COMP%]{margin-bottom:15px;padding:0 20px}.calim-transaction-card[_ngcontent-%COMP%]   .filter-row[_ngcontent-%COMP%]   .filt-button[_ngcontent-%COMP%]{margin-right:10px;--background: var(--ion-color-white);color:var(--ion-color-dark);--border: solid 1px var(--ion-color-dark);--border-color: rgb(48, 66, 94);--border-radius: 10px;--font-weight: 400;--padding-start: 6px;--padding-end: 4px;--height: 34px;--vertical-align: middle;--background-activated: var(--ion-color-white)}.calim-transaction-card[_ngcontent-%COMP%]   .date-range-row[_ngcontent-%COMP%]{display:flex;align-items:center;padding:0 20px;margin-bottom:10px}.calim-transaction-card[_ngcontent-%COMP%]   .date-range-row[_ngcontent-%COMP%]   .option-name[_ngcontent-%COMP%]{cursor:pointer;display:inline-flex;margin-left:5px}.calim-transaction-card[_ngcontent-%COMP%]   .date-range-row[_ngcontent-%COMP%]   .option-name[_ngcontent-%COMP%]   .value-wrap[_ngcontent-%COMP%]{display:inline-flex;align-items:center}.calim-transaction-card[_ngcontent-%COMP%]   .date-range-row[_ngcontent-%COMP%]   .option-name[_ngcontent-%COMP%]   .value-wrap[_ngcontent-%COMP%]   .dd-ico[_ngcontent-%COMP%]{display:inline-flex}.calim-transaction-card[_ngcontent-%COMP%]   .custom-date-range[_ngcontent-%COMP%]{display:flex;padding:0 20px;align-items:center;--background-color: transparent;--padding-left: 0}.calim-transaction-card[_ngcontent-%COMP%]   .custom-date-range[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{--background-color: transparent;--padding-left: 0}.calim-transaction-card[_ngcontent-%COMP%]   .custom-date-range[_ngcontent-%COMP%]   .item-native[_ngcontent-%COMP%]{background-color:transparent;padding-left:0}.calim-transaction-card[_ngcontent-%COMP%]   .custom-date-range[_ngcontent-%COMP%]   .cdr-block[_ngcontent-%COMP%]{display:inline-flex;align-items:center;position:relative;margin-right:10px}.calim-transaction-card[_ngcontent-%COMP%]   .custom-date-range[_ngcontent-%COMP%]   .cdr-block[_ngcontent-%COMP%]   ion-datetime[_ngcontent-%COMP%]{padding:10px 20px 10px 5px;color:var(--primary-colors-voya-black)}.calim-transaction-card[_ngcontent-%COMP%]   .custom-date-range[_ngcontent-%COMP%]   .cdr-block[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{position:absolute;right:0}.calim-transaction-card[_ngcontent-%COMP%]   .date-range-pu[_ngcontent-%COMP%]{width:190px}.calim-transaction-card[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]::part(native){background-color:transparent}.calim-transaction-card[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]::part(native)   .item-inner[_ngcontent-%COMP%]{border:none}.web-plan-transactions[_ngcontent-%COMP%]{bottom:0px}@media screen and (min-width: 920px){.web-plan-transactions[_ngcontent-%COMP%]{margin:1px 35px 80px}}@media screen and (max-width: 920px){.web-plan-transactions[_ngcontent-%COMP%]{margin-bottom:80px}}.web-plan-transactions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{margin-top:35px}@media only screen and (min-width: 280px) and (max-width: 920px){.web-plan-transactions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{margin-top:12px}}@media only screen and (min-width: 280px) and (max-width: 480px){.web-plan-transactions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   ion-col.ion-text-start[_ngcontent-%COMP%]{padding-right:0}.web-plan-transactions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   ion-col.ion-text-end[_ngcontent-%COMP%]{padding-left:0}.web-plan-transactions[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]   ion-list[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   ion-col.ion-text-start.lastdays[_ngcontent-%COMP%]{overflow:hidden;white-space:nowrap;text-overflow:ellipsis}}.data-wrapper[_ngcontent-%COMP%]{min-height:250px;background-color:transparent;margin-bottom:20px}\"]\n  });\n  return PlanTransactionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}