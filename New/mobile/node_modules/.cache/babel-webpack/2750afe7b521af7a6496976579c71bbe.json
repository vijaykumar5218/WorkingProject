{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { TypeaheadComponent } from '../typeahead/typeahead.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/utility/utility.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../typeahead/typeahead.component\";\n\nfunction SearchbarComponent_ion_card_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-card\");\n    i0.ɵɵelementStart(1, \"journeys-steps-step-input-typeahead\", 3);\n    i0.ɵɵlistener(\"itemSelected\", function SearchbarComponent_ion_card_2_Template_journeys_steps_step_input_typeahead_itemSelected_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.getSelectedItem($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"element\", ctx_r1.element)(\"searchValue\", ctx_r1.searchValue)(\"isWeb\", ctx_r1.isWeb);\n  }\n}\n\nexport let SearchbarComponent = /*#__PURE__*/(() => {\n  class SearchbarComponent {\n    constructor(utilityService, modalController) {\n      this.utilityService = utilityService;\n      this.modalController = modalController;\n      this.valueChange = new EventEmitter();\n      this.isWeb = false;\n    }\n\n    ngOnInit() {\n      this.isWeb = this.utilityService.getIsWeb();\n\n      if (this.defaultValue) {\n        this.searchValue = JSON.parse(this.defaultValue).name;\n      }\n    }\n\n    searchbarInput(value) {\n      this.searchValue = value;\n      this.showFilteredList = true;\n    }\n\n    searchInput() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: TypeaheadComponent,\n          cssClass: 'modal-fullscreen',\n          swipeToClose: false,\n          componentProps: {\n            element: this.element,\n            isWeb: this.isWeb\n          }\n        });\n        modal.onDidDismiss().then(data => {\n          this.getSelectedItem(data['data']);\n        });\n        modal.present();\n      });\n    }\n\n    getSelectedItem(item) {\n      this.showFilteredList = false;\n      this.searchValue = item.name;\n      this.valueChange.emit(JSON.stringify(item));\n    }\n\n  }\n\n  SearchbarComponent.ɵfac = function SearchbarComponent_Factory(t) {\n    return new (t || SearchbarComponent)(i0.ɵɵdirectiveInject(i1.SharedUtilityService), i0.ɵɵdirectiveInject(i2.ModalController));\n  };\n\n  SearchbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchbarComponent,\n    selectors: [[\"journeys-steps-step-input-searchbar\"]],\n    inputs: {\n      element: \"element\",\n      defaultValue: \"defaultValue\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    decls: 3,\n    vars: 4,\n    consts: [[1, \"journeySearchbar\", 3, \"placeholder\", \"automation-id\", \"value\", \"click\", \"ionInput\"], [\"journeySearchbar\", \"\"], [4, \"ngIf\"], [3, \"element\", \"searchValue\", \"isWeb\", \"itemSelected\"]],\n    template: function SearchbarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r4 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ion-searchbar\", 0, 1);\n        i0.ɵɵlistener(\"click\", function SearchbarComponent_Template_ion_searchbar_click_0_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return !ctx.isWeb ? ctx.searchInput() : ctx.searchbarInput(_r0.value);\n        })(\"ionInput\", function SearchbarComponent_Template_ion_searchbar_ionInput_0_listener() {\n          i0.ɵɵrestoreView(_r4);\n\n          const _r0 = i0.ɵɵreference(1);\n\n          return ctx.isWeb ? ctx.searchbarInput(_r0.value) : \"\";\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, SearchbarComponent_ion_card_2_Template, 2, 3, \"ion-card\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"placeholder\", (ctx.element == null ? null : ctx.element.label) ? ctx.element.label : \"Search\")(\"automation-id\", \"journeySearchbar\" + (ctx.element == null ? null : ctx.element.idSuffix))(\"value\", ctx.searchValue);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isWeb && ctx.showFilteredList);\n      }\n    },\n    directives: [i2.IonSearchbar, i2.TextValueAccessor, i3.NgIf, i2.IonCard, i4.TypeaheadComponent],\n    styles: [\"[_nghost-%COMP%]{display:block}[_nghost-%COMP%]   ion-searchbar[_ngcontent-%COMP%]{border:1px solid var(--secondary-colors-medium-gray-2);border-radius:4px;width:auto;--padding-start: 16px;padding:0!important;--placeholder-color: var(--secondary-colors-voya-gray);--placeholder-opacity: 1;--padding-end: 25px;height:56px}[_nghost-%COMP%]   ion-searchbar[_ngcontent-%COMP%]::part(icon){color:var(--primary-colors-voya-black);opacity:1}[_nghost-%COMP%]   ion-searchbar[_ngcontent-%COMP%]:focus{box-shadow:0 0 0 2px var(--primary-colors-voya-black)}[_nghost-%COMP%]   ion-card[_ngcontent-%COMP%]{width:100%;margin:0;border-radius:0;height:200px}\"]\n  });\n  return SearchbarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}