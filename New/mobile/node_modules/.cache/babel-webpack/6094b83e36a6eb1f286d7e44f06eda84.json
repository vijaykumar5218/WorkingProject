{"ast":null,"code":"define(['./MatchTier'], function (MatchTier) {\n  //  Constructor\n  var EmployerMatch = function () {\n    //  Private Instance Variable Declaration -----------------------------\n    var _bHasChanged;\n\n    var _n_mtCount;\n\n    var _mt; //  Privileged Method Declarations ------------------------------------\n\n\n    this.changed = function () {\n      return _bHasChanged;\n    };\n\n    this.addMatchTier = function (dFloorFactor, dCeilingFactor, dMatchRate) {\n      var bReturn = false; // assure legitimate parameters\n\n      if (dFloorFactor >= 0.0 && dCeilingFactor >= dFloorFactor && dCeilingFactor <= 1.0) {\n        // temp for new tier\n        var mt_Temp = new Array(_n_mtCount + 1);\n\n        for (var n = 0; n < _n_mtCount + 1; n++) mt_Temp[n] = new MatchTier();\n\n        var nTempCount = _n_mtCount + 1; // handle previous tiers\n\n        for (var m = 0; m < _n_mtCount; m++) mt_Temp[m] = _mt[m]; // set new\n\n\n        mt_Temp[_n_mtCount].setFloorThreshold(dFloorFactor);\n\n        mt_Temp[_n_mtCount].setCeilingThreshold(dCeilingFactor);\n\n        mt_Temp[_n_mtCount].setMatchRate(dMatchRate); // reset match tier pointer\n\n\n        _mt = mt_Temp; // set count\n\n        _n_mtCount = nTempCount;\n\n        _setChanged(true);\n\n        bReturn = true;\n      }\n\n      return bReturn;\n    };\n\n    this.getTierCount = function () {\n      return _n_mtCount;\n    };\n\n    this.clearMatchTiers = function () {\n      var mt_Temp = new MatchTier()[0];\n      var nTempCount = 0; // reset match tier pointer\n\n      _mt = mt_Temp; // set count\n\n      _n_mtCount = nTempCount;\n\n      _setChanged(true);\n    };\n\n    this.setMatchTierFloorFactor = function (nIndex, dFactor) {\n      var bReturn = false;\n\n      if (this.isIndex(nIndex)) {\n        if (_mt[nIndex].getFloorThreshold() != dFactor) {\n          _mt[nIndex].setFloorThreshold(dFactor);\n\n          _setChanged(true);\n        }\n\n        bReturn = true;\n      }\n\n      return bReturn;\n    };\n\n    this.getMatchTierFloorFactor = function (nIndex) {\n      var dReturn = 0.0;\n\n      if (this.isIndex(nIndex)) {\n        dReturn = _mt[nIndex].getFloorThreshold();\n      }\n\n      return dReturn;\n    };\n\n    this.setMatchTierCeilingFactor = function (nIndex, dFactor) {\n      var bReturn = false;\n\n      if (this.isIndex(nIndex)) {\n        if (_mt[nIndex].getCeilingThreshold() != dFactor) {\n          _mt[nIndex].setCeilingThreshold(dFactor);\n\n          _setChanged(true);\n        }\n\n        bReturn = true;\n      }\n\n      return bReturn;\n    };\n\n    this.getMatchTierCeilingFactor = function (nIndex) {\n      var dReturn = 0.0;\n\n      if (this.isIndex(nIndex)) {\n        dReturn = _mt[nIndex].getCeilingThreshold();\n      }\n\n      return dReturn;\n    };\n\n    this.setMatchTierMatchRate = function (nIndex, dMatchRate) {\n      var bReturn = false;\n\n      if (this.isIndex(nIndex)) {\n        if (_mt[nIndex].getMatchRate() != dMatchRate) {\n          _mt[nIndex].setMatchRate(dMatchRate);\n\n          _setChanged(true);\n        }\n\n        bReturn = true;\n      }\n\n      return bReturn;\n    };\n\n    this.getMatchTierMatchRate = function (nIndex) {\n      var dReturn = 0.0;\n\n      if (this.isIndex(nIndex)) {\n        dReturn = _mt[nIndex].getMatchRate();\n      }\n\n      return dReturn;\n    };\n\n    this.getEmployerMatchingContrib = function (dContrib, dSalary) {\n      var dMatchAccumulator = 0.0; // loop through tiers\n\n      for (var n = 0; n < _n_mtCount; n++) {\n        dMatchAccumulator += _mt[n].getMatchAmount(dContrib, dSalary);\n      }\n\n      return dMatchAccumulator;\n    };\n\n    this.getEmployerMatchingContribPerTier = function (dContrib, dSalary, nIndex) {\n      var dReturn = 0.0; // get tier match\n\n      if (this.isIndex(nIndex)) {\n        dReturn = _mt[nIndex].getMatchAmount(dContrib, dSalary);\n      }\n\n      return dReturn;\n    }; //  Private Method Declarations ---------------------------------------\n\n\n    (function init() {\n      _n_mtCount = 0;\n      _mt = [];\n\n      _setChanged(true);\n    })();\n\n    function _setChanged(b) {\n      _bHasChanged = b;\n    }\n  }; //  Public Method Declarations ------------------------------------\n\n\n  EmployerMatch.prototype.isIndex = function (nIndex) {\n    return nIndex > -1 && nIndex < this.getTierCount();\n  };\n\n  return EmployerMatch;\n});","map":null,"metadata":{},"sourceType":"script"}