{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ReplaySubject } from 'rxjs';\nimport { SESSION_TIMEOUT_DURATION } from '../account/account.service';\nimport { endpoints } from './constants/endpoints';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../base/base-factory-provider\";\nimport * as i2 from \"../utility/utility.service\";\nexport let AccessService = /*#__PURE__*/(() => {\n  class AccessService {\n    constructor(baseService, utilityService) {\n      this.baseService = baseService;\n      this.utilityService = utilityService;\n      this.endpoints = endpoints;\n      this.currSessionExp = 0;\n      this.endpoints = this.utilityService.appendBaseUrlToEndpoints(endpoints);\n      this.myWorkplaceDashboardEnabled$ = new ReplaySubject(1);\n    }\n\n    checkMyvoyageAccess(refresh = false) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        if (!_this.accessResult || refresh) {\n          _this.accessResult = yield _this.baseService.get(_this.endpoints.myvoyageAccess);\n        }\n\n        return _this.accessResult;\n      })();\n    }\n\n    checkWorkplaceAccess(refresh = false) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        try {\n          if (!_this2.workplaceAccessResult || refresh) {\n            const data = yield _this2.checkMyvoyageAccess(refresh);\n\n            _this2.myWorkplaceDashboardEnabled$.next(data.myWorkplaceDashboardEnabled);\n\n            _this2.workplaceAccessResult = {\n              myWorkplaceDashboardEnabled: data.myWorkplaceDashboardEnabled\n            };\n          }\n        } catch (e) {\n          console.log(e);\n          _this2.workplaceAccessResult = {\n            myWorkplaceDashboardEnabled: false\n          };\n\n          _this2.myWorkplaceDashboardEnabled$.next(_this2.workplaceAccessResult.myWorkplaceDashboardEnabled);\n        }\n\n        return _this2.workplaceAccessResult;\n      })();\n    }\n\n    getSessionId(accessResult) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        if (!localStorage.getItem('sessionId')) {\n          if (!accessResult) {\n            accessResult = yield _this3.checkMyvoyageAccess();\n          }\n\n          const {\n            clientDomain,\n            clientId\n          } = accessResult;\n          const sessionId = yield _this3.initSession(clientDomain, clientId);\n          localStorage.setItem('sessionId', sessionId);\n        }\n\n        return Promise.resolve(localStorage.getItem('sessionId'));\n      })();\n    }\n\n    initSession(domain, clientId) {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        if (!_this4.sessionId || new Date().getTime() > _this4.currSessionExp) {\n          const initSession = {\n            sessionInfo: {\n              domain: domain,\n              newSession: false,\n              page: 'MYVOYA',\n              clientId: clientId,\n              timeoutMinutes: 15,\n              application: 'MYVOYASSO'\n            },\n            allowDuplicate: false\n          };\n          const result = yield _this4.baseService.post(_this4.endpoints.InitSession, initSession);\n\n          if (result) {\n            _this4.currSessionExp = new Date().getTime() + SESSION_TIMEOUT_DURATION;\n            _this4.sessionId = result.sessionId;\n          }\n        }\n\n        return _this4.sessionId;\n      })();\n    }\n\n    isMyWorkplaceDashboardEnabled() {\n      return this.myWorkplaceDashboardEnabled$.asObservable();\n    }\n\n    checkLastPreferenceUpdated() {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        const myvoyageAccessResult = yield _this5.checkMyvoyageAccess();\n\n        if (myvoyageAccessResult && myvoyageAccessResult.enableMyVoyage === 'Y' && !_this5.lastPrefUpdatedResult) {\n          _this5.lastPrefUpdatedResult = yield _this5.baseService.get(_this5.endpoints.preferenceLastUpdated);\n        }\n\n        return _this5.lastPrefUpdatedResult;\n      })();\n    }\n\n  }\n\n  AccessService.ɵfac = function AccessService_Factory(t) {\n    return new (t || AccessService)(i0.ɵɵinject(i1.BaseService), i0.ɵɵinject(i2.SharedUtilityService));\n  };\n\n  AccessService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AccessService,\n    factory: AccessService.ɵfac,\n    providedIn: 'root'\n  });\n  return AccessService;\n})();","map":null,"metadata":{},"sourceType":"module"}