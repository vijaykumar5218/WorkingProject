{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { AlertComponent } from '@shared-lib/components/alert/alert.component';\nimport { HeaderType } from '@shared-lib/constants/headerType.enum';\nimport * as pageText from './constants/displayText.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/header-type/header-type.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@shared-lib/services/account-info/account-info.service\";\nimport * as i5 from \"@shared-lib/services/notification-setting/notification-setting.service\";\nimport * as i6 from \"@shared-lib/services/utility/utility.service\";\nimport * as i7 from \"@shared-lib/services/platform/platform.service\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"../legal/legal.component\";\n\nfunction EditEmailPage_ion_row_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-row\");\n    i0.ɵɵelementStart(1, \"ion-col\");\n    i0.ɵɵelement(2, \"ion-icon\", 10);\n    i0.ɵɵelementStart(3, \"ion-text\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.displayText.errors.invalidEmail);\n  }\n}\n\nexport let EditEmailPage = /*#__PURE__*/(() => {\n  class EditEmailPage {\n    constructor(headerType, router, modalController, accountInfoService, notificationService, utilityService, platformService) {\n      this.headerType = headerType;\n      this.router = router;\n      this.modalController = modalController;\n      this.accountInfoService = accountInfoService;\n      this.notificationService = notificationService;\n      this.utilityService = utilityService;\n      this.platformService = platformService;\n      this.displayText = JSON.parse(JSON.stringify(pageText)).default;\n      this.emailVailid = true;\n      this.actionOption = {\n        headername: this.displayText.headerName,\n        btnleft: true,\n        btnright: true,\n        buttonLeft: {\n          name: '',\n          link: 'settings/account-and-personal-info'\n        },\n        buttonRight: {\n          name: '',\n          link: 'notification'\n        }\n      };\n      this.isWeb = this.utilityService.getIsWeb();\n      this.platformService.isDesktop().subscribe(data => {\n        this.isDesktop = data;\n      });\n    }\n\n    ngOnInit() {\n      this.headerType.publish({\n        type: HeaderType.navbar,\n        actionOption: this.actionOption\n      });\n      this.fetchData();\n    }\n\n    fetchData() {\n      this.subscription = this.notificationService.getNotificationSettings().subscribe(prefSettings => {\n        this.prefSettings = prefSettings;\n        this.contactId = prefSettings.primaryEmail.partyContactId;\n        this.email = prefSettings.primaryEmail.email;\n      });\n    }\n\n    cancel() {\n      const rootPath = this.isWeb && !this.isDesktop ? 'more' : 'settings';\n      this.router.navigateByUrl(`/${rootPath}/account-and-personal-info`);\n    }\n\n    valueChanged(val) {\n      this.email = val === null || val === void 0 ? void 0 : val.toString();\n      this.emailVailid = this.utilityService.validateEmail(this.email);\n    }\n\n    saveEmail() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: AlertComponent,\n          cssClass: 'modal-not-fullscreen',\n          swipeToClose: false,\n          componentProps: {\n            titleMessage: this.displayText.alert.message,\n            imageUrl: this.displayText.alert.imageUrl,\n            saveFunction: () => __awaiter(this, void 0, void 0, function* () {\n              return new Promise(res => {\n                this.accountInfoService.saveEmail(this.email, this.contactId).then(resp => {\n                  if (resp) {\n                    res(true);\n                  } else {\n                    res(false);\n                  }\n                });\n              });\n            })\n          }\n        });\n        modal.onDidDismiss().then(data => {\n          this.modalDismissed(data);\n        });\n        return modal.present();\n      });\n    }\n\n    modalDismissed(data) {\n      if (data.data.saved) {\n        this.prefSettings.primaryEmail.email = this.email;\n        this.notificationService.setNotificationSettings(this.prefSettings);\n        this.cancel();\n      }\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n  }\n\n  EditEmailPage.ɵfac = function EditEmailPage_Factory(t) {\n    return new (t || EditEmailPage)(i0.ɵɵdirectiveInject(i1.HeaderTypeService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ModalController), i0.ɵɵdirectiveInject(i4.AccountInfoService), i0.ɵɵdirectiveInject(i5.NotificationsSettingService), i0.ɵɵdirectiveInject(i6.SharedUtilityService), i0.ɵɵdirectiveInject(i7.PlatformService));\n  };\n\n  EditEmailPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EditEmailPage,\n    selectors: [[\"app-edit-email\"]],\n    decls: 21,\n    vars: 7,\n    consts: [[1, \"ion-no-margin\", \"p-20\"], [3, \"ngClass\"], [1, \"input-header\"], [\"id\", \"editEmail\", \"name\", \"editEmail\", \"type\", \"email\", \"inputmode\", \"email\", \"pattern\", \"email\", \"autocomplete\", \"email\", \"clearInput\", \"\", 1, \"edit-email\", 3, \"value\", \"ionChange\"], [\"editEmailInput\", \"\"], [4, \"ngIf\"], [1, \"buttons\"], [\"size\", \"2\"], [\"id\", \"cancel-btn\", \"name\", \"submit\", \"shape\", \"round\", \"expand\", \"block\", \"color\", \"btncolor\", \"fill\", \"outline\", 1, \"font-12\", 3, \"click\"], [\"id\", \"save-btn\", \"name\", \"submit\", \"shape\", \"round\", \"expand\", \"block\", \"color\", \"btncolor\", \"disabled\", \"\", 1, \"font-12\", 3, \"click\"], [\"src\", \"assets/icon/warning.svg\", \"alt\", \"warning\", 1, \"error-icon\"], [1, \"error\"]],\n    template: function EditEmailPage_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r2 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"ion-grid\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"ion-row\");\n        i0.ɵɵelementStart(3, \"ion-col\");\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-row\");\n        i0.ɵɵelementStart(7, \"ion-col\");\n        i0.ɵɵelementStart(8, \"ion-input\", 3, 4);\n        i0.ɵɵlistener(\"ionChange\", function EditEmailPage_Template_ion_input_ionChange_8_listener() {\n          i0.ɵɵrestoreView(_r2);\n\n          const _r0 = i0.ɵɵreference(9);\n\n          return ctx.valueChanged(_r0.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, EditEmailPage_ion_row_10_Template, 5, 1, \"ion-row\", 5);\n        i0.ɵɵelementStart(11, \"ion-row\", 6);\n        i0.ɵɵelement(12, \"ion-col\", 7);\n        i0.ɵɵelementStart(13, \"ion-col\");\n        i0.ɵɵelementStart(14, \"ion-button\", 8);\n        i0.ɵɵlistener(\"click\", function EditEmailPage_Template_ion_button_click_14_listener() {\n          return ctx.cancel();\n        });\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"ion-col\");\n        i0.ɵɵelementStart(17, \"ion-button\", 9);\n        i0.ɵɵlistener(\"click\", function EditEmailPage_Template_ion_button_click_17_listener() {\n          return ctx.saveEmail();\n        });\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"ion-col\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(20, \"app-legal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.isWeb ? \"web-edit-email\" : \"mobile-edit-email\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.displayText.nameLabel);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", ctx.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.emailVailid);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.displayText.button.cancel, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵattribute(\"disabled\", !ctx.emailVailid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\"\", ctx.displayText.button.save, \" \");\n      }\n    },\n    directives: [i3.IonGrid, i8.NgClass, i3.IonRow, i3.IonCol, i3.IonInput, i3.TextValueAccessor, i8.NgIf, i3.IonButton, i9.LegalComponent, i3.IonIcon, i3.IonText],\n    styles: [\"[_nghost-%COMP%]{background-color:var(--ion-color-white)}[_nghost-%COMP%]   .sub-header[_ngcontent-%COMP%]{font-size:16px;font-weight:bold;line-height:1.25;letter-spacing:.08px;margin-bottom:20px}[_nghost-%COMP%]   .edit-email[_ngcontent-%COMP%]{border:1px solid var(--secondary-colors-medium-gray-2);border-radius:4px;width:auto;color:var(--primary-colors-voya-black);--padding-start: 16px;height:56px}[_nghost-%COMP%]   .buttons[_ngcontent-%COMP%]{margin-top:40px}[_nghost-%COMP%]   .error[_ngcontent-%COMP%]{color:var(--secondary-colors-error-red);margin-left:4px;vertical-align:top}[_nghost-%COMP%]   .error-icon[_ngcontent-%COMP%]{width:22px;height:22px;margin-left:4px;fill:var(--secondary-colors-error-red)}[_nghost-%COMP%]   .error-input[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-color:var(--secondary-colors-error-red)!important}[_nghost-%COMP%]   .error-title[_ngcontent-%COMP%]{color:var(--secondary-colors-error-red)}[_nghost-%COMP%]   .web-edit-email[_ngcontent-%COMP%]{margin:20px}\"]\n  });\n  return EditEmailPage;\n})();","map":null,"metadata":{},"sourceType":"module"}