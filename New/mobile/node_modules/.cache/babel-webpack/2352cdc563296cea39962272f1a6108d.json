{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\n\nfunction ChipsComponent_ion_chip_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-chip\");\n    i0.ɵɵelementStart(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-icon\", 1);\n    i0.ɵɵlistener(\"click\", function ChipsComponent_ion_chip_0_Template_ion_icon_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const el_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.removeChip(el_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const el_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(el_r1.name);\n  }\n}\n\nexport let ChipsComponent = /*#__PURE__*/(() => {\n  class ChipsComponent {\n    constructor() {\n      this.item = [];\n      this.outPutData = new EventEmitter();\n    }\n\n    removeChip(el) {\n      this.outPutData.emit(el);\n    }\n\n  }\n\n  ChipsComponent.ɵfac = function ChipsComponent_Factory(t) {\n    return new (t || ChipsComponent)();\n  };\n\n  ChipsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChipsComponent,\n    selectors: [[\"app-chips\"]],\n    inputs: {\n      item: \"item\"\n    },\n    outputs: {\n      outPutData: \"outPutData\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"name\", \"close\", 3, \"click\"]],\n    template: function ChipsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChipsComponent_ion_chip_0_Template, 4, 1, \"ion-chip\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.item);\n      }\n    },\n    directives: [i1.NgForOf, i2.IonChip, i2.IonLabel, i2.IonIcon],\n    styles: [\"ion-chip[_ngcontent-%COMP%]{border-radius:10px;background-color:var(--secondary-colors-medium-gray-3)}\"]\n  });\n  return ChipsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}