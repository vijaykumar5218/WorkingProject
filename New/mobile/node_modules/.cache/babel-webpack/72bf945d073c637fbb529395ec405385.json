{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/journey/journey.service\";\nimport * as i2 from \"@angular/common\";\nconst _c0 = [\"img\"];\n\nconst _c1 = function (a0) {\n  return {\n    width: a0\n  };\n};\n\nconst _c2 = function (a0, a1, a2) {\n  return {\n    width: a0,\n    height: a1,\n    background: a2\n  };\n};\n\nexport let AnimationComponent = /*#__PURE__*/(() => {\n  class AnimationComponent {\n    constructor(journeyService) {\n      this.journeyService = journeyService;\n      this.times = 0;\n      this.animationSeen = false;\n    }\n\n    ngOnInit() {\n      this.speed = this.element.speed ? this.element.speed : 50;\n      this.widthOfSpriteSheet = this.element.widthOfEachSprite * (this.element.numberOfSpritesPerRow - 1);\n      this.currentStepSubscription = this.journeyService.getCurrentStep$().subscribe(currentStep => {\n        if (currentStep === this.index) {\n          this.startAnimation();\n        }\n      });\n    }\n\n    startAnimation() {\n      if (!this.animationSeen) {\n        this.animationSeen = true;\n        let positionX = this.element.widthOfEachSprite;\n        let positionY = 0;\n        this.animationInterval = setInterval(() => {\n          this.times++;\n          this.img.nativeElement.style.backgroundPosition = `-${positionX}px -${positionY}px`;\n\n          if (positionX < this.widthOfSpriteSheet) {\n            positionX = positionX + this.element.widthOfEachSprite;\n          } else {\n            positionX = 0;\n            positionY = positionY + this.element.heightOfEachSprite;\n          }\n\n          if (this.times >= this.element.totalNumberOfSprites - 1) {\n            clearInterval(this.animationInterval);\n            this.times = 0;\n          }\n        }, this.speed);\n      }\n    }\n\n    ngOnDestroy() {\n      this.currentStepSubscription.unsubscribe();\n    }\n\n  }\n\n  AnimationComponent.ɵfac = function AnimationComponent_Factory(t) {\n    return new (t || AnimationComponent)(i0.ɵɵdirectiveInject(i1.JourneyService));\n  };\n\n  AnimationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AnimationComponent,\n    selectors: [[\"journeys-steps-step-animation\"]],\n    viewQuery: function AnimationComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.img = _t.first);\n      }\n    },\n    inputs: {\n      element: \"element\",\n      index: \"index\"\n    },\n    decls: 4,\n    vars: 8,\n    consts: [[1, \"container\", 3, \"ngStyle\"], [3, \"ngStyle\"], [\"img\", \"\"], [1, \"hide-px\"]],\n    template: function AnimationComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"div\", 1, 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c1, ctx.element.widthOfEachSprite + \"px\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction3(4, _c2, ctx.element.widthOfEachSprite - 1 + \"px\", ctx.element.heightOfEachSprite + \"px\", \"url(\" + ctx.element.imageUrl + \") 0 0\"));\n      }\n    },\n    directives: [i2.NgStyle],\n    styles: [\"div.container[_ngcontent-%COMP%]{margin:auto;display:flex;padding-bottom:20px}div.container[_ngcontent-%COMP%]   .hide-px[_ngcontent-%COMP%]{width:1px}\"]\n  });\n  return AnimationComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}