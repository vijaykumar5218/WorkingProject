{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { AlertComponent } from '@shared-lib/components/alert/alert.component';\nimport * as settingsOption from '@shared-lib/components/settings/constants/settingsOption.json';\nimport { BehaviorSubject } from 'rxjs';\nimport { endPoints } from './constants/endpoints';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@shared-lib/services/base/base-factory-provider\";\nimport * as i3 from \"@shared-lib/services/utility/utility.service\";\nexport let WebLogoutService = /*#__PURE__*/(() => {\n  class WebLogoutService {\n    constructor(modalController, baseService, utilityService) {\n      this.modalController = modalController;\n      this.baseService = baseService;\n      this.utilityService = utilityService;\n      this.content = settingsOption;\n      this.endPoints = endPoints;\n      this.terminatedUserSubject = new BehaviorSubject(false);\n      this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n    }\n\n    setLogoutURL(url) {\n      localStorage.setItem('logout-url', url);\n    }\n\n    getLogoutURL() {\n      return localStorage.getItem('logout-url');\n    }\n\n    setPostLogoutRedirect() {\n      const linkURL = this.utilityService.getEnvironment().logoutUrl;\n      const myVoyageDomain = window.location.href.split('myvoyageui')[0].slice(0, -1);\n      const ssoDomain = `https://${linkURL.split('/')[2]}`;\n      const logoutPage = `${ssoDomain}/voyassoui/public/logout.html%3FappId=myVoyage%26loginURL=${myVoyageDomain}`;\n      const logoutURL = `${linkURL}&post_logout_redirect_uri=${logoutPage}`;\n      this.setLogoutURL(logoutURL);\n      return logoutURL;\n    }\n\n    openModal() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: AlertComponent,\n          cssClass: 'modal-not-fullscreen',\n          swipeToClose: false,\n          componentProps: {\n            titleMessage: this.content.signOutQuestion,\n            yesButtonTxt: this.content.button,\n            noButtonTxt: this.content.close,\n            saveFunction: () => __awaiter(this, void 0, void 0, function* () {\n              return new Promise(res => {\n                res(true);\n                this.action();\n              });\n            })\n          }\n        });\n        return modal.present();\n      });\n    }\n\n    action() {\n      this.baseService.get(this.endPoints.myVoyaLogout);\n      const url = this.getLogoutURL();\n      localStorage.clear();\n      sessionStorage.removeItem('iframeloaded');\n      window.open(url, '_self');\n    }\n\n    setTerminatedUser(data) {\n      this.terminatedUserSubject.next(data);\n    }\n\n    getTerminatedUser() {\n      return this.terminatedUserSubject.asObservable();\n    }\n\n  }\n\n  WebLogoutService.ɵfac = function WebLogoutService_Factory(t) {\n    return new (t || WebLogoutService)(i0.ɵɵinject(i1.ModalController), i0.ɵɵinject(i2.BaseService), i0.ɵɵinject(i3.SharedUtilityService));\n  };\n\n  WebLogoutService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebLogoutService,\n    factory: WebLogoutService.ɵfac,\n    providedIn: 'root'\n  });\n  return WebLogoutService;\n})();","map":null,"metadata":{},"sourceType":"module"}