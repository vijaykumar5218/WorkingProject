{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/journey/journey.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../../journey/steps/step/contentLink/contentLink.component\";\n\nfunction IconTextButtonComponent_journeys_steps_step_contentLink_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"journeys-steps-step-contentLink\", 5);\n    i0.ɵɵlistener(\"valueChange\", function IconTextButtonComponent_journeys_steps_step_contentLink_7_Template_journeys_steps_step_contentLink_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.handleValueChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"element\", ctx_r0.contentLinkElement)(\"values\", ctx_r0.contentLinkValue);\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"with-edit\": a0,\n    checked: a1\n  };\n};\n\nexport let IconTextButtonComponent = /*#__PURE__*/(() => {\n  class IconTextButtonComponent {\n    constructor(journeyService) {\n      this.journeyService = journeyService;\n      this.displayEdit = false;\n      this.checked = false;\n      this.clickEvent = new EventEmitter();\n      this.editClick = new EventEmitter();\n      this.updateStepValueAndStep = new EventEmitter();\n    }\n\n    ngOnInit() {\n      if (this.displayEdit) {\n        this.contentLinkElement = this.element.elements && Object.assign(Object.assign({}, this.element.elements[0]), {\n          id: 'editModalButton'\n        });\n\n        if (this.contentLinkElement) {\n          this.contentLinkValue = this.journeyService.journeyServiceMap[this.journeyService.getCurrentJourney().journeyID].getModalValue(this.element.id, this.contentLinkElement.answerId);\n        }\n      }\n    }\n\n    handleClick() {\n      this.clickEvent.emit();\n    }\n\n    emitEditClick() {\n      this.editClick.emit();\n    }\n\n    handleValueChange(event) {\n      this.updateStepValueAndStep.emit();\n      const service = this.journeyService.journeyServiceMap[this.journeyService.getCurrentJourney().journeyID];\n      service.handleEditModalValueChange(event, this.index);\n      this.contentLinkValue = service.getModalValue(this.element.id, this.contentLinkElement.answerId);\n    }\n\n  }\n\n  IconTextButtonComponent.ɵfac = function IconTextButtonComponent_Factory(t) {\n    return new (t || IconTextButtonComponent)(i0.ɵɵdirectiveInject(i1.JourneyService));\n  };\n\n  IconTextButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IconTextButtonComponent,\n    selectors: [[\"journeys-icon-text-button\"]],\n    inputs: {\n      element: \"element\",\n      displayEdit: \"displayEdit\",\n      checked: \"checked\",\n      index: \"index\"\n    },\n    outputs: {\n      clickEvent: \"clickEvent\",\n      editClick: \"editClick\",\n      updateStepValueAndStep: \"updateStepValueAndStep\"\n    },\n    decls: 8,\n    vars: 8,\n    consts: [[1, \"icon-text-button-container\"], [\"ion-button\", \"\", \"outline\", \"\", \"item-end\", \"\", \"icon-start\", \"\", 3, \"ngClass\", \"click\"], [1, \"button-container\"], [3, \"src\", \"alt\"], [3, \"element\", \"values\", \"valueChange\", 4, \"ngIf\"], [3, \"element\", \"values\", \"valueChange\"]],\n    template: function IconTextButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function IconTextButtonComponent_Template_button_click_1_listener() {\n          return ctx.handleClick();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelement(4, \"img\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\");\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, IconTextButtonComponent_journeys_steps_step_contentLink_7_Template, 1, 2, \"journeys-steps-step-contentLink\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(5, _c0, ctx.displayEdit, ctx.checked));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"src\", ctx.element.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", ctx.element.altText || \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.element.label, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayEdit);\n      }\n    },\n    directives: [i2.NgClass, i2.NgIf, i3.ContentLinkComponent],\n    styles: [\"div.icon-text-button-container[_ngcontent-%COMP%]{display:flex}div.icon-text-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{border-radius:8px;background-color:var(--primary-colors-voya-white);box-shadow:0 0 4px #00000040;width:100%;padding:0;min-height:50px}div.icon-text-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:focus{outline:none;box-shadow:0 0 4px #00000040}div.icon-text-button-container[_ngcontent-%COMP%]   button.checked[_ngcontent-%COMP%]{border:solid 2px var(--primary-colors-voya-dark-blue);border-radius:8px}div.icon-text-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   div.button-container[_ngcontent-%COMP%]{display:flex;align-items:center;margin:10px 15px}div.icon-text-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   div.button-container[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{width:30px;display:flex;justify-content:center}div.icon-text-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]   div.button-container[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-size:16px;color:var(--primary-colors-voya-black);font-weight:bold;margin-left:10px}div.icon-text-button-container[_ngcontent-%COMP%]   journeys-steps-step-contentLink[_ngcontent-%COMP%]{margin-left:24px}\"]\n  });\n  return IconTextButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}