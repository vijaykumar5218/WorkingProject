{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { environment } from '../../environments/environment';\nimport { ScreenReader } from '@capacitor/screen-reader';\nimport { Keyboard } from '@capacitor/keyboard';\nimport { App } from '@capacitor/app';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/utility/utility.service\";\nimport * as i2 from \"./modules/shared/service/platform/platform.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@shared-lib/services/google-Analytics/google.analytics.service\";\nimport * as i5 from \"@shared-lib/services/qualtrics//qualtrics.service\";\nimport * as i6 from \"./modules/shared/service/error-service/error.service\";\nimport * as i7 from \"@ionic/angular\";\nimport * as i8 from \"../../../styles/theme/branding/theme.directive\";\nimport * as i9 from \"./modules/shared/component/header/header.component\";\nimport * as i10 from \"../../../shared-lib/modules/footer/footer.component\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(utilityService, platformService, router, googleAnalyticsService, qualtricsService, errorService, ngZone) {\n      this.utilityService = utilityService;\n      this.platformService = platformService;\n      this.router = router;\n      this.googleAnalyticsService = googleAnalyticsService;\n      this.qualtricsService = qualtricsService;\n      this.errorService = errorService;\n      this.ngZone = ngZone;\n      this.keyboard = Keyboard;\n      this.app = App;\n      this.listenForAppUrlOpen();\n      this.backButtonEvent();\n      this.hideKeypad();\n    }\n\n    listenForAppUrlOpen() {\n      this.app.addListener('appUrlOpen', event => {\n        this.ngZone.run(() => {\n          if (event.url.includes('redirect_route=')) {\n            this.router.navigateByUrl(this.getAppRoute(event.url));\n          }\n        });\n      });\n    }\n\n    getAppRoute(url) {\n      let route = '';\n\n      if (url.includes('&')) {\n        const splitRoute = url.split('redirect.html?')[1].split('&');\n        let params = '';\n        let i = 0;\n\n        for (const queryParam of splitRoute) {\n          if (queryParam.includes('redirect_route')) {\n            const paramVal = queryParam.split('=').slice(1).join('=');\n            route += paramVal;\n          } else {\n            params += splitRoute[i];\n          }\n\n          i++;\n        }\n\n        route += route.includes('?') ? '&' : '?';\n        route += params;\n      } else {\n        const splitRoute = url.split('redirect_route=')[1];\n        route += splitRoute;\n      }\n\n      return route;\n    }\n\n    logScrollStart() {\n      if (this.platformService.keyboardDidShow()) {\n        this.keyboard.hide();\n      }\n    }\n\n    backButtonEvent() {\n      window.addEventListener('ionBackButton', function (ev) {\n        console.log(ev);\n        ev.detail.register(10, () => {\n          this.router.navigateByUrl('/login');\n        });\n      }.bind(this), false);\n    }\n\n    ngOnInit() {\n      if (!window.location.pathname.includes('landing') && this.platformService.isIos() && !environment.livereload) {\n        this.router.navigateByUrl('landing');\n      }\n\n      this.errorService.initialize();\n      this.platformService.initialize();\n      this.utilityService.setStatusBarStyleLight();\n      this.utilityService.setEnvironment(environment);\n      window.addEventListener('keyboardDidShow', () => {\n        window.setTimeout(() => this.focusElement(), 0);\n      });\n      this.qualtricsService.initializeMobile();\n      this.screenReading();\n      this.googleAnalyticsService.listenForEvents();\n      this.googleAnalyticsService.firebaseAnalyticsTracking();\n    }\n\n    screenReading(sr = ScreenReader) {\n      return __awaiter(this, void 0, void 0, function* () {\n        sr.addListener('stateChange', ({\n          value\n        }) => __awaiter(this, void 0, void 0, function* () {\n          console.log(`Screen reader is now ${value ? 'on' : 'off'}`);\n\n          if (yield sr.isEnabled()) {\n            sr.speak({\n              value: 'Welcome to Voya.'\n            });\n          }\n        }));\n      });\n    }\n\n    focusElement() {\n      const elementFocused = document.querySelector(':focus');\n\n      if (elementFocused) {\n        elementFocused.blur();\n        elementFocused.focus();\n      }\n    }\n\n    hideKeypad() {\n      this.platformService.onReady$.subscribe(() => {\n        this.platformService.onResume$.subscribe(() => {\n          setTimeout(() => {\n            this.logScrollStart();\n          }, 1000);\n        });\n      });\n    }\n\n    ionViewWillLeave() {\n      this.platformService.backButton().unsubscribe();\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.SharedUtilityService), i0.ɵɵdirectiveInject(i2.PlatformService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.GoogleAnalyticsService), i0.ɵɵdirectiveInject(i5.QualtricsService), i0.ɵɵdirectiveInject(i6.ErrorService), i0.ɵɵdirectiveInject(i0.NgZone));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[\"app-theme\", \"\", 1, \"scroll-y\", \"h-100\"], [3, \"scrollEvents\", \"ionScrollStart\"], [3, \"animated\", \"swipeGesture\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-app\", 0);\n        i0.ɵɵelement(1, \"app-header\");\n        i0.ɵɵelementStart(2, \"ion-content\", 1);\n        i0.ɵɵlistener(\"ionScrollStart\", function AppComponent_Template_ion_content_ionScrollStart_2_listener() {\n          return ctx.logScrollStart();\n        });\n        i0.ɵɵelement(3, \"ion-router-outlet\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(4, \"app-footer\");\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"scrollEvents\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"animated\", true)(\"swipeGesture\", false);\n      }\n    },\n    directives: [i7.IonApp, i8.ThemeDirective, i9.HeaderComponent, i7.IonContent, i7.IonRouterOutlet, i10.FooterComponent],\n    encapsulation: 2\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}