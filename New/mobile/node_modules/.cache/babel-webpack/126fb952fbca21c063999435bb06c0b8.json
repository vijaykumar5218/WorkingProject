{"ast":null,"code":"import { ReplaySubject } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Publisher } from '../publisher';\nimport * as i0 from \"@angular/core\";\nexport let EventManagerService = /*#__PURE__*/(() => {\n  class EventManagerService {\n    constructor() {\n      this.eventSubject = new ReplaySubject(1);\n    }\n\n    createSubscriber(eventKey) {\n      return this.eventSubject.pipe(filter(event => event.key === eventKey), map(event => event.payload));\n    }\n\n    createPublisher(eventKey) {\n      return new Publisher(eventKey, this.eventSubject);\n    }\n\n  }\n\n  EventManagerService.ɵfac = function EventManagerService_Factory(t) {\n    return new (t || EventManagerService)();\n  };\n\n  EventManagerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EventManagerService,\n    factory: EventManagerService.ɵfac,\n    providedIn: 'root'\n  });\n  return EventManagerService;\n})();","map":null,"metadata":{},"sourceType":"module"}