{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/journey/journey.service\";\nimport * as i2 from \"@shared-lib/services/journey/journeyUtilityService/journey-utility.service\";\n\nfunction CircleRadioButtonComponent_div_0_journeys_steps_step_input_radio_button_step_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"journeys-steps-step-input-radio-button-step\", 5);\n    i0.ɵɵlistener(\"valueChange\", function CircleRadioButtonComponent_div_0_journeys_steps_step_input_radio_button_step_6_Template_journeys_steps_step_input_radio_button_step_valueChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.updateValue($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"elements\", ctx_r3.elements)(\"answer\", ctx_r3.answerString);\n  }\n}\n\nfunction CircleRadioButtonComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵlistener(\"click\", function CircleRadioButtonComponent_div_0_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const option_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.radioButtonClicked(option_r1);\n    });\n    i0.ɵɵelement(2, \"ion-icon\", 3);\n    i0.ɵɵelementStart(3, \"label\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtemplate(6, CircleRadioButtonComponent_div_0_journeys_steps_step_input_radio_button_step_6_Template, 1, 2, \"journeys-steps-step-input-radio-button-step\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const option_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    i0.ɵɵproperty(\"id\", \"journeyRadioButton\" + i_r2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"name\", option_r1.checked ? \"radio-button-on\" : \"radio-button-off\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(option_r1.label);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", option_r1.checked);\n  }\n}\n\nexport let CircleRadioButtonComponent = /*#__PURE__*/(() => {\n  class CircleRadioButtonComponent {\n    constructor(journeyService, utilityService) {\n      this.journeyService = journeyService;\n      this.utilityService = utilityService;\n      this.answer = {};\n      this.radioButtonStateChanged = new EventEmitter();\n    }\n\n    ngOnInit() {\n      var _a;\n\n      this.answer = this.journeyService.safeParse(this.value);\n      this.answerString = this.value;\n      const checkedAnswer = this.answer && this.answer[this.element.answerId];\n      (_a = this.element.options) === null || _a === void 0 ? void 0 : _a.forEach(option => {\n        if (checkedAnswer === option.id || !checkedAnswer && option.default) {\n          option.checked = true;\n          const elementObj = this.utilityService.setElements(option.elements, this.isToggle, this.element.idSuffix);\n          this.elements = elementObj.elements;\n        }\n      });\n    }\n\n    radioButtonClicked(option) {\n      const newObject = this.utilityService.radioButtonClick(this.element, this.isToggle, option, this.element.idSuffix);\n      this.elements = newObject.elements;\n      this.element = newObject.element;\n      const newValue = {};\n      newValue[this.element.answerId] = newObject.value;\n      this.updateValue({\n        value: newValue,\n        requiredCompleted: !newObject.isRequiredValid\n      });\n    }\n\n    updateValue(event) {\n      this.answer = Object.assign(Object.assign({}, this.answer), event.value);\n      let radioButtonFilled = true;\n\n      if (this.journeyService.isValueEmpty(this.answer[this.element.answerId])) {\n        radioButtonFilled = false;\n        delete this.answer[this.element.answerId];\n      }\n\n      const state = this.utilityService.updateRadioStateValue(this.answer, radioButtonFilled, this.element, event.requiredCompleted, this.elements);\n      this.radioButtonStateChanged.emit(state);\n    }\n\n  }\n\n  CircleRadioButtonComponent.ɵfac = function CircleRadioButtonComponent_Factory(t) {\n    return new (t || CircleRadioButtonComponent)(i0.ɵɵdirectiveInject(i1.JourneyService), i0.ɵɵdirectiveInject(i2.JourneyUtilityService));\n  };\n\n  CircleRadioButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CircleRadioButtonComponent,\n    selectors: [[\"journeys-steps-step-input-radio-button-circle-radio-button\"]],\n    inputs: {\n      element: \"element\",\n      value: \"value\",\n      isToggle: \"isToggle\"\n    },\n    outputs: {\n      radioButtonStateChanged: \"radioButtonStateChanged\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"main-container\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"main-container\", 3, \"id\"], [1, \"option\", 3, \"click\"], [3, \"name\"], [\"class\", \"option-element\", 3, \"elements\", \"answer\", \"valueChange\", 4, \"ngIf\"], [1, \"option-element\", 3, \"elements\", \"answer\", \"valueChange\"]],\n    template: function CircleRadioButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CircleRadioButtonComponent_div_0_Template, 7, 4, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.element.options);\n      }\n    },\n    styles: [\".main-container[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap}.main-container[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]{margin-bottom:11px;display:flex;flex:0 0 100%}.main-container[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{font-size:16px;color:#000;margin:auto 10px}.main-container[_ngcontent-%COMP%]   .option[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{width:24px;height:24px;color:var(--primary-colors-voya-dark-blue)}.main-container[_ngcontent-%COMP%]   .option-element[_ngcontent-%COMP%]{margin-top:0}\"]\n  });\n  return CircleRadioButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}