{"ast":null,"code":"define(['./match/ConsecutiveTierEmployerMatch'], function (ConsecutiveTierEmployerMatch) {\n  var DateTier = function () {\n    this.em = new ConsecutiveTierEmployerMatch(1);\n    this.nYearOffset = 0;\n    this.nPayPeriodOffset = 0;\n  };\n\n  DateTier.prototype.set = function (nPayPeriods, sCurrentYYYYMMDD, sTierDateYYYYMMDD, dRangeOfSalary, dRateOfMatch) {\n    var nYearDiff = 0;\n    var nMonthDiff = 0;\n    var nDayDiff = 0; // set range of salary and rate of match\n\n    this.nYearOffset = this.nPayPeriodOffset = 0;\n    this.em.setFirstTier(dRangeOfSalary, dRateOfMatch);\n\n    if (sTierDateYYYYMMDD === null || sTierDateYYYYMMDD === \"\") {\n      return;\n    } // year, month, and day strings into integers\n\n\n    var nCurrentYear = parseInt(sCurrentYYYYMMDD.substring(0, 4), 10);\n    var nCurrentMonth = parseInt(sCurrentYYYYMMDD.substring(4, 6), 10);\n    var nCurrentDay = parseInt(sCurrentYYYYMMDD.substring(6, 8), 10);\n    var nTierYear = parseInt(sTierDateYYYYMMDD.substring(0, 4), 10);\n    var nTierMonth = parseInt(sTierDateYYYYMMDD.substring(4, 6), 10);\n    var nTierDay = parseInt(sTierDateYYYYMMDD.substring(6, 8), 10);\n    nYearDiff = nTierYear - nCurrentYear;\n    nMonthDiff = nTierMonth - nCurrentMonth;\n    nDayDiff = nTierDay - nCurrentDay; // is definitely past (or today) ...\n\n    if (nYearDiff < 0 || nYearDiff === 0 && nMonthDiff < 0 || nYearDiff === 0 && nMonthDiff === 0 && nDayDiff <= 0) {\n      return;\n    } // is definitely future\n\n\n    var gcTier = new Date(nTierYear, nTierMonth - 1, nTierDay);\n    var gcTest = new Date(nTierYear, nCurrentMonth - 1, nCurrentDay);\n    var nDayOfYearTier = DateTier.getDOY(gcTier);\n    var nDayOfYearTest = DateTier.getDOY(gcTest);\n    var nDayOfYearDiff = Math.abs(nDayOfYearTest - nDayOfYearTier) + 1;\n    this.nPayPeriodOffset = Math.floor(nDayOfYearDiff / (365 / nPayPeriods));\n\n    if (nDayOfYearTest > nDayOfYearTier) {\n      nYearDiff--;\n      this.nPayPeriodOffset = Math.max(nPayPeriods - this.nPayPeriodOffset, 0);\n    }\n\n    this.nYearOffset = nYearDiff;\n  }; // static method to handle .java Calendar.DAY_OF_YEAR function\n\n\n  DateTier.getDOY = function (jsDate) {\n    var janOne = new Date(jsDate.getFullYear(), 0, 1);\n    return Math.ceil((jsDate - janOne) / 86400000);\n  };\n\n  return DateTier;\n});","map":null,"metadata":{},"sourceType":"script"}