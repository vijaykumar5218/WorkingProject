{"ast":null,"code":"import { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./theme.service\";\nexport let ThemeDirective = /*#__PURE__*/(() => {\n  class ThemeDirective {\n    constructor(_elementRef, _themeService) {\n      this._elementRef = _elementRef;\n      this._themeService = _themeService;\n      this.unsubscribe = new Subject();\n    }\n\n    ngOnInit() {\n      const active = this._themeService.getActiveTheme();\n\n      if (active) {\n        this.updateTheme(active);\n      }\n\n      this._themeService.themeChange.pipe(takeUntil(this.unsubscribe)).subscribe(theme => this.updateTheme(theme));\n    }\n\n    updateTheme(theme) {\n      for (const key in theme.properties) {\n        this._elementRef.nativeElement.style.setProperty(key, theme.properties[key]);\n      }\n    }\n\n  }\n\n  ThemeDirective.ɵfac = function ThemeDirective_Factory(t) {\n    return new (t || ThemeDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.ThemeService));\n  };\n\n  ThemeDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ThemeDirective,\n    selectors: [[\"\", \"app-theme\", \"\"]]\n  });\n  return ThemeDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}