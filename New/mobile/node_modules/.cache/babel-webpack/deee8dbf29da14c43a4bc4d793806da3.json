{"ast":null,"code":"import * as jsonTxt from '@shared-lib/constants/filter-sort.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\n\nfunction FilterPopoverComponent_ion_list_2_ion_item_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\", 6);\n    i0.ɵɵelementStart(1, \"ion-checkbox\", 7);\n    i0.ɵɵlistener(\"ionChange\", function FilterPopoverComponent_ion_list_2_ion_item_3_Template_ion_checkbox_ionChange_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const el_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext(2);\n      return ctx_r4.onChange(el_r3.key);\n    })(\"ngModelChange\", function FilterPopoverComponent_ion_list_2_ion_item_3_Template_ion_checkbox_ngModelChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const el_r3 = restoredCtx.$implicit;\n      return el_r3.isChecked = $event;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementStart(3, \"ion-label\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const el_r3 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", el_r3.isChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassProp(\"active\", el_r3.isChecked);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"color\", el_r3.isChecked ? \"btndarkblue\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(el_r3.name);\n  }\n}\n\nfunction FilterPopoverComponent_ion_list_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\", 4);\n    i0.ɵɵelementStart(1, \"h5\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, FilterPopoverComponent_ion_list_2_ion_item_3_Template, 5, 5, \"ion-item\", 5);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const data_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(data_r1.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", data_r1.values);\n  }\n}\n\nexport let FilterPopoverComponent = /*#__PURE__*/(() => {\n  class FilterPopoverComponent {\n    constructor(popoverCtrl) {\n      this.popoverCtrl = popoverCtrl;\n      this.filterContent = jsonTxt.default;\n      this.selctedCheckBox = [];\n      this.storedKeyArr = [];\n    }\n\n    ionViewDidEnter() {\n      this.resetCheckbox();\n      this.slctdFiltrCopy = [];\n      this.filterList.forEach(el => {\n        const arry = el.values.filter(val => {\n          return this.storedKeyArr.includes(val.key);\n        });\n        this.slctdFiltrCopy.push({\n          label: el.label,\n          values: arry\n        });\n      });\n    }\n\n    resetCheckbox() {\n      this.filterList.forEach(el => {\n        for (const element of el.values) {\n          element.isChecked = false;\n        }\n\n        el.values.filter(val => {\n          return this.storedKeyArr.includes(val.key);\n        }).forEach(e => {\n          e.isChecked = true;\n        });\n      });\n    }\n\n    onChange(item) {\n      this.selectedFilter = [];\n      this.filterList.forEach(el => {\n        const arr = el.values.filter(val => {\n          return val.isChecked;\n        });\n        this.selectedFilter.push({\n          label: el.label,\n          values: arr\n        });\n      });\n\n      if (!this.selctedCheckBox.includes(item)) {\n        this.selctedCheckBox.push(item);\n      } else {\n        this.selctedCheckBox.splice(this.selctedCheckBox.indexOf(item), 1);\n      }\n    }\n\n    ngOnInit() {\n      this.storedKeyArr = this.service.getFiltSlcted();\n    }\n\n    closeDialog(save) {\n      if (save) {\n        this.service.changeFilt(this.selectedFilter);\n        this.service.setFiltSlcted(this.selctedCheckBox);\n      } else {\n        this.service.changeFilt(this.slctdFiltrCopy);\n      }\n\n      this.popoverCtrl.dismiss();\n    }\n\n  }\n\n  FilterPopoverComponent.ɵfac = function FilterPopoverComponent_Factory(t) {\n    return new (t || FilterPopoverComponent)(i0.ɵɵdirectiveInject(i1.PopoverController));\n  };\n\n  FilterPopoverComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FilterPopoverComponent,\n    selectors: [[\"app-filter-popover\"]],\n    inputs: {\n      filterList: \"filterList\",\n      service: \"service\"\n    },\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"list-wrap\"], [\"class\", \"list\", \"lines\", \"none\", 4, \"ngFor\", \"ngForOf\"], [1, \"btn-wrap\"], [\"expand\", \"block\", \"fill\", \"clear\", \"color\", \"btndarkblue\", 1, \"font-18\", \"save-button\", 3, \"click\"], [\"lines\", \"none\", 1, \"list\"], [\"lines\", \"none\", \"class\", \"ion-no-padding\", 4, \"ngFor\", \"ngForOf\"], [\"lines\", \"none\", 1, \"ion-no-padding\"], [\"color\", \"btndarkblue\", \"mode\", \"ios\", 3, \"ngModel\", \"ionChange\", \"ngModelChange\"], [\"src\", \"assets/icon/check.svg\", \"alt\", \"\", \"srcset\", \"\", 1, \"checkmark\"], [3, \"color\"]],\n    template: function FilterPopoverComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-content\");\n        i0.ɵɵelementStart(1, \"div\", 0);\n        i0.ɵɵtemplate(2, FilterPopoverComponent_ion_list_2_Template, 4, 2, \"ion-list\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function FilterPopoverComponent_Template_ion_button_click_4_listener() {\n          return ctx.closeDialog(false);\n        });\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function FilterPopoverComponent_Template_ion_button_click_6_listener() {\n          return ctx.closeDialog(true);\n        });\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.filterList);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.filterContent.cancelLabel, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.filterContent.okLable, \" \");\n      }\n    },\n    directives: [i1.IonContent, i2.NgForOf, i1.IonButton, i1.IonList, i1.IonItem, i1.IonCheckbox, i1.BooleanValueAccessor, i3.NgControlStatus, i3.NgModel, i1.IonLabel],\n    styles: [\".list-wrap[_ngcontent-%COMP%]{max-height:310px;overflow-y:scroll;padding:10px 20px 0}.list-wrap[_ngcontent-%COMP%]   .list[_ngcontent-%COMP%]{margin-bottom:10px}.list-wrap[_ngcontent-%COMP%]   .list[_ngcontent-%COMP%]   .checkmark[_ngcontent-%COMP%]{opacity:0;margin-right:5px;position:absolute;left:0}.list-wrap[_ngcontent-%COMP%]   .list[_ngcontent-%COMP%]   .checkmark.active[_ngcontent-%COMP%]{opacity:1}.list-wrap[_ngcontent-%COMP%]   .list[_ngcontent-%COMP%]   ion-checkbox[_ngcontent-%COMP%]::part(container){display:none}.btn-wrap[_ngcontent-%COMP%]{display:flex;justify-content:space-between;border-top:1px solid var(--secondary-colors-medium-gray-3)}.btn-wrap[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{display:inline-flex;flex:1}.btn-wrap[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]:first-child{border-right:1px solid var(--secondary-colors-medium-gray-3)}\"]\n  });\n  return FilterPopoverComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}