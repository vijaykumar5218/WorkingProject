{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/journey/journey.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./modal-step/modal-step.component\";\n\nconst _c0 = function (a0) {\n  return {\n    centered: a0\n  };\n};\n\nfunction ModalGenericComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 1);\n    i0.ɵɵelementStart(1, \"journeys-modal-step-component\", 2);\n    i0.ɵɵlistener(\"isRequired\", function ModalGenericComponent_div_0_Template_journeys_modal_step_component_isRequired_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const ele_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.setRequired($event, ele_r1);\n    })(\"valueChange\", function ModalGenericComponent_div_0_Template_journeys_modal_step_component_valueChange_1_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const ele_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.updateElementValue($event, ele_r1.answerId);\n    })(\"continueClick\", function ModalGenericComponent_div_0_Template_journeys_modal_step_component_continueClick_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.handleContinueClick($event);\n    })(\"saveValue\", function ModalGenericComponent_div_0_Template_journeys_modal_step_component_saveValue_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.handleSaveValue($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ele_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c0, ele_r1.centered));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ele\", ele_r1)(\"requiredInputsFilled\", ctx_r0.requiredInputsFilled)(\"accumulateAnswers\", ctx_r0.element.accumulateAnswers)(\"values\", ctx_r0.stepValue)(\"answer\", ctx_r0.stepAnswer);\n  }\n}\n\nexport let ModalGenericComponent = /*#__PURE__*/(() => {\n  class ModalGenericComponent {\n    constructor(journeyService, changeDetectorRef) {\n      this.journeyService = journeyService;\n      this.changeDetectorRef = changeDetectorRef;\n      this.requiredAnswerIds = [];\n      this.saveValue = new EventEmitter();\n    }\n\n    ngOnInit() {\n      if (!this.element.accumulateAnswers) {\n        this.stepValue = this.journeyService.safeParse(this.values && this.values[this.element.answerId]);\n\n        if (this.stepValue) {\n          this.value = this.stepValue;\n        }\n\n        if (this.answer) {\n          const parsedAnswer = this.journeyService.safeParse(this.answer);\n          this.stepAnswer = parsedAnswer && parsedAnswer[this.element.answerId];\n        }\n      }\n    }\n\n    handleContinueClick(event) {\n      if (event.save) {\n        if (!this.value.id) {\n          this.value.id = Date.now().toString();\n        }\n\n        this.saveValue.emit(JSON.stringify(this.value));\n\n        if (this.element.answerId === 'addAChildModal' && this.element.accumulateAnswers) {\n          const currentJourney = this.journeyService.getCurrentJourney();\n          this.journeyService.journeyServiceMap[currentJourney.journeyID].addDependent(this.value);\n        }\n\n        this.journeyService.closeModal();\n      }\n    }\n\n    setRequired(required, element) {\n      if (required) {\n        this.requiredAnswerIds.push(element.answerId);\n        this.checkForContinue();\n      }\n    }\n\n    checkForContinue() {\n      let requiredCompleted = true;\n      this.requiredAnswerIds.forEach(id => {\n        if (!this.value || this.journeyService.isValueEmpty(this.value[id])) {\n          requiredCompleted = false;\n        }\n      });\n      this.requiredInputsFilled = requiredCompleted;\n      this.changeDetectorRef.detectChanges();\n    }\n\n    updateElementValue(value, id) {\n      if (!this.value) {\n        this.value = {};\n      }\n\n      this.value[id] = value;\n      this.checkForContinue();\n    }\n\n    handleSaveValue(value) {\n      this.saveValue.emit(value);\n    }\n\n  }\n\n  ModalGenericComponent.ɵfac = function ModalGenericComponent_Factory(t) {\n    return new (t || ModalGenericComponent)(i0.ɵɵdirectiveInject(i1.JourneyService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ModalGenericComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ModalGenericComponent,\n    selectors: [[\"journeys-modal-generic-component\"]],\n    inputs: {\n      element: \"element\",\n      values: \"values\",\n      answer: \"answer\"\n    },\n    outputs: {\n      saveValue: \"saveValue\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngClass\"], [3, \"ele\", \"requiredInputsFilled\", \"accumulateAnswers\", \"values\", \"answer\", \"isRequired\", \"valueChange\", \"continueClick\", \"saveValue\"]],\n    template: function ModalGenericComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ModalGenericComponent_div_0_Template, 2, 8, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.element.elements);\n      }\n    },\n    directives: [i2.NgForOf, i2.NgClass, i3.ModalStepComponent],\n    styles: [\"[_nghost-%COMP%]{overflow:scroll}[_nghost-%COMP%]   .centered[_ngcontent-%COMP%]{text-align:center}\"]\n  });\n  return ModalGenericComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}