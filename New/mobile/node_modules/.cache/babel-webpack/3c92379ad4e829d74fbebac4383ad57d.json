{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { THEMES, ACTIVE_THEME } from './symbols';\nimport * as i0 from \"@angular/core\";\nexport let ThemeService = /*#__PURE__*/(() => {\n  class ThemeService {\n    constructor(themes, theme) {\n      this.themes = themes;\n      this.theme = theme;\n      this.themeChange = new EventEmitter();\n    }\n\n    getActiveTheme() {\n      const theme = this.themes.find(t => t.name === this.theme);\n\n      if (!theme) {\n        throw new Error(`Theme not found: '${this.theme}'`);\n      }\n\n      return theme;\n    }\n\n    setTheme(name) {\n      this.theme = name;\n      this.themeChange.emit(this.getActiveTheme());\n    }\n\n  }\n\n  ThemeService.ɵfac = function ThemeService_Factory(t) {\n    return new (t || ThemeService)(i0.ɵɵinject(THEMES), i0.ɵɵinject(ACTIVE_THEME));\n  };\n\n  ThemeService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ThemeService,\n    factory: ThemeService.ɵfac\n  });\n  return ThemeService;\n})();","map":null,"metadata":{},"sourceType":"module"}