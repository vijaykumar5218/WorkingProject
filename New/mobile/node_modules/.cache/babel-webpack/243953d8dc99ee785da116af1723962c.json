{"ast":null,"code":"define(['./util/DateUtilities'], function (DateUtilities) {\n  //  Constructor\n  var IRSConstants = {}; //  Static var declarations ------------------------------------\n\n  IRSConstants.CATCHUP = 0;\n  IRSConstants._415c1A = 1;\n  IRSConstants._402g1 = 2;\n  IRSConstants._457e15 = 3;\n  IRSConstants._414v = 4;\n  IRSConstants._401a17 = 5;\n  IRSConstants.UNSET = -1;\n  IRSConstants.UNKNOWN = 0;\n  IRSConstants._401a = 1;\n  IRSConstants._401k = 2;\n  IRSConstants._403b = 3;\n  IRSConstants._457b = 4; //  Private var declarations ------------------------------------\n\n  var irsValues = {};\n  var doubleArray = [0, 0, 0, 0, 0, 0];\n  var limit_labels = [\"Catch Up Age\", \"415(c)(1)(A)\", \"402(g)(1)\", \"457(e)(15)\", \"414(v)\", \"401(a)(17)\"];\n  var limit_properties_entries = [\"age\", \"415c1A\", \"402g1\", \"457e15\", \"414v\", \"401a17\"];\n  var irc_code_labels = [\"\", \"401(a)\", \"401(k)\", \"403(b)\", \"457(b)\"]; //  Private method Declarations ------------------------------------\n\n  var _getLimit = function (index) {\n    var d = doubleArray[index];\n    return d;\n  }; //  Static method Declarations ------------------------------------\n\n\n  IRSConstants.init = function () {\n    this.reset();\n  };\n\n  IRSConstants.reset = function () {\n    //doubleArray[this.CATCHUP ] = irsValues[ 'age' ] ;\n    doubleArray[this.CATCHUP] = irsValues[limit_properties_entries[IRSConstants.CATCHUP]];\n    doubleArray[this._415c1A] = irsValues[limit_properties_entries[IRSConstants._415c1A]];\n    doubleArray[this._402g1] = irsValues[limit_properties_entries[IRSConstants._402g1]];\n    doubleArray[this._457e15] = irsValues[limit_properties_entries[IRSConstants._457e15]];\n    doubleArray[this._414v] = irsValues[limit_properties_entries[IRSConstants._414v]];\n    doubleArray[this._401a17] = irsValues[limit_properties_entries[IRSConstants._401a17]];\n  };\n\n  IRSConstants.getLimit = function (index, frequency) {\n    var _limit = _getLimit(index);\n\n    if (frequency) {\n      frequency = frequency < 1 ? 1 : frequency;\n      _limit = _limit / frequency;\n    }\n\n    return _limit;\n  };\n\n  IRSConstants.getIRClabel = function (index) {\n    var s = irc_code_labels[index];\n    return s;\n  };\n\n  IRSConstants.getIRCconst = function (label) {\n    var r = IRSConstants.UNKNOWN;\n\n    if (label !== null) {\n      r = IRSConstants.UNKNOWN;\n\n      if (label !== \"\") {\n        for (var n = 0; n < irc_code_labels.length; n++) {\n          if (irc_code_labels[n] == label) {\n            r = n;\n            break;\n          }\n        }\n      }\n    }\n\n    return r;\n  };\n\n  IRSConstants.getLimitLabel = function (index) {\n    return limit_labels[index];\n  };\n\n  IRSConstants.getIRSLimits = function () {\n    return doubleArray;\n  };\n\n  IRSConstants.setIRSLimits = function (limits) {\n    irsValues = limits;\n    IRSConstants.reset();\n  };\n\n  IRSConstants.getIRSLimitLabels = function () {\n    return limit_labels;\n  };\n\n  IRSConstants.irsCodeEvaluator = function (s) {\n    var retId = IRSConstants.UNKNOWN;\n    s = s.toUpperCase().trim();\n\n    if (s.indexOf(\"401\") > -1) {\n      retId = IRSConstants._401k;\n    }\n\n    if (s.indexOf(\"401\") > -1 && s.indexOf(\"a\") > -1) {\n      retId = IRSConstants._401a;\n    }\n\n    if (s.indexOf(\"401\") > -1 && s.indexOf(\"k\") > -1) {\n      retId = IRSConstants._401k;\n    }\n\n    if (s.indexOf(\"403\") > -1) {\n      retId = IRSConstants._403b;\n    }\n\n    if (s.indexOf(\"457\") > -1) {\n      retId = IRSConstants._457b;\n    }\n\n    return retId;\n  };\n\n  return IRSConstants;\n});","map":null,"metadata":{},"sourceType":"script"}