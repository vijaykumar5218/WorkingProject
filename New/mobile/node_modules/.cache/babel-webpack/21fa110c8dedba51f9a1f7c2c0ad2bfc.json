{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { MedicalConsentPage } from './medical-consent/medical-consent.page';\nimport * as pageText from './constants/text-data.json';\nimport { TPAStreamConnectPage } from '../tpastream-connect/tpastream-connect.page';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@shared-lib/services/benefits/benefits.service\";\nimport * as i3 from \"@shared-lib/services/utility/utility.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@shared-lib/services/platform/platform.service\";\nimport * as i6 from \"../../../services/access/access.service\";\nimport * as i7 from \"@angular/common\";\nexport let ConsentRequiredComponent = /*#__PURE__*/(() => {\n  class ConsentRequiredComponent {\n    constructor(modalController, benefitServices, sharedUtilityService, router, platformService, accessService) {\n      this.modalController = modalController;\n      this.benefitServices = benefitServices;\n      this.sharedUtilityService = sharedUtilityService;\n      this.router = router;\n      this.platformService = platformService;\n      this.accessService = accessService;\n      this.pageText = pageText;\n      this.isTPAStream = false;\n      this.platformService.isDesktop().subscribe(data => {\n        this.isDesktop = data;\n      });\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const {\n          enableTPA\n        } = yield this.accessService.checkMyvoyageAccess();\n        this.isTPAStream = enableTPA === 'Y';\n        this.isWeb = this.sharedUtilityService.getIsWeb();\n        this.benefitsContent = yield this.benefitServices.getNoBenefitContents();\n        const content = this.benefitsContent.Insights_OverlayMessage_ReviewAuthorization;\n        this.contentJSON = JSON.parse(content);\n      });\n    }\n\n    skip() {\n      this.router.navigateByUrl('/coverages/plans');\n      this.benefitServices.publishSelectedTab('plans');\n    }\n\n    allowAuthorization() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.isTPAStream) {\n          const modal = yield this.modalController.create({\n            component: TPAStreamConnectPage,\n            cssClass: 'modal-fullscreen',\n            swipeToClose: false\n          });\n          modal.present();\n        } else {\n          if (this.isWeb && this.isDesktop) {\n            this.router.navigateByUrl('coverages/review');\n          } else {\n            const modal = yield this.modalController.create({\n              component: MedicalConsentPage,\n              cssClass: 'modal-fullscreen',\n              swipeToClose: false,\n              componentProps: {\n                contentData: JSON.parse(this.benefitsContent.Insights_ClaimsAuthorization_ReadDisclosure),\n                back: this.back\n              }\n            });\n            modal.present();\n          }\n        }\n      });\n    }\n\n  }\n\n  ConsentRequiredComponent.ɵfac = function ConsentRequiredComponent_Factory(t) {\n    return new (t || ConsentRequiredComponent)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.BenefitsService), i0.ɵɵdirectiveInject(i3.SharedUtilityService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.PlatformService), i0.ɵɵdirectiveInject(i6.AccessService));\n  };\n\n  ConsentRequiredComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConsentRequiredComponent,\n    selectors: [[\"app-consent-required\"]],\n    inputs: {\n      back: \"back\"\n    },\n    decls: 13,\n    vars: 6,\n    consts: [[3, \"ngClass\"], [3, \"src\"], [1, \"header\"], [1, \"body\"], [\"id\", \"allow-auth\", \"name\", \"submit\", \"shape\", \"round\", \"expand\", \"block\", \"type\", \"submit\", \"color\", \"btncolor\", 1, \"font-18\", \"save-button\", 3, \"click\"], [1, \"skip\"], [3, \"click\"]],\n    template: function ConsentRequiredComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"ion-card\");\n        i0.ɵɵelementStart(2, \"ion-card-content\");\n        i0.ɵɵelement(3, \"img\", 1);\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 3);\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"ion-button\", 4);\n        i0.ɵɵlistener(\"click\", function ConsentRequiredComponent_Template_ion_button_click_8_listener() {\n          return ctx.allowAuthorization();\n        });\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 5);\n        i0.ɵɵelementStart(11, \"span\", 6);\n        i0.ɵɵlistener(\"click\", function ConsentRequiredComponent_Template_span_click_11_listener() {\n          return ctx.skip();\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", ctx.isWeb ? \"consent web-consent\" : \"consent\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵpropertyInterpolate(\"src\", ctx.contentJSON == null ? null : ctx.contentJSON.image_url, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.contentJSON == null ? null : ctx.contentJSON.consent_title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.contentJSON == null ? null : ctx.contentJSON.consent_description);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isTPAStream ? ctx.pageText.reviewTPA : ctx.pageText.allowAuth, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.pageText.skip);\n      }\n    },\n    directives: [i7.NgClass, i1.IonCard, i1.IonCardContent, i1.IonButton],\n    styles: [\".consent[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{margin:20px auto 24px;display:block}.consent[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{font-size:24px;font-weight:600;text-align:center;margin-bottom:11px;color:var(--primary-colors-voya-black)}.consent[_ngcontent-%COMP%]   .body[_ngcontent-%COMP%]{font-size:16px;line-height:1.25;letter-spacing:.08px;text-align:center;color:var(--primary-colors-voya-black)}.consent[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{display:block;width:auto;height:40px;align-items:center;margin:21px auto 20px}.consent[_ngcontent-%COMP%]   .skip[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.consent[_ngcontent-%COMP%]   .skip[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{font-weight:400;font-size:16px;line-height:20px;letter-spacing:.005em;-webkit-text-decoration-line:underline;text-decoration-line:underline;color:var(--primary-colors-voya-dark-blue)}.web-consent[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]{margin-bottom:0;background:var(--ion-color-white);box-shadow:none}.web-consent[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{max-width:300px}.web-consent[_ngcontent-%COMP%]   ion-card[_ngcontent-%COMP%]   ion-card-content[_ngcontent-%COMP%]{padding-bottom:0}\"]\n  });\n  return ConsentRequiredComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}