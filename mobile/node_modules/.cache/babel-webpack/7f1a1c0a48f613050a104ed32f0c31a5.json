{"ast":null,"code":"define([], function () {\n  var Utilities = {};\n  /**\n   * class creator\n   * @param  {function} Parent parent function\n   * @param  {function} Child  child function\n   * @return {function}        constructor for child function\n   */\n\n  Utilities.extend = function (Parent, Child) {\n    var constructor = function () {\n      Child.prototype = new Parent();\n      Child.prototype.constructor = Child; //pass any prototype extended functions created after the extend \n      //to the new class object\n\n      var constructedClass = new Child();\n\n      for (var i in constructor.prototype) {\n        constructedClass[i] = constructor.prototype[i];\n      }\n\n      return constructedClass;\n    }; //pass any public parent or child variables to the constructor\n\n\n    for (var i in Parent) {\n      constructor[i] = Parent[i];\n    }\n\n    for (var i in Child) {\n      constructor[i] = Child[i];\n    }\n\n    return constructor;\n  };\n\n  return Utilities;\n});","map":null,"metadata":{},"sourceType":"script"}