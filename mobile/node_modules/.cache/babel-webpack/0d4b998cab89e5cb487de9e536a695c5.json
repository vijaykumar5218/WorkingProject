{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@shared-lib/services/error/error.service\";\nexport const header = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n    'X-Requested-By': 'myvoyageui'\n  })\n};\nexport let WebBaseService = /*#__PURE__*/(() => {\n  class WebBaseService {\n    constructor(httpClient, errorService) {\n      this.httpClient = httpClient;\n      this.errorService = errorService;\n      this.httpHeader = header;\n    }\n\n    get(url) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          return this.httpClient.get(url, this.httpHeader).toPromise();\n        } catch (error) {\n          this.errorService.setDisplayError(true);\n          return null;\n        }\n      });\n    }\n\n    post(url, request) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          return this.httpClient.post(url, request, this.httpHeader).toPromise();\n        } catch (error) {\n          this.errorService.setDisplayError(true);\n          return null;\n        }\n      });\n    }\n\n    put(url, request) {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          return this.httpClient.put(url, request, this.httpHeader).toPromise();\n        } catch (error) {\n          this.errorService.setDisplayError(true);\n          return null;\n        }\n      });\n    }\n\n  }\n\n  WebBaseService.ɵfac = function WebBaseService_Factory(t) {\n    return new (t || WebBaseService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ErrorService));\n  };\n\n  WebBaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebBaseService,\n    factory: WebBaseService.ɵfac,\n    providedIn: 'root'\n  });\n  return WebBaseService;\n})();","map":null,"metadata":{},"sourceType":"module"}