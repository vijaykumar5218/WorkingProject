{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../mobile/src/app/modules/shared/service/authentication/authentication.service\";\nimport * as i2 from \"@shared-lib/services/event-tracker/event-tracking.service\";\nimport * as i3 from \"../utility/utility.service\";\nexport let PushNotificationsService = /*#__PURE__*/(() => {\n  class PushNotificationsService {\n    constructor(authService, eventTrackingService, utilityService) {\n      var _this = this;\n\n      this.authService = authService;\n      this.eventTrackingService = eventTrackingService;\n      this.utilityService = utilityService;\n\n      if (!this.utilityService.getIsWeb()) {\n        this.mcSDK = window.MCCordovaPlugin;\n        this.mcSDK.setOnNotificationOpenedListener( /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (event) {\n            _this.authService.didLaunchWithURL(event.values.url);\n\n            _this.captureCTAClickEvent(event.values.url);\n          });\n\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }());\n      }\n    }\n\n    setContactKey(partyId) {\n      this.mcSDK.setContactKey(partyId);\n    }\n\n    captureCTAClickEvent(url) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        const eventTrackingEvent = {\n          eventName: 'CTAClick',\n          passThruAttributes: [{\n            attributeName: 'source',\n            attributeValue: 'push'\n          }, {\n            attributeName: 'redirect_url',\n            attributeValue: url\n          }]\n        };\n\n        _this2.eventTrackingService.eventTrackingAfterAuthorized(eventTrackingEvent);\n      })();\n    }\n\n  }\n\n  PushNotificationsService.ɵfac = function PushNotificationsService_Factory(t) {\n    return new (t || PushNotificationsService)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.EventTrackingService), i0.ɵɵinject(i3.SharedUtilityService));\n  };\n\n  PushNotificationsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PushNotificationsService,\n    factory: PushNotificationsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PushNotificationsService;\n})();","map":null,"metadata":{},"sourceType":"module"}