{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { HeaderType } from '@shared-lib/constants/headerType.enum';\nimport * as settingsOption from '@shared-lib/components/settings/constants/settingsOption.json';\nimport { AlertComponent } from '@shared-lib/components/alert/alert.component';\nimport { FooterType } from '@shared-lib/modules/footer/constants/footerType.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/header-footer-type/headerFooterType.service\";\nimport * as i2 from \"../../shared/service/authentication/authentication.service\";\nimport * as i3 from \"../../shared/service/authentication/vault.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@shared-lib/services/settings/settings.service\";\nimport * as i6 from \"../../../../../../shared-lib/components/loading/loading.component\";\nimport * as i7 from \"../../../../../../shared-lib/components/settings/components/menu/menu.component\";\nimport * as i8 from \"@angular/common\";\nimport * as i9 from \"@angular/forms\";\n\nconst _c0 = function (a0) {\n  return {\n    \"margin-top\": a0\n  };\n};\n\nfunction SettingsPage_ion_row_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-row\", 6);\n    i0.ɵɵelementStart(1, \"ion-col\", 7);\n    i0.ɵɵelement(2, \"img\", 8);\n    i0.ɵɵelementStart(3, \"ion-text\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-col\", 10);\n    i0.ɵɵelementStart(6, \"ion-toggle\", 11);\n    i0.ɵɵlistener(\"ngModelChange\", function SettingsPage_ion_row_3_Template_ion_toggle_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return ctx_r1.faceIDEnabled = $event;\n    })(\"ionChange\", function SettingsPage_ion_row_3_Template_ion_toggle_ionChange_6_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.onFaceIDChanged();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(4, _c0, ctx_r0.marginTop));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"src\", ctx_r0.biometricsIcon, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.biometricsText);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.faceIDEnabled);\n  }\n}\n\nexport let SettingsPage = /*#__PURE__*/(() => {\n  class SettingsPage {\n    constructor(headerFooterType, authService, vaultService, platform, modalController, settingsService) {\n      this.headerFooterType = headerFooterType;\n      this.authService = authService;\n      this.vaultService = vaultService;\n      this.platform = platform;\n      this.modalController = modalController;\n      this.settingsService = settingsService;\n      this.menuConfig = {\n        items: []\n      };\n      this.options = JSON.parse(JSON.stringify(settingsOption)).default;\n      this.actionOption = {\n        headername: 'More',\n        btnright: true,\n        buttonRight: {\n          name: '',\n          link: 'notification'\n        }\n      };\n      this.faceIDEnabled = false;\n      this.faceIDAllowed = false;\n      this.marginTop = '28px';\n      this.loading = true;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const settingsDisplayFlags = yield this.settingsService.getSettingsDisplayFlags();\n        this.setMenuItems(settingsDisplayFlags);\n      });\n    }\n\n    ionViewWillEnter() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.headerFooterType.publishType({\n          type: HeaderType.navbar,\n          actionOption: this.actionOption\n        }, {\n          type: FooterType.tabsnav\n        });\n        this.faceIDAllowed = yield this.vaultService.isFaceIDAvailableOnDevice();\n        this.faceIDEnabled = this.vaultService.isFaceIDEnabled();\n        this.biometricsText = yield this.authService.getBiometricsLabel();\n        this.biometricsIcon = yield this.authService.getBiometricsIconName();\n\n        if (this.platform.is('ios')) {\n          this.marginTop = '24px';\n        }\n      });\n    }\n\n    setMenuItems(settingsDisplayFlags) {\n      let route;\n\n      for (const option of this.options.option) {\n        if (option.id === 'feedback' || option.text === 'Terms of Use' || option.id == 'manageAccounts') {\n          route = '';\n        } else {\n          route = '/settings/';\n        }\n\n        if (option.id !== 'contactAdvisor' || settingsDisplayFlags.displayContactLink) {\n          this.menuConfig.items.push({\n            id: option.id,\n            route: route + option.url,\n            text: option.text,\n            icon: option.icon\n          });\n        }\n      }\n\n      this.loading = false;\n    }\n\n    onFaceIDChanged() {\n      const faceIDEnabled = this.vaultService.isFaceIDEnabled();\n\n      if (this.faceIDEnabled && !faceIDEnabled) {\n        this.vaultService.enableFaceID().then(result => {\n          if (result) {\n            this.vaultService.setDefaultFaceIDDisabled(false);\n          } else {\n            this.faceIDEnabled = false;\n          }\n        });\n      } else if (!this.faceIDEnabled && faceIDEnabled) {\n        this.vaultService.disableFaceID();\n        this.vaultService.setDefaultFaceIDDisabled(true);\n      }\n    }\n\n    logout() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: AlertComponent,\n          cssClass: 'modal-not-fullscreen',\n          swipeToClose: false,\n          componentProps: {\n            titleMessage: this.options.signOutQuestion,\n            yesButtonTxt: this.options.button,\n            noButtonTxt: this.options.close,\n            saveFunction: () => __awaiter(this, void 0, void 0, function* () {\n              return new Promise(res => {\n                res(true);\n                this.authService.logout();\n              });\n            })\n          }\n        });\n        return modal.present();\n      });\n    }\n\n  }\n\n  SettingsPage.ɵfac = function SettingsPage_Factory(t) {\n    return new (t || SettingsPage)(i0.ɵɵdirectiveInject(i1.HeaderFooterTypeService), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.VaultService), i0.ɵɵdirectiveInject(i4.Platform), i0.ɵɵdirectiveInject(i4.ModalController), i0.ɵɵdirectiveInject(i5.SettingsService));\n  };\n\n  SettingsPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingsPage,\n    selectors: [[\"app-settings\"]],\n    decls: 8,\n    vars: 5,\n    consts: [[3, \"loading\"], [3, \"config\", \"isHelp\"], [1, \"ion-no-padding\", \"bottom\"], [\"class\", \"biometrics-row\", 4, \"ngIf\"], [1, \"mt-42\"], [\"id\", \"sign-out\", \"name\", \"sign-out\", \"shape\", \"round\", \"expand\", \"block\", \"color\", \"btncolor\", \"fill\", \"outline\", 1, \"font-18\", \"sign-out\", 3, \"click\"], [1, \"biometrics-row\"], [\"size\", \"10\", 1, \"biometrics-label-col\", 3, \"ngStyle\"], [\"alt\", \"biometrics\", 3, \"src\"], [1, \"font-16\", \"font-w-600\"], [\"size\", \"2\", 1, \"biometrics-toggle-col\"], [1, \"biometrics-toggle\", 3, \"ngModel\", \"ngModelChange\", \"ionChange\"]],\n    template: function SettingsPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-loading\", 0);\n        i0.ɵɵelement(1, \"app-menu\", 1);\n        i0.ɵɵelementStart(2, \"ion-grid\", 2);\n        i0.ɵɵtemplate(3, SettingsPage_ion_row_3_Template, 7, 6, \"ion-row\", 3);\n        i0.ɵɵelementStart(4, \"ion-row\", 4);\n        i0.ɵɵelementStart(5, \"ion-col\");\n        i0.ɵɵelementStart(6, \"ion-button\", 5);\n        i0.ɵɵlistener(\"click\", function SettingsPage_Template_ion_button_click_6_listener() {\n          return ctx.logout();\n        });\n        i0.ɵɵtext(7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"loading\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"config\", ctx.menuConfig)(\"isHelp\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.faceIDAllowed);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.options.button, \" \");\n      }\n    },\n    directives: [i6.LoadingComponent, i7.MenuComponent, i4.IonGrid, i8.NgIf, i4.IonRow, i4.IonCol, i4.IonButton, i8.NgStyle, i4.IonText, i4.IonToggle, i4.BooleanValueAccessor, i9.NgControlStatus, i9.NgModel],\n    styles: [\"[_nghost-%COMP%]{background-color:var(--ion-color-white)}[_nghost-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:20px}[_nghost-%COMP%]   .bottom[_ngcontent-%COMP%]{width:100%;margin-bottom:30px}[_nghost-%COMP%]   .bottom[_ngcontent-%COMP%]   .sign-out[_ngcontent-%COMP%]{font-size:16px;font-weight:600;line-height:1.25;letter-spacing:.2px;color:var(--primary-colors-voya-dark-blue);width:94px;margin:auto}[_nghost-%COMP%]   .biometrics-row[_ngcontent-%COMP%]{margin:0 20px;border-bottom:1px solid var(--color-lightgrey)}[_nghost-%COMP%]   .biometrics-label-col[_ngcontent-%COMP%]{margin:16px 0}[_nghost-%COMP%]   .biometrics-label-col[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:24px;height:24px;vertical-align:super}[_nghost-%COMP%]   .biometrics-label-col[_ngcontent-%COMP%]   ion-text[_ngcontent-%COMP%]{color:var(--primary-colors-voya-black);margin-left:8px;vertical-align:top;line-height:24px}[_nghost-%COMP%]   .biometrics-toggle-col[_ngcontent-%COMP%]{margin:16px 0}[_nghost-%COMP%]   .biometrics-toggle-col[_ngcontent-%COMP%]   ion-toggle[_ngcontent-%COMP%]{float:right;margin:13px 20px 0 0}\"]\n  });\n  return SettingsPage;\n})();","map":null,"metadata":{},"sourceType":"module"}