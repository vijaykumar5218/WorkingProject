{"ast":null,"code":"var _regeneratorRuntime = require(\"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/regenerator\");\n\n/******/\n(function (modules) {\n  // webpackBootstrap\n\n  /******/\n  // The module cache\n\n  /******/\n  var installedModules = {};\n  /******/\n\n  /******/\n  // The require function\n\n  /******/\n\n  function __webpack_require__(moduleId) {\n    /******/\n\n    /******/\n    // Check if module is in cache\n\n    /******/\n    if (installedModules[moduleId]) {\n      /******/\n      return installedModules[moduleId].exports;\n      /******/\n    }\n    /******/\n    // Create a new module (and put it into the cache)\n\n    /******/\n\n\n    var module = installedModules[moduleId] = {\n      /******/\n      i: moduleId,\n\n      /******/\n      l: false,\n\n      /******/\n      exports: {}\n      /******/\n\n    };\n    /******/\n\n    /******/\n    // Execute the module function\n\n    /******/\n\n    modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n    /******/\n\n    /******/\n    // Flag the module as loaded\n\n    /******/\n\n    module.l = true;\n    /******/\n\n    /******/\n    // Return the exports of the module\n\n    /******/\n\n    return module.exports;\n    /******/\n  }\n  /******/\n\n  /******/\n\n  /******/\n  // expose the modules object (__webpack_modules__)\n\n  /******/\n\n\n  __webpack_require__.m = modules;\n  /******/\n\n  /******/\n  // expose the module cache\n\n  /******/\n\n  __webpack_require__.c = installedModules;\n  /******/\n\n  /******/\n  // define getter function for harmony exports\n\n  /******/\n\n  __webpack_require__.d = function (exports, name, getter) {\n    /******/\n    if (!__webpack_require__.o(exports, name)) {\n      /******/\n      Object.defineProperty(exports, name, {\n        enumerable: true,\n        get: getter\n      });\n      /******/\n    }\n    /******/\n\n  };\n  /******/\n\n  /******/\n  // define __esModule on exports\n\n  /******/\n\n\n  __webpack_require__.r = function (exports) {\n    /******/\n    if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n      /******/\n      Object.defineProperty(exports, Symbol.toStringTag, {\n        value: 'Module'\n      });\n      /******/\n    }\n    /******/\n\n\n    Object.defineProperty(exports, '__esModule', {\n      value: true\n    });\n    /******/\n  };\n  /******/\n\n  /******/\n  // create a fake namespace object\n\n  /******/\n  // mode & 1: value is a module id, require it\n\n  /******/\n  // mode & 2: merge all properties of value into the ns\n\n  /******/\n  // mode & 4: return value when already ns object\n\n  /******/\n  // mode & 8|1: behave like require\n\n  /******/\n\n\n  __webpack_require__.t = function (value, mode) {\n    /******/\n    if (mode & 1) value = __webpack_require__(value);\n    /******/\n\n    if (mode & 8) return value;\n    /******/\n\n    if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n    /******/\n\n    var ns = Object.create(null);\n    /******/\n\n    __webpack_require__.r(ns);\n    /******/\n\n\n    Object.defineProperty(ns, 'default', {\n      enumerable: true,\n      value: value\n    });\n    /******/\n\n    if (mode & 2 && typeof value != 'string') for (var key in value) __webpack_require__.d(ns, key, function (key) {\n      return value[key];\n    }.bind(null, key));\n    /******/\n\n    return ns;\n    /******/\n  };\n  /******/\n\n  /******/\n  // getDefaultExport function for compatibility with non-harmony modules\n\n  /******/\n\n\n  __webpack_require__.n = function (module) {\n    /******/\n    var getter = module && module.__esModule ?\n    /******/\n    function getDefault() {\n      return module['default'];\n    } :\n    /******/\n    function getModuleExports() {\n      return module;\n    };\n    /******/\n\n    __webpack_require__.d(getter, 'a', getter);\n    /******/\n\n\n    return getter;\n    /******/\n  };\n  /******/\n\n  /******/\n  // Object.prototype.hasOwnProperty.call\n\n  /******/\n\n\n  __webpack_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  /******/\n\n  /******/\n  // __webpack_public_path__\n\n  /******/\n\n\n  __webpack_require__.p = \"\";\n  /******/\n\n  /******/\n\n  /******/\n  // Load entry module and return exports\n\n  /******/\n\n  return __webpack_require__(__webpack_require__.s = \"ytus\");\n  /******/\n}\n/************************************************************************/\n\n/******/\n)({\n  /***/\n  \"1VLE\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return noChange;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return nothing;\n    });\n    /**\n     * @license\n     * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * A sentinel value that signals that a value was handled by a directive and\n     * should not be written to the DOM.\n     */\n\n\n    var noChange = {};\n    /**\n     * A sentinel value that signals a NodePart to fully clear its content.\n     */\n\n    var nothing = {};\n    /***/\n  },\n\n  /***/\n  \"2ysu\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return loadFontAwesome;\n    });\n\n    var loadFontAwesome = function loadFontAwesome() {\n      var cdnBaseUrl = window && window.vds && window.vds.baseUrls && window.vds.baseUrls.cdnBaseUrl; //https://stackoverflow.com/questions/50342356/how-to-use-font-awesome-with-polymer-litelement\n      //I think we need to move below logic to VDS start up or app teams need to load in thier application.\n\n      var fontEl = document.createElement('link');\n      fontEl.rel = 'stylesheet';\n      fontEl.href = \"\".concat(cdnBaseUrl, \"/global/fonts/font-awesome-icons/fontawesome-icons-all.css\");\n\n      if (document.head && !window.vdsFontAwesomeLoaded) {\n        window.vdsFontAwesomeLoaded = true;\n        document.head.appendChild(fontEl);\n      }\n    };\n    /***/\n\n  },\n\n  /***/\n  \"4qtV\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return classMap;\n    });\n    /* harmony import */\n\n\n    var _lit_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"AaG5\");\n\n    function _createForOfIteratorHelper(o, allowArrayLike) {\n      var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n      if (!it) {\n        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n          if (it) o = it;\n          var i = 0;\n\n          var F = function F() {};\n\n          return {\n            s: F,\n            n: function n() {\n              if (i >= o.length) return {\n                done: true\n              };\n              return {\n                done: false,\n                value: o[i++]\n              };\n            },\n            e: function e(_e) {\n              throw _e;\n            },\n            f: F\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var normalCompletion = true,\n          didErr = false,\n          err;\n      return {\n        s: function s() {\n          it = it.call(o);\n        },\n        n: function n() {\n          var step = it.next();\n          normalCompletion = step.done;\n          return step;\n        },\n        e: function e(_e2) {\n          didErr = true;\n          err = _e2;\n        },\n        f: function f() {\n          try {\n            if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n          } finally {\n            if (didErr) throw err;\n          }\n        }\n      };\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n    /**\n     * @license\n     * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n    // IE11 doesn't support classList on SVG elements, so we emulate it with a Set\n\n\n    var ClassList = /*#__PURE__*/function () {\n      function ClassList(element) {\n        _classCallCheck(this, ClassList);\n\n        this.classes = new Set();\n        this.changed = false;\n        this.element = element;\n        var classList = (element.getAttribute('class') || '').split(/\\s+/);\n\n        var _iterator = _createForOfIteratorHelper(classList),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var cls = _step.value;\n            this.classes.add(cls);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n\n      _createClass(ClassList, [{\n        key: \"add\",\n        value: function add(cls) {\n          this.classes.add(cls);\n          this.changed = true;\n        }\n      }, {\n        key: \"remove\",\n        value: function remove(cls) {\n          this.classes[\"delete\"](cls);\n          this.changed = true;\n        }\n      }, {\n        key: \"commit\",\n        value: function commit() {\n          if (this.changed) {\n            var classString = '';\n            this.classes.forEach(function (cls) {\n              return classString += cls + ' ';\n            });\n            this.element.setAttribute('class', classString);\n          }\n        }\n      }]);\n\n      return ClassList;\n    }();\n    /**\n     * Stores the ClassInfo object applied to a given AttributePart.\n     * Used to unset existing values when a new ClassInfo object is applied.\n     */\n\n\n    var previousClassesCache = new WeakMap();\n    /**\n     * A directive that applies CSS classes. This must be used in the `class`\n     * attribute and must be the only part used in the attribute. It takes each\n     * property in the `classInfo` argument and adds the property name to the\n     * element's `class` if the property value is truthy; if the property value is\n     * falsey, the property name is removed from the element's `class`. For example\n     * `{foo: bar}` applies the class `foo` if the value of `bar` is truthy.\n     * @param classInfo {ClassInfo}\n     */\n\n    var classMap = Object(_lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\n    /* directive */\n    \"d\"])(function (classInfo) {\n      return function (part) {\n        if (!(part instanceof _lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\n        /* AttributePart */\n        \"a\"]) || part instanceof _lit_html_js__WEBPACK_IMPORTED_MODULE_0__[\n        /* PropertyPart */\n        \"c\"] || part.committer.name !== 'class' || part.committer.parts.length > 1) {\n          throw new Error('The `classMap` directive must be used in the `class` attribute ' + 'and must be the only part in the attribute.');\n        }\n\n        var committer = part.committer;\n        var element = committer.element;\n        var previousClasses = previousClassesCache.get(part);\n\n        if (previousClasses === undefined) {\n          // Write static classes once\n          // Use setAttribute() because className isn't a string on SVG elements\n          element.setAttribute('class', committer.strings.join(' '));\n          previousClassesCache.set(part, previousClasses = new Set());\n        }\n\n        var classList = element.classList || new ClassList(element); // Remove old classes that no longer apply\n        // We use forEach() instead of for-of so that re don't require down-level\n        // iteration.\n\n        previousClasses.forEach(function (name) {\n          if (!(name in classInfo)) {\n            classList.remove(name);\n            previousClasses[\"delete\"](name);\n          }\n        }); // Add or remove classes based on their classMap value\n\n        for (var name in classInfo) {\n          var value = classInfo[name];\n\n          if (value != previousClasses.has(name)) {\n            // We explicitly want a loose truthy check of `value` because it seems\n            // more convenient that '' and 0 are skipped.\n            if (value) {\n              classList.add(name);\n              previousClasses.add(name);\n            } else {\n              classList.remove(name);\n              previousClasses[\"delete\"](name);\n            }\n          }\n        }\n\n        if (typeof classList.commit === 'function') {\n          classList.commit();\n        }\n      };\n    });\n    /***/\n  },\n\n  /***/\n  \"4yuk\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"f\", function () {\n      return marker;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"g\", function () {\n      return nodeMarker;\n    });\n    /* unused harmony export markerRegex */\n\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return boundAttributeSuffix;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return Template;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"d\", function () {\n      return isTemplatePartActive;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return createMarker;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"e\", function () {\n      return lastAttributeNameRegex;\n    });\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * An expression marker with embedded unique key to avoid collision with\n     * possible text in templates.\n     */\n\n\n    var marker = \"{{lit-\".concat(String(Math.random()).slice(2), \"}}\");\n    /**\n     * An expression marker used text-positions, multi-binding attributes, and\n     * attributes with markup-like text values.\n     */\n\n    var nodeMarker = \"<!--\".concat(marker, \"-->\");\n    var markerRegex = new RegExp(\"\".concat(marker, \"|\").concat(nodeMarker));\n    /**\n     * Suffix appended to all bound attribute names.\n     */\n\n    var boundAttributeSuffix = '$lit$';\n    /**\n     * An updatable Template that tracks the location of dynamic parts.\n     */\n\n    var Template = function Template(result, element) {\n      _classCallCheck(this, Template);\n\n      this.parts = [];\n      this.element = element;\n      var nodesToRemove = [];\n      var stack = []; // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n\n      var walker = document.createTreeWalker(element.content, 133\n      /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */\n      , null, false); // Keeps track of the last index associated with a part. We try to delete\n      // unnecessary nodes, but we never want to associate two different parts\n      // to the same index. They must have a constant node between.\n\n      var lastPartIndex = 0;\n      var index = -1;\n      var partIndex = 0;\n      var strings = result.strings,\n          length = result.values.length;\n\n      while (partIndex < length) {\n        var node = walker.nextNode();\n\n        if (node === null) {\n          // We've exhausted the content inside a nested template element.\n          // Because we still have parts (the outer for-loop), we know:\n          // - There is a template in the stack\n          // - The walker will find a nextNode outside the template\n          walker.currentNode = stack.pop();\n          continue;\n        }\n\n        index++;\n\n        if (node.nodeType === 1\n        /* Node.ELEMENT_NODE */\n        ) {\n          if (node.hasAttributes()) {\n            var attributes = node.attributes;\n            var _length = attributes.length; // Per\n            // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n            // attributes are not guaranteed to be returned in document order.\n            // In particular, Edge/IE can return them out of order, so we cannot\n            // assume a correspondence between part index and attribute index.\n\n            var count = 0;\n\n            for (var i = 0; i < _length; i++) {\n              if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                count++;\n              }\n            }\n\n            while (count-- > 0) {\n              // Get the template literal section leading up to the first\n              // expression in this attribute\n              var stringForPart = strings[partIndex]; // Find the attribute name\n\n              var name = lastAttributeNameRegex.exec(stringForPart)[2]; // Find the corresponding attribute\n              // All bound attributes have had a suffix added in\n              // TemplateResult#getHTML to opt out of special attribute\n              // handling. To look up the attribute value we also need to add\n              // the suffix.\n\n              var attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n              var attributeValue = node.getAttribute(attributeLookupName);\n              node.removeAttribute(attributeLookupName);\n              var statics = attributeValue.split(markerRegex);\n              this.parts.push({\n                type: 'attribute',\n                index: index,\n                name: name,\n                strings: statics\n              });\n              partIndex += statics.length - 1;\n            }\n          }\n\n          if (node.tagName === 'TEMPLATE') {\n            stack.push(node);\n            walker.currentNode = node.content;\n          }\n        } else if (node.nodeType === 3\n        /* Node.TEXT_NODE */\n        ) {\n          var data = node.data;\n\n          if (data.indexOf(marker) >= 0) {\n            var parent = node.parentNode;\n\n            var _strings = data.split(markerRegex);\n\n            var lastIndex = _strings.length - 1; // Generate a new text node for each literal section\n            // These nodes are also used as the markers for node parts\n\n            for (var _i = 0; _i < lastIndex; _i++) {\n              var insert = void 0;\n              var s = _strings[_i];\n\n              if (s === '') {\n                insert = createMarker();\n              } else {\n                var match = lastAttributeNameRegex.exec(s);\n\n                if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                  s = s.slice(0, match.index) + match[1] + match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                }\n\n                insert = document.createTextNode(s);\n              }\n\n              parent.insertBefore(insert, node);\n              this.parts.push({\n                type: 'node',\n                index: ++index\n              });\n            } // If there's no text, we must insert a comment to mark our place.\n            // Else, we can trust it will stick around after cloning.\n\n\n            if (_strings[lastIndex] === '') {\n              parent.insertBefore(createMarker(), node);\n              nodesToRemove.push(node);\n            } else {\n              node.data = _strings[lastIndex];\n            } // We have a part for each match found\n\n\n            partIndex += lastIndex;\n          }\n        } else if (node.nodeType === 8\n        /* Node.COMMENT_NODE */\n        ) {\n          if (node.data === marker) {\n            var _parent = node.parentNode; // Add a new marker node to be the startNode of the Part if any of\n            // the following are true:\n            //  * We don't have a previousSibling\n            //  * The previousSibling is already the start of a previous part\n\n            if (node.previousSibling === null || index === lastPartIndex) {\n              index++;\n\n              _parent.insertBefore(createMarker(), node);\n            }\n\n            lastPartIndex = index;\n            this.parts.push({\n              type: 'node',\n              index: index\n            }); // If we don't have a nextSibling, keep this node so we have an end.\n            // Else, we can remove it to save future costs.\n\n            if (node.nextSibling === null) {\n              node.data = '';\n            } else {\n              nodesToRemove.push(node);\n              index--;\n            }\n\n            partIndex++;\n          } else {\n            var _i2 = -1;\n\n            while ((_i2 = node.data.indexOf(marker, _i2 + 1)) !== -1) {\n              // Comment node has a binding marker inside, make an inactive part\n              // The binding won't work, but subsequent bindings will\n              // TODO (justinfagnani): consider whether it's even worth it to\n              // make bindings in comments work\n              this.parts.push({\n                type: 'node',\n                index: -1\n              });\n              partIndex++;\n            }\n          }\n        }\n      } // Remove text binding nodes after the walk to not disturb the TreeWalker\n\n\n      for (var _i3 = 0, _nodesToRemove = nodesToRemove; _i3 < _nodesToRemove.length; _i3++) {\n        var n = _nodesToRemove[_i3];\n        n.parentNode.removeChild(n);\n      }\n    };\n\n    var endsWith = function endsWith(str, suffix) {\n      var index = str.length - suffix.length;\n      return index >= 0 && str.slice(index) === suffix;\n    };\n\n    var isTemplatePartActive = function isTemplatePartActive(part) {\n      return part.index !== -1;\n    }; // Allows `document.createComment('')` to be renamed for a\n    // small manual size-savings.\n\n\n    var createMarker = function createMarker() {\n      return document.createComment('');\n    };\n    /**\n     * This regex extracts the attribute name preceding an attribute-position\n     * expression. It does this by matching the syntax allowed for attributes\n     * against the string literal directly preceding the expression, assuming that\n     * the expression is in an attribute-value position.\n     *\n     * See attributes in the HTML spec:\n     * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n     *\n     * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n     * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n     *\n     * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n     * space character except \" \".\n     *\n     * So an attribute is:\n     *  * The name: any character except a control character, space character, ('),\n     *    (\"), \">\", \"=\", or \"/\"\n     *  * Followed by zero or more space characters\n     *  * Followed by \"=\"\n     *  * Followed by zero or more space characters\n     *  * Followed by:\n     *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n     *    * (\") then any non-(\"), or\n     *    * (') then any non-(')\n     */\n\n\n    var lastAttributeNameRegex = // eslint-disable-next-line no-control-regex\n    /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n    /***/\n  },\n\n  /***/\n  \"6unr\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return TemplateInstance;\n    });\n    /* harmony import */\n\n\n    var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"tFPJ\");\n    /* harmony import */\n\n\n    var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"4yuk\");\n\n    function _toConsumableArray(arr) {\n      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n    }\n\n    function _nonIterableSpread() {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    function _iterableToArray(iter) {\n      if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n    }\n\n    function _arrayWithoutHoles(arr) {\n      if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n    }\n\n    function _createForOfIteratorHelper(o, allowArrayLike) {\n      var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n      if (!it) {\n        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n          if (it) o = it;\n          var i = 0;\n\n          var F = function F() {};\n\n          return {\n            s: F,\n            n: function n() {\n              if (i >= o.length) return {\n                done: true\n              };\n              return {\n                done: false,\n                value: o[i++]\n              };\n            },\n            e: function e(_e) {\n              throw _e;\n            },\n            f: F\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var normalCompletion = true,\n          didErr = false,\n          err;\n      return {\n        s: function s() {\n          it = it.call(o);\n        },\n        n: function n() {\n          var step = it.next();\n          normalCompletion = step.done;\n          return step;\n        },\n        e: function e(_e2) {\n          didErr = true;\n          err = _e2;\n        },\n        f: function f() {\n          try {\n            if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n          } finally {\n            if (didErr) throw err;\n          }\n        }\n      };\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * An instance of a `Template` that can be attached to the DOM and updated\n     * with new values.\n     */\n\n\n    var TemplateInstance = /*#__PURE__*/function () {\n      function TemplateInstance(template, processor, options) {\n        _classCallCheck(this, TemplateInstance);\n\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n      }\n\n      _createClass(TemplateInstance, [{\n        key: \"update\",\n        value: function update(values) {\n          var i = 0;\n\n          var _iterator = _createForOfIteratorHelper(this.__parts),\n              _step;\n\n          try {\n            for (_iterator.s(); !(_step = _iterator.n()).done;) {\n              var part = _step.value;\n\n              if (part !== undefined) {\n                part.setValue(values[i]);\n              }\n\n              i++;\n            }\n          } catch (err) {\n            _iterator.e(err);\n          } finally {\n            _iterator.f();\n          }\n\n          var _iterator2 = _createForOfIteratorHelper(this.__parts),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var _part = _step2.value;\n\n              if (_part !== undefined) {\n                _part.commit();\n              }\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n        }\n      }, {\n        key: \"_clone\",\n        value: function _clone() {\n          // There are a number of steps in the lifecycle of a template instance's\n          // DOM fragment:\n          //  1. Clone - create the instance fragment\n          //  2. Adopt - adopt into the main document\n          //  3. Process - find part markers and create parts\n          //  4. Upgrade - upgrade custom elements\n          //  5. Update - set node, attribute, property, etc., values\n          //  6. Connect - connect to the document. Optional and outside of this\n          //     method.\n          //\n          // We have a few constraints on the ordering of these steps:\n          //  * We need to upgrade before updating, so that property values will pass\n          //    through any property setters.\n          //  * We would like to process before upgrading so that we're sure that the\n          //    cloned fragment is inert and not disturbed by self-modifying DOM.\n          //  * We want custom elements to upgrade even in disconnected fragments.\n          //\n          // Given these constraints, with full custom elements support we would\n          // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n          //\n          // But Safari does not implement CustomElementRegistry#upgrade, so we\n          // can not implement that order and still have upgrade-before-update and\n          // upgrade disconnected fragments. So we instead sacrifice the\n          // process-before-upgrade constraint, since in Custom Elements v1 elements\n          // must not modify their light DOM in the constructor. We still have issues\n          // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n          // that don't strictly adhere to the no-modification rule because shadow\n          // DOM, which may be created in the constructor, is emulated by being placed\n          // in the light DOM.\n          //\n          // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n          // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n          // in one step.\n          //\n          // The Custom Elements v1 polyfill supports upgrade(), so the order when\n          // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n          // Connect.\n          var fragment = _dom_js__WEBPACK_IMPORTED_MODULE_0__[\n          /* isCEPolyfill */\n          \"a\"] ? this.template.element.content.cloneNode(true) : document.importNode(this.template.element.content, true);\n          var stack = [];\n          var parts = this.template.parts; // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n\n          var walker = document.createTreeWalker(fragment, 133\n          /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */\n          , null, false);\n          var partIndex = 0;\n          var nodeIndex = 0;\n          var part;\n          var node = walker.nextNode(); // Loop through all the nodes and parts of a template\n\n          while (partIndex < parts.length) {\n            part = parts[partIndex];\n\n            if (!Object(_template_js__WEBPACK_IMPORTED_MODULE_1__[\n            /* isTemplatePartActive */\n            \"d\"])(part)) {\n              this.__parts.push(undefined);\n\n              partIndex++;\n              continue;\n            } // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n\n\n            while (nodeIndex < part.index) {\n              nodeIndex++;\n\n              if (node.nodeName === 'TEMPLATE') {\n                stack.push(node);\n                walker.currentNode = node.content;\n              }\n\n              if ((node = walker.nextNode()) === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                node = walker.nextNode();\n              }\n            } // We've arrived at our part's node.\n\n\n            if (part.type === 'node') {\n              var _part2 = this.processor.handleTextExpression(this.options);\n\n              _part2.insertAfterNode(node.previousSibling);\n\n              this.__parts.push(_part2);\n            } else {\n              var _this$__parts;\n\n              (_this$__parts = this.__parts).push.apply(_this$__parts, _toConsumableArray(this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options)));\n            }\n\n            partIndex++;\n          }\n\n          if (_dom_js__WEBPACK_IMPORTED_MODULE_0__[\n          /* isCEPolyfill */\n          \"a\"]) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n          }\n\n          return fragment;\n        }\n      }]);\n\n      return TemplateInstance;\n    }();\n    /***/\n\n  },\n\n  /***/\n  \"7Qib\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\"; // EXPORTS\n\n    __webpack_require__.d(__webpack_exports__, \"o\", function () {\n      return (\n        /* reexport */\n        isChrome\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"v\", function () {\n      return (\n        /* reexport */\n        isSafari\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"q\", function () {\n      return (\n        /* reexport */\n        isIE\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"r\", function () {\n      return (\n        /* reexport */\n        isIEOrEdge\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"d\", function () {\n      return (\n        /* reexport */\n        createSlottedStyles[\"a\"\n        /* createSlottedStyles */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"f\", function () {\n      return (\n        /* reexport */\n        extractCssVarFromPolyfill\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"x\", function () {\n      return (\n        /* reexport */\n        replaceCssVars\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return (\n        /* reexport */\n        DEFAULT_SLOT_NAME\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"h\", function () {\n      return (\n        /* reexport */\n        getAssignedElements\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"j\", function () {\n      return (\n        /* reexport */\n        getSlottedElements\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"k\", function () {\n      return (\n        /* reexport */\n        getSlottedElementsBySlotName\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"i\", function () {\n      return (\n        /* reexport */\n        getElementByIdx\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"w\", function () {\n      return (\n        /* reexport */\n        removeElements\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"e\", function () {\n      return (\n        /* reexport */\n        eventEmitters_emitStandardEvent\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return (\n        /* reexport */\n        featureDetection[\"a\"\n        /* browserSupportsCssVariables */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return (\n        /* reexport */\n        featureDetection[\"b\"\n        /* browserSupportsWidthMaxContent */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"u\", function () {\n      return (\n        /* reexport */\n        featureDetection[\"c\"\n        /* isMobileDevice */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"y\", function () {\n      return (\n        /* reexport */\n        transposeAttributes\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"t\", function () {\n      return (\n        /* reexport */\n        isMobile\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"s\", function () {\n      return (\n        /* reexport */\n        isIosMobile\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"p\", function () {\n      return (\n        /* reexport */\n        isHostMatchWithVoya\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"n\", function () {\n      return (\n        /* reexport */\n        isAbsoluteUrl\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"g\", function () {\n      return (\n        /* reexport */\n        googleAnalytics[\"a\"\n        /* gaEvent */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"l\", function () {\n      return (\n        /* reexport */\n        getUniqueId\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"m\", function () {\n      return (\n        /* reexport */\n        getUpdateComplete\n      );\n    }); // UNUSED EXPORTS: extractCssVarsFromStylesheet, filterNodesByTagName, getSlotsByName, listenForEvents, loadFontAwesome, enterKeypress, enterKeyup, tapKeypress, tabKeyup, tabKeydown, spaceKeypress, spaceKeyup, shiftKeydown, shiftTabKey\n    // CONCATENATED MODULE: ./src/utils/browserDetection.js\n\n\n    var isChrome = function isChrome() {\n      return /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\n    };\n\n    var isSafari = function isSafari() {\n      return /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\n    };\n\n    var isIE = function isIE() {\n      return document.body.style.msTouchAction !== undefined;\n    };\n\n    var isIEOrEdge = function isIEOrEdge() {\n      return '-ms-scroll-limit' in document.documentElement.style && '-ms-ime-align' in document.documentElement.style;\n    }; // EXTERNAL MODULE: ./src/utils/createSlottedStyles.js\n\n\n    var createSlottedStyles = __webpack_require__(\"ZEzQ\"); // CONCATENATED MODULE: ./src/utils/cssVariableExtractors.js\n\n\n    var extractCssVarFromPolyfill = function extractCssVarFromPolyfill(_ref) {\n      var _ref$context = _ref.context,\n          context = _ref$context === void 0 ? document : _ref$context,\n          variable = _ref.variable;\n      return (// eslint-disable-next-line\n        ShadyCSS.getComputedStyleValue(context, variable)\n      );\n    };\n\n    var extractCssVarsFromStylesheet = function extractCssVarsFromStylesheet(stylesheet) {\n      return stylesheet.match(/var\\((--[\\-\\_a-zA-Z0-9]+)\\)/g) // eslint-disable-line\n      .filter(function (value, index, self) {\n        return self.indexOf(value) === index;\n      }).map(function (value) {\n        return value.replace(/var\\(|\\)/g, '');\n      });\n    };\n\n    var replaceCssVars = function replaceCssVars(_ref2) {\n      var context = _ref2.context,\n          styles = _ref2.styles;\n      var stylesWithoutVars = styles;\n      var cssVars = extractCssVarsFromStylesheet(styles);\n      cssVars.forEach(function (variable) {\n        var regex = new RegExp(\"var\\\\(\".concat(variable, \"\\\\)\"), 'g');\n        var value = extractCssVarFromPolyfill({\n          context: context,\n          variable: variable\n        });\n        stylesWithoutVars = stylesWithoutVars.replace(regex, value);\n      });\n      return stylesWithoutVars;\n    }; // CONCATENATED MODULE: ./src/utils/elementIterators.js\n\n\n    function _slicedToArray(arr, i) {\n      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n    }\n\n    function _nonIterableRest() {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n\n    function _iterableToArrayLimit(arr, i) {\n      var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n      if (_i == null) return;\n      var _arr = [];\n      var _n = true;\n      var _d = false;\n\n      var _s, _e;\n\n      try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n          _arr.push(_s.value);\n\n          if (i && _arr.length === i) break;\n        }\n      } catch (err) {\n        _d = true;\n        _e = err;\n      } finally {\n        try {\n          if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n          if (_d) throw _e;\n        }\n      }\n\n      return _arr;\n    }\n\n    function _arrayWithHoles(arr) {\n      if (Array.isArray(arr)) return arr;\n    }\n\n    function ownKeys(object, enumerableOnly) {\n      var keys = Object.keys(object);\n\n      if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n\n        if (enumerableOnly) {\n          symbols = symbols.filter(function (sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n          });\n        }\n\n        keys.push.apply(keys, symbols);\n      }\n\n      return keys;\n    }\n\n    function _objectSpread(target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n\n        if (i % 2) {\n          ownKeys(Object(source), true).forEach(function (key) {\n            _defineProperty(target, key, source[key]);\n          });\n        } else if (Object.getOwnPropertyDescriptors) {\n          Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n        } else {\n          ownKeys(Object(source)).forEach(function (key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n          });\n        }\n      }\n\n      return target;\n    }\n\n    function _defineProperty(obj, key, value) {\n      if (key in obj) {\n        Object.defineProperty(obj, key, {\n          value: value,\n          enumerable: true,\n          configurable: true,\n          writable: true\n        });\n      } else {\n        obj[key] = value;\n      }\n\n      return obj;\n    }\n\n    var DEFAULT_SLOT_NAME = 'default';\n\n    var filterNodesByTagName = function filterNodesByTagName(nodes, tagName) {\n      return Array.prototype.filter.call(nodes, function (node) {\n        return node.tagName === tagName;\n      });\n    };\n\n    var getAssignedElements = function getAssignedElements(slot) {\n      return Array.prototype.filter.call(slot.assignedNodes(), function (e) {\n        return e.nodeType === Node.ELEMENT_NODE;\n      });\n    };\n\n    var getSlottedElements = function getSlottedElements(component) {\n      var slot = component.shadowRoot.querySelector('slot');\n      return getAssignedElements(slot);\n    };\n\n    var getSlotsByName = function getSlotsByName(component) {\n      var slots = component.shadowRoot.querySelectorAll('slot');\n      return Array.prototype.reduce.call(slots, function (acc, slot) {\n        var name = slot.name ? slot.name : slot.getAttribute('name') ? slot.getAttribute('name') : DEFAULT_SLOT_NAME;\n        acc = _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, name, slot));\n        return acc;\n      }, {});\n    };\n\n    var getSlottedElementsBySlotName = function getSlottedElementsBySlotName(component) {\n      var slotsByName = getSlotsByName(component);\n      return Object.entries(slotsByName).reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            name = _ref2[0],\n            slot = _ref2[1];\n\n        acc = _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, name, getAssignedElements(slot)));\n        return acc;\n      }, {});\n    };\n\n    var getElementByIdx = function getElementByIdx(elements, idx) {\n      return Array.prototype.slice.call(elements, idx)[0];\n    };\n\n    var removeElements = function removeElements(elements) {\n      return elements.map(function (el) {\n        return el.parentNode.removeChild(el);\n      });\n    }; // CONCATENATED MODULE: ./src/utils/eventEmitters.js\n\n\n    var eventEmitters_emitStandardEvent = function emitStandardEvent(component, DOMString) {\n      var event;\n\n      if (isIE()) {\n        event = document.createEvent('Event');\n        event.initEvent('input', true, true);\n      } else {\n        event = new Event(DOMString, {\n          bubbles: true,\n          cancelable: true\n        });\n      }\n\n      component.dispatchEvent(event);\n    }; // EXTERNAL MODULE: ./src/utils/featureDetection.js\n\n\n    var featureDetection = __webpack_require__(\"KXV8\"); // CONCATENATED MODULE: ./src/utils/transposeAttributes.js\n\n\n    var transposeAttributes = function transposeAttributes(_ref) {\n      var _ref$attributes = _ref.attributes,\n          attributes = _ref$attributes === void 0 ? [] : _ref$attributes,\n          target = _ref.target,\n          root = _ref.root;\n      var validAttributes = Object.values(root.attributes).filter(function (_ref2) {\n        var name = _ref2.name;\n        return attributes.includes(name);\n      });\n      validAttributes.forEach(function (_ref3) {\n        var name = _ref3.name,\n            value = _ref3.value;\n        target.setAttribute(name, value);\n      });\n    }; // CONCATENATED MODULE: ./src/utils/deviceDetection.js\n\n\n    var isMobile = function isMobile() {\n      return /Android|webOS|iPhone|iPad|iPod|Opera Mini/i.test(navigator.userAgent) || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1;\n    };\n\n    var isIosMobile = function isIosMobile() {\n      return (/iPad|iPhone|iPod/.test(navigator.platform) || navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 1) && !window.MSStream;\n    }; // CONCATENATED MODULE: ./src/utils/uRLUtility.js\n\n\n    var isHostMatchWithVoya = function isHostMatchWithVoya(Url) {\n      var hostRegexList = [/.*voya.com/, /.*voya.net/, /.*localhost/, /.*voyaemployeebenefits.com/];\n      return hostRegexList.some(function (host) {\n        return host.test(Url);\n      });\n    };\n\n    var isAbsoluteUrl = function isAbsoluteUrl(Url) {\n      var hostRegexList = [/.*http:/, /.*https:/];\n      return hostRegexList.some(function (host) {\n        return host.test(Url);\n      });\n    }; // EXTERNAL MODULE: ./src/utils/googleAnalytics.js\n\n\n    var googleAnalytics = __webpack_require__(\"pAs2\"); // EXTERNAL MODULE: ./src/utils/loadFontAwesome.js\n\n\n    var loadFontAwesome = __webpack_require__(\"2ysu\"); // CONCATENATED MODULE: ./src/utils/uniqueId.js\n\n\n    function getUniqueId() {\n      return Date.now() + Math.random();\n    } // EXTERNAL MODULE: ./src/utils/keyboardAccessibility.js\n\n\n    var keyboardAccessibility = __webpack_require__(\"BAbn\"); // CONCATENATED MODULE: ./src/utils/updateComplete.js\n\n\n    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n      try {\n        var info = gen[key](arg);\n        var value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n\n      if (info.done) {\n        resolve(value);\n      } else {\n        Promise.resolve(value).then(_next, _throw);\n      }\n    }\n\n    function _asyncToGenerator(fn) {\n      return function () {\n        var self = this,\n            args = arguments;\n        return new Promise(function (resolve, reject) {\n          var gen = fn.apply(self, args);\n\n          function _next(value) {\n            asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n          }\n\n          function _throw(err) {\n            asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n          }\n\n          _next(undefined);\n        });\n      };\n    }\n\n    var getUpdateComplete = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(component) {\n        var $childsEle, $shadowRootSelectors, $slots;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                $childsEle = [];\n                $shadowRootSelectors = component.shadowRoot.querySelectorAll('*');\n                _context5.next = 4;\n                return Array.from($shadowRootSelectors).map( /*#__PURE__*/function () {\n                  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(child) {\n                    var $nodeName;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            $nodeName = child.nodeName.toLowerCase();\n\n                            if ($nodeName.indexOf('v-') === 0) {\n                              $childsEle.push(child);\n                            }\n\n                          case 2:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x2) {\n                    return _ref2.apply(this, arguments);\n                  };\n                }());\n\n              case 4:\n                _context5.next = 6;\n                return getSlottedElementsBySlotName(component);\n\n              case 6:\n                $slots = _context5.sent;\n\n                if (!(Object.keys($slots).length > 0)) {\n                  _context5.next = 10;\n                  break;\n                }\n\n                _context5.next = 10;\n                return Object.keys($slots).map( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(slotName) {\n                    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                      while (1) {\n                        switch (_context3.prev = _context3.next) {\n                          case 0:\n                            _context3.next = 2;\n                            return Array.from($slots[slotName]).map( /*#__PURE__*/function () {\n                              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(child) {\n                                var $nodeName;\n                                return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                                  while (1) {\n                                    switch (_context2.prev = _context2.next) {\n                                      case 0:\n                                        $nodeName = child.nodeName.toLowerCase();\n\n                                        if ($nodeName.indexOf('v-') === 0) {\n                                          $childsEle.push(child);\n                                        }\n\n                                      case 2:\n                                      case \"end\":\n                                        return _context2.stop();\n                                    }\n                                  }\n                                }, _callee2);\n                              }));\n\n                              return function (_x4) {\n                                return _ref4.apply(this, arguments);\n                              };\n                            }());\n\n                          case 2:\n                          case \"end\":\n                            return _context3.stop();\n                        }\n                      }\n                    }, _callee3);\n                  }));\n\n                  return function (_x3) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n\n              case 10:\n                _context5.next = 12;\n                return Promise.all(Array.from($childsEle).map( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(child) {\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) {\n                        switch (_context4.prev = _context4.next) {\n                          case 0:\n                            _context4.next = 2;\n                            return child.updateComplete;\n\n                          case 2:\n                          case \"end\":\n                            return _context4.stop();\n                        }\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x5) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }()));\n\n              case 12:\n                return _context5.abrupt(\"return\", true);\n\n              case 13:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5);\n      }));\n\n      return function getUpdateComplete(_x) {\n        return _ref.apply(this, arguments);\n      };\n    }(); // CONCATENATED MODULE: ./src/utils/index.js\n\n    /***/\n\n  },\n\n  /***/\n  \"AaG5\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\"; // EXPORTS\n\n    __webpack_require__.d(__webpack_exports__, \"d\", function () {\n      return (\n        /* reexport */\n        directive[\"a\"\n        /* directive */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return (\n        /* reexport */\n        parts[\"b\"\n        /* AttributePart */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return (\n        /* reexport */\n        parts[\"e\"\n        /* NodePart */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return (\n        /* reexport */\n        parts[\"g\"\n        /* PropertyPart */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"f\", function () {\n      return (\n        /* reexport */\n        render[\"b\"\n        /* render */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"e\", function () {\n      return (\n        /* binding */\n        lit_html_html\n      );\n    }); // UNUSED EXPORTS: DefaultTemplateProcessor, defaultTemplateProcessor, isDirective, removeNodes, reparentNodes, noChange, nothing, AttributeCommitter, BooleanAttributePart, EventPart, isIterable, isPrimitive, PropertyCommitter, parts, templateCaches, templateFactory, TemplateInstance, SVGTemplateResult, TemplateResult, createMarker, isTemplatePartActive, Template, svg\n    // EXTERNAL MODULE: ./node_modules/lit-html/lib/parts.js\n\n\n    var parts = __webpack_require__(\"XI78\"); // CONCATENATED MODULE: ./node_modules/lit-html/lib/default-template-processor.js\n\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * Creates Parts when a template is instantiated.\n     */\n\n\n    var default_template_processor_DefaultTemplateProcessor = /*#__PURE__*/function () {\n      function DefaultTemplateProcessor() {\n        _classCallCheck(this, DefaultTemplateProcessor);\n      }\n\n      _createClass(DefaultTemplateProcessor, [{\n        key: \"handleAttributeExpressions\",\n        value:\n        /**\n         * Create parts for an attribute-position binding, given the event, attribute\n         * name, and string literals.\n         *\n         * @param element The element containing the binding\n         * @param name  The attribute name\n         * @param strings The string literals. There are always at least two strings,\n         *   event for fully-controlled bindings with a single expression.\n         */\n        function handleAttributeExpressions(element, name, strings, options) {\n          var prefix = name[0];\n\n          if (prefix === '.') {\n            var _committer = new parts[\"f\"\n            /* PropertyCommitter */\n            ](element, name.slice(1), strings);\n\n            return _committer.parts;\n          }\n\n          if (prefix === '@') {\n            return [new parts[\"d\"\n            /* EventPart */\n            ](element, name.slice(1), options.eventContext)];\n          }\n\n          if (prefix === '?') {\n            return [new parts[\"c\"\n            /* BooleanAttributePart */\n            ](element, name.slice(1), strings)];\n          }\n\n          var committer = new parts[\"a\"\n          /* AttributeCommitter */\n          ](element, name, strings);\n          return committer.parts;\n        }\n        /**\n         * Create parts for a text-position binding.\n         * @param templateFactory\n         */\n\n      }, {\n        key: \"handleTextExpression\",\n        value: function handleTextExpression(options) {\n          return new parts[\"e\"\n          /* NodePart */\n          ](options);\n        }\n      }]);\n\n      return DefaultTemplateProcessor;\n    }();\n\n    var defaultTemplateProcessor = new default_template_processor_DefaultTemplateProcessor(); // EXTERNAL MODULE: ./node_modules/lit-html/lib/template-result.js\n\n    var template_result = __webpack_require__(\"GMCd\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/directive.js\n\n\n    var directive = __webpack_require__(\"eByC\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/dom.js\n\n\n    var dom = __webpack_require__(\"tFPJ\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/part.js\n\n\n    var part = __webpack_require__(\"1VLE\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/render.js\n\n\n    var render = __webpack_require__(\"wmha\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/template-factory.js\n\n\n    var template_factory = __webpack_require__(\"PqmH\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/template-instance.js\n\n\n    var template_instance = __webpack_require__(\"6unr\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/template.js\n\n\n    var template = __webpack_require__(\"4yuk\"); // CONCATENATED MODULE: ./node_modules/lit-html/lit-html.js\n\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     *\n     * Main lit-html module.\n     *\n     * Main exports:\n     *\n     * -  [[html]]\n     * -  [[svg]]\n     * -  [[render]]\n     *\n     * @packageDocumentation\n     */\n\n    /**\n     * Do not remove this comment; it keeps typedoc from misplacing the module\n     * docs.\n     */\n    // TODO(justinfagnani): remove line when we get NodePart moving methods\n    // IMPORTANT: do not change the property name or the assignment expression.\n    // This line will be used in regexes to search for lit-html usage.\n    // TODO(justinfagnani): inject version number at build time\n\n\n    if (typeof window !== 'undefined') {\n      (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n    }\n    /**\n     * Interprets a template literal as an HTML template that can efficiently\n     * render to and update a container.\n     */\n\n\n    var lit_html_html = function html(strings) {\n      for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        values[_key - 1] = arguments[_key];\n      }\n\n      return new template_result[\"b\"\n      /* TemplateResult */\n      ](strings, values, 'html', defaultTemplateProcessor);\n    };\n    /**\n     * Interprets a template literal as an SVG template that can efficiently\n     * render to and update a container.\n     */\n\n\n    var lit_html_svg = function svg(strings) {\n      for (var _len2 = arguments.length, values = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        values[_key2 - 1] = arguments[_key2];\n      }\n\n      return new template_result[\"a\"\n      /* SVGTemplateResult */\n      ](strings, values, 'svg', defaultTemplateProcessor);\n    };\n    /***/\n\n  },\n\n  /***/\n  \"BAbn\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return enterKeypress;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return enterKeyup;\n    });\n    /* unused harmony export tapKeypress */\n\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"h\", function () {\n      return tabKeyup;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"g\", function () {\n      return tabKeydown;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"e\", function () {\n      return spaceKeypress;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"f\", function () {\n      return spaceKeyup;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return shiftKeydown;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"d\", function () {\n      return shiftTabKey;\n    });\n\n    var enterKeypress = function enterKeypress(event) {\n      return event.type === 'keypress' && event.keyCode === 13;\n    };\n\n    var enterKeyup = function enterKeyup(event) {\n      return event.type === 'keyup' && event.keyCode === 13;\n    };\n\n    var tapKeypress = function tapKeypress(event) {\n      return event.type === 'keypress' && event.keyCode === 9;\n    };\n\n    var tabKeyup = function tabKeyup(event) {\n      return event.type === 'keyup' && event.keyCode === 9;\n    };\n\n    var tabKeydown = function tabKeydown(event) {\n      return event.type === 'keydown' && event.keyCode === 9;\n    };\n\n    var spaceKeypress = function spaceKeypress(event) {\n      return event.type === 'keypress' && event.keyCode === 32;\n    };\n\n    var spaceKeyup = function spaceKeyup(event) {\n      return event.type === 'keyup' && event.keyCode === 32;\n    };\n\n    var shiftKeydown = function shiftKeydown(event) {\n      return event.type === 'keydown' && event.shiftKey;\n    };\n\n    var shiftTabKey = function shiftTabKey(event) {\n      return event.shiftKey && event.key === 'Tab';\n    };\n    /***/\n\n  },\n\n  /***/\n  \"CQbg\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\"; // EXPORTS\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return (\n        /* reexport */\n        customElement\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"f\", function () {\n      return (\n        /* reexport */\n        property\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"e\", function () {\n      return (\n        /* reexport */\n        internalProperty\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"d\", function () {\n      return (\n        /* reexport */\n        lit_html[\"e\"\n        /* html */\n        ]\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"g\", function () {\n      return (\n        /* reexport */\n        unsafeCSS\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return (\n        /* reexport */\n        css\n      );\n    });\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return (\n        /* binding */\n        lit_element_LitElement\n      );\n    }); // UNUSED EXPORTS: defaultConverter, notEqual, UpdatingElement, query, queryAsync, queryAll, eventOptions, queryAssignedNodes, svg, TemplateResult, SVGTemplateResult, supportsAdoptingStyleSheets, CSSResult\n    // EXTERNAL MODULE: ./node_modules/lit-html/lib/dom.js\n\n\n    var dom = __webpack_require__(\"tFPJ\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/template.js\n\n\n    var lib_template = __webpack_require__(\"4yuk\"); // CONCATENATED MODULE: ./node_modules/lit-html/lib/modify-template.js\n\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n\n    var walkerNodeFilter = 133\n    /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */\n    ;\n    /**\n     * Removes the list of nodes from a Template safely. In addition to removing\n     * nodes from the Template, the Template part indices are updated to match\n     * the mutated Template DOM.\n     *\n     * As the template is walked the removal state is tracked and\n     * part indices are adjusted as needed.\n     *\n     * div\n     *   div#1 (remove) <-- start removing (removing node is div#1)\n     *     div\n     *       div#2 (remove)  <-- continue removing (removing node is still div#1)\n     *         div\n     * div <-- stop removing since previous sibling is the removing node (div#1,\n     * removed 4 nodes)\n     */\n\n    function removeNodesFromTemplate(template, nodesToRemove) {\n      var content = template.element.content,\n          parts = template.parts;\n      var walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n      var partIndex = modify_template_nextActiveIndexInTemplateParts(parts);\n      var part = parts[partIndex];\n      var nodeIndex = -1;\n      var removeCount = 0;\n      var nodesToRemoveInTemplate = [];\n      var currentRemovingNode = null;\n\n      while (walker.nextNode()) {\n        nodeIndex++;\n        var node = walker.currentNode; // End removal if stepped past the removing node\n\n        if (node.previousSibling === currentRemovingNode) {\n          currentRemovingNode = null;\n        } // A node to remove was found in the template\n\n\n        if (nodesToRemove.has(node)) {\n          nodesToRemoveInTemplate.push(node); // Track node we're removing\n\n          if (currentRemovingNode === null) {\n            currentRemovingNode = node;\n          }\n        } // When removing, increment count by which to adjust subsequent part indices\n\n\n        if (currentRemovingNode !== null) {\n          removeCount++;\n        }\n\n        while (part !== undefined && part.index === nodeIndex) {\n          // If part is in a removed node deactivate it by setting index to -1 or\n          // adjust the index as needed.\n          part.index = currentRemovingNode !== null ? -1 : part.index - removeCount; // go to the next active part.\n\n          partIndex = modify_template_nextActiveIndexInTemplateParts(parts, partIndex);\n          part = parts[partIndex];\n        }\n      }\n\n      nodesToRemoveInTemplate.forEach(function (n) {\n        return n.parentNode.removeChild(n);\n      });\n    }\n\n    var countNodes = function countNodes(node) {\n      var count = node.nodeType === 11\n      /* Node.DOCUMENT_FRAGMENT_NODE */\n      ? 0 : 1;\n      var walker = document.createTreeWalker(node, walkerNodeFilter, null, false);\n\n      while (walker.nextNode()) {\n        count++;\n      }\n\n      return count;\n    };\n\n    var modify_template_nextActiveIndexInTemplateParts = function nextActiveIndexInTemplateParts(parts) {\n      var startIndex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : -1;\n\n      for (var i = startIndex + 1; i < parts.length; i++) {\n        var part = parts[i];\n\n        if (Object(lib_template[\"d\"\n        /* isTemplatePartActive */\n        ])(part)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n    /**\n     * Inserts the given node into the Template, optionally before the given\n     * refNode. In addition to inserting the node into the Template, the Template\n     * part indices are updated to match the mutated Template DOM.\n     */\n\n\n    function insertNodeIntoTemplate(template, node) {\n      var refNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var content = template.element.content,\n          parts = template.parts; // If there's no refNode, then put node at end of template.\n      // No part indices need to be shifted in this case.\n\n      if (refNode === null || refNode === undefined) {\n        content.appendChild(node);\n        return;\n      }\n\n      var walker = document.createTreeWalker(content, walkerNodeFilter, null, false);\n      var partIndex = modify_template_nextActiveIndexInTemplateParts(parts);\n      var insertCount = 0;\n      var walkerIndex = -1;\n\n      while (walker.nextNode()) {\n        walkerIndex++;\n        var walkerNode = walker.currentNode;\n\n        if (walkerNode === refNode) {\n          insertCount = countNodes(node);\n          refNode.parentNode.insertBefore(node, refNode);\n        }\n\n        while (partIndex !== -1 && parts[partIndex].index === walkerIndex) {\n          // If we've inserted the node, simply adjust all subsequent parts\n          if (insertCount > 0) {\n            while (partIndex !== -1) {\n              parts[partIndex].index += insertCount;\n              partIndex = modify_template_nextActiveIndexInTemplateParts(parts, partIndex);\n            }\n\n            return;\n          }\n\n          partIndex = modify_template_nextActiveIndexInTemplateParts(parts, partIndex);\n        }\n      }\n    } // EXTERNAL MODULE: ./node_modules/lit-html/lib/render.js\n\n\n    var lib_render = __webpack_require__(\"wmha\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/template-factory.js\n\n\n    var template_factory = __webpack_require__(\"PqmH\"); // EXTERNAL MODULE: ./node_modules/lit-html/lib/template-instance.js\n\n\n    var template_instance = __webpack_require__(\"6unr\"); // EXTERNAL MODULE: ./node_modules/lit-html/lit-html.js + 1 modules\n\n\n    var lit_html = __webpack_require__(\"AaG5\"); // CONCATENATED MODULE: ./node_modules/lit-html/lib/shady-render.js\n\n\n    function _typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function _typeof(obj) {\n          return typeof obj;\n        };\n      } else {\n        _typeof = function _typeof(obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return _typeof(obj);\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * Module to add shady DOM/shady CSS polyfill support to lit-html template\n     * rendering. See the [[render]] method for details.\n     *\n     * @packageDocumentation\n     */\n\n    /**\n     * Do not remove this comment; it keeps typedoc from misplacing the module\n     * docs.\n     */\n    // Get a key to lookup in `templateCaches`.\n\n\n    var getTemplateCacheKey = function getTemplateCacheKey(type, scopeName) {\n      return \"\".concat(type, \"--\").concat(scopeName);\n    };\n\n    var compatibleShadyCSSVersion = true;\n\n    if (typeof window.ShadyCSS === 'undefined') {\n      compatibleShadyCSSVersion = false;\n    } else if (typeof window.ShadyCSS.prepareTemplateDom === 'undefined') {\n      console.warn(\"Incompatible ShadyCSS version detected. \" + \"Please update to at least @webcomponents/webcomponentsjs@2.0.2 and \" + \"@webcomponents/shadycss@1.3.1.\");\n      compatibleShadyCSSVersion = false;\n    }\n    /**\n     * Template factory which scopes template DOM using ShadyCSS.\n     * @param scopeName {string}\n     */\n\n\n    var shady_render_shadyTemplateFactory = function shadyTemplateFactory(scopeName) {\n      return function (result) {\n        var cacheKey = getTemplateCacheKey(result.type, scopeName);\n        var templateCache = template_factory[\"a\"\n        /* templateCaches */\n        ].get(cacheKey);\n\n        if (templateCache === undefined) {\n          templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n          };\n          template_factory[\"a\"\n          /* templateCaches */\n          ].set(cacheKey, templateCache);\n        }\n\n        var template = templateCache.stringsArray.get(result.strings);\n\n        if (template !== undefined) {\n          return template;\n        }\n\n        var key = result.strings.join(lib_template[\"f\"\n        /* marker */\n        ]);\n        template = templateCache.keyString.get(key);\n\n        if (template === undefined) {\n          var element = result.getTemplateElement();\n\n          if (compatibleShadyCSSVersion) {\n            window.ShadyCSS.prepareTemplateDom(element, scopeName);\n          }\n\n          template = new lib_template[\"a\"\n          /* Template */\n          ](result, element);\n          templateCache.keyString.set(key, template);\n        }\n\n        templateCache.stringsArray.set(result.strings, template);\n        return template;\n      };\n    };\n\n    var TEMPLATE_TYPES = ['html', 'svg'];\n    /**\n     * Removes all style elements from Templates for the given scopeName.\n     */\n\n    var shady_render_removeStylesFromLitTemplates = function removeStylesFromLitTemplates(scopeName) {\n      TEMPLATE_TYPES.forEach(function (type) {\n        var templates = template_factory[\"a\"\n        /* templateCaches */\n        ].get(getTemplateCacheKey(type, scopeName));\n\n        if (templates !== undefined) {\n          templates.keyString.forEach(function (template) {\n            var content = template.element.content; // IE 11 doesn't support the iterable param Set constructor\n\n            var styles = new Set();\n            Array.from(content.querySelectorAll('style')).forEach(function (s) {\n              styles.add(s);\n            });\n            removeNodesFromTemplate(template, styles);\n          });\n        }\n      });\n    };\n\n    var shadyRenderSet = new Set();\n    /**\n     * For the given scope name, ensures that ShadyCSS style scoping is performed.\n     * This is done just once per scope name so the fragment and template cannot\n     * be modified.\n     * (1) extracts styles from the rendered fragment and hands them to ShadyCSS\n     * to be scoped and appended to the document\n     * (2) removes style elements from all lit-html Templates for this scope name.\n     *\n     * Note, <style> elements can only be placed into templates for the\n     * initial rendering of the scope. If <style> elements are included in templates\n     * dynamically rendered to the scope (after the first scope render), they will\n     * not be scoped and the <style> will be left in the template and rendered\n     * output.\n     */\n\n    var shady_render_prepareTemplateStyles = function prepareTemplateStyles(scopeName, renderedDOM, template) {\n      shadyRenderSet.add(scopeName); // If `renderedDOM` is stamped from a Template, then we need to edit that\n      // Template's underlying template element. Otherwise, we create one here\n      // to give to ShadyCSS, which still requires one while scoping.\n\n      var templateElement = !!template ? template.element : document.createElement('template'); // Move styles out of rendered DOM and store.\n\n      var styles = renderedDOM.querySelectorAll('style');\n      var length = styles.length; // If there are no styles, skip unnecessary work\n\n      if (length === 0) {\n        // Ensure prepareTemplateStyles is called to support adding\n        // styles via `prepareAdoptedCssText` since that requires that\n        // `prepareTemplateStyles` is called.\n        //\n        // ShadyCSS will only update styles containing @apply in the template\n        // given to `prepareTemplateStyles`. If no lit Template was given,\n        // ShadyCSS will not be able to update uses of @apply in any relevant\n        // template. However, this is not a problem because we only create the\n        // template for the purpose of supporting `prepareAdoptedCssText`,\n        // which doesn't support @apply at all.\n        window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n        return;\n      }\n\n      var condensedStyle = document.createElement('style'); // Collect styles into a single style. This helps us make sure ShadyCSS\n      // manipulations will not prevent us from being able to fix up template\n      // part indices.\n      // NOTE: collecting styles is inefficient for browsers but ShadyCSS\n      // currently does this anyway. When it does not, this should be changed.\n\n      for (var i = 0; i < length; i++) {\n        var _style = styles[i];\n\n        _style.parentNode.removeChild(_style);\n\n        condensedStyle.textContent += _style.textContent;\n      } // Remove styles from nested templates in this scope.\n\n\n      shady_render_removeStylesFromLitTemplates(scopeName); // And then put the condensed style into the \"root\" template passed in as\n      // `template`.\n\n      var content = templateElement.content;\n\n      if (!!template) {\n        insertNodeIntoTemplate(template, condensedStyle, content.firstChild);\n      } else {\n        content.insertBefore(condensedStyle, content.firstChild);\n      } // Note, it's important that ShadyCSS gets the template that `lit-html`\n      // will actually render so that it can update the style inside when\n      // needed (e.g. @apply native Shadow DOM case).\n\n\n      window.ShadyCSS.prepareTemplateStyles(templateElement, scopeName);\n      var style = content.querySelector('style');\n\n      if (window.ShadyCSS.nativeShadow && style !== null) {\n        // When in native Shadow DOM, ensure the style created by ShadyCSS is\n        // included in initially rendered output (`renderedDOM`).\n        renderedDOM.insertBefore(style.cloneNode(true), renderedDOM.firstChild);\n      } else if (!!template) {\n        // When no style is left in the template, parts will be broken as a\n        // result. To fix this, we put back the style node ShadyCSS removed\n        // and then tell lit to remove that node from the template.\n        // There can be no style in the template in 2 cases (1) when Shady DOM\n        // is in use, ShadyCSS removes all styles, (2) when native Shadow DOM\n        // is in use ShadyCSS removes the style if it contains no content.\n        // NOTE, ShadyCSS creates its own style so we can safely add/remove\n        // `condensedStyle` here.\n        content.insertBefore(condensedStyle, content.firstChild);\n        var removes = new Set();\n        removes.add(condensedStyle);\n        removeNodesFromTemplate(template, removes);\n      }\n    };\n    /**\n     * Extension to the standard `render` method which supports rendering\n     * to ShadowRoots when the ShadyDOM (https://github.com/webcomponents/shadydom)\n     * and ShadyCSS (https://github.com/webcomponents/shadycss) polyfills are used\n     * or when the webcomponentsjs\n     * (https://github.com/webcomponents/webcomponentsjs) polyfill is used.\n     *\n     * Adds a `scopeName` option which is used to scope element DOM and stylesheets\n     * when native ShadowDOM is unavailable. The `scopeName` will be added to\n     * the class attribute of all rendered DOM. In addition, any style elements will\n     * be automatically re-written with this `scopeName` selector and moved out\n     * of the rendered DOM and into the document `<head>`.\n     *\n     * It is common to use this render method in conjunction with a custom element\n     * which renders a shadowRoot. When this is done, typically the element's\n     * `localName` should be used as the `scopeName`.\n     *\n     * In addition to DOM scoping, ShadyCSS also supports a basic shim for css\n     * custom properties (needed only on older browsers like IE11) and a shim for\n     * a deprecated feature called `@apply` that supports applying a set of css\n     * custom properties to a given location.\n     *\n     * Usage considerations:\n     *\n     * * Part values in `<style>` elements are only applied the first time a given\n     * `scopeName` renders. Subsequent changes to parts in style elements will have\n     * no effect. Because of this, parts in style elements should only be used for\n     * values that will never change, for example parts that set scope-wide theme\n     * values or parts which render shared style elements.\n     *\n     * * Note, due to a limitation of the ShadyDOM polyfill, rendering in a\n     * custom element's `constructor` is not supported. Instead rendering should\n     * either done asynchronously, for example at microtask timing (for example\n     * `Promise.resolve()`), or be deferred until the first time the element's\n     * `connectedCallback` runs.\n     *\n     * Usage considerations when using shimmed custom properties or `@apply`:\n     *\n     * * Whenever any dynamic changes are made which affect\n     * css custom properties, `ShadyCSS.styleElement(element)` must be called\n     * to update the element. There are two cases when this is needed:\n     * (1) the element is connected to a new parent, (2) a class is added to the\n     * element that causes it to match different custom properties.\n     * To address the first case when rendering a custom element, `styleElement`\n     * should be called in the element's `connectedCallback`.\n     *\n     * * Shimmed custom properties may only be defined either for an entire\n     * shadowRoot (for example, in a `:host` rule) or via a rule that directly\n     * matches an element with a shadowRoot. In other words, instead of flowing from\n     * parent to child as do native css custom properties, shimmed custom properties\n     * flow only from shadowRoots to nested shadowRoots.\n     *\n     * * When using `@apply` mixing css shorthand property names with\n     * non-shorthand names (for example `border` and `border-width`) is not\n     * supported.\n     */\n\n\n    var shady_render_render = function render(result, container, options) {\n      if (!options || _typeof(options) !== 'object' || !options.scopeName) {\n        throw new Error('The `scopeName` option is required.');\n      }\n\n      var scopeName = options.scopeName;\n      var hasRendered = lib_render[\"a\"\n      /* parts */\n      ].has(container);\n      var needsScoping = compatibleShadyCSSVersion && container.nodeType === 11\n      /* Node.DOCUMENT_FRAGMENT_NODE */\n      && !!container.host; // Handle first render to a scope specially...\n\n      var firstScopeRender = needsScoping && !shadyRenderSet.has(scopeName); // On first scope render, render into a fragment; this cannot be a single\n      // fragment that is reused since nested renders can occur synchronously.\n\n      var renderContainer = firstScopeRender ? document.createDocumentFragment() : container;\n      Object(lib_render[\"b\"\n      /* render */\n      ])(result, renderContainer, Object.assign({\n        templateFactory: shady_render_shadyTemplateFactory(scopeName)\n      }, options)); // When performing first scope render,\n      // (1) We've rendered into a fragment so that there's a chance to\n      // `prepareTemplateStyles` before sub-elements hit the DOM\n      // (which might cause them to render based on a common pattern of\n      // rendering in a custom element's `connectedCallback`);\n      // (2) Scope the template with ShadyCSS one time only for this scope.\n      // (3) Render the fragment into the container and make sure the\n      // container knows its `part` is the one we just rendered. This ensures\n      // DOM will be re-used on subsequent renders.\n\n      if (firstScopeRender) {\n        var part = lib_render[\"a\"\n        /* parts */\n        ].get(renderContainer);\n        lib_render[\"a\"\n        /* parts */\n        ][\"delete\"](renderContainer); // ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)\n        // that should apply to `renderContainer` even if the rendered value is\n        // not a TemplateInstance. However, it will only insert scoped styles\n        // into the document if `prepareTemplateStyles` has already been called\n        // for the given scope name.\n\n        var template = part.value instanceof template_instance[\"a\"\n        /* TemplateInstance */\n        ] ? part.value.template : undefined;\n        shady_render_prepareTemplateStyles(scopeName, renderContainer, template);\n        Object(dom[\"b\"\n        /* removeNodes */\n        ])(container, container.firstChild);\n        container.appendChild(renderContainer);\n        lib_render[\"a\"\n        /* parts */\n        ].set(container, part);\n      } // After elements have hit the DOM, update styling if this is the\n      // initial render to this container.\n      // This is needed whenever dynamic changes are made so it would be\n      // safest to do every render; however, this would regress performance\n      // so we leave it up to the user to call `ShadyCSS.styleElement`\n      // for dynamic changes.\n\n\n      if (!hasRendered && needsScoping) {\n        window.ShadyCSS.styleElement(container.host);\n      }\n    }; // CONCATENATED MODULE: ./node_modules/lit-element/lib/updating-element.js\n\n\n    function _createForOfIteratorHelper(o, allowArrayLike) {\n      var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n      if (!it) {\n        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n          if (it) o = it;\n          var i = 0;\n\n          var F = function F() {};\n\n          return {\n            s: F,\n            n: function n() {\n              if (i >= o.length) return {\n                done: true\n              };\n              return {\n                done: false,\n                value: o[i++]\n              };\n            },\n            e: function e(_e) {\n              throw _e;\n            },\n            f: F\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var normalCompletion = true,\n          didErr = false,\n          err;\n      return {\n        s: function s() {\n          it = it.call(o);\n        },\n        n: function n() {\n          var step = it.next();\n          normalCompletion = step.done;\n          return step;\n        },\n        e: function e(_e2) {\n          didErr = true;\n          err = _e2;\n        },\n        f: function f() {\n          try {\n            if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n          } finally {\n            if (didErr) throw err;\n          }\n        }\n      };\n    }\n\n    function _toConsumableArray(arr) {\n      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n    }\n\n    function _nonIterableSpread() {\n      throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _iterableToArray(iter) {\n      if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n    }\n\n    function _arrayWithoutHoles(arr) {\n      if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n\n    function updating_element_typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        updating_element_typeof = function _typeof(obj) {\n          return typeof obj;\n        };\n      } else {\n        updating_element_typeof = function _typeof(obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return updating_element_typeof(obj);\n    }\n\n    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n      try {\n        var info = gen[key](arg);\n        var value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n\n      if (info.done) {\n        resolve(value);\n      } else {\n        Promise.resolve(value).then(_next, _throw);\n      }\n    }\n\n    function _asyncToGenerator(fn) {\n      return function () {\n        var self = this,\n            args = arguments;\n        return new Promise(function (resolve, reject) {\n          var gen = fn.apply(self, args);\n\n          function _next(value) {\n            asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n          }\n\n          function _throw(err) {\n            asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n          }\n\n          _next(undefined);\n        });\n      };\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    function _inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) _setPrototypeOf(subClass, superClass);\n    }\n\n    function _createSuper(Derived) {\n      var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n      return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n\n        if (hasNativeReflectConstruct) {\n          var NewTarget = _getPrototypeOf(this).constructor;\n\n          result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n          result = Super.apply(this, arguments);\n        }\n\n        return _possibleConstructorReturn(this, result);\n      };\n    }\n\n    function _possibleConstructorReturn(self, call) {\n      if (call && (updating_element_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n      }\n\n      return _assertThisInitialized(self);\n    }\n\n    function _assertThisInitialized(self) {\n      if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return self;\n    }\n\n    function _wrapNativeSuper(Class) {\n      var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n      _wrapNativeSuper = function _wrapNativeSuper(Class) {\n        if (Class === null || !_isNativeFunction(Class)) return Class;\n\n        if (typeof Class !== \"function\") {\n          throw new TypeError(\"Super expression must either be null or a function\");\n        }\n\n        if (typeof _cache !== \"undefined\") {\n          if (_cache.has(Class)) return _cache.get(Class);\n\n          _cache.set(Class, Wrapper);\n        }\n\n        function Wrapper() {\n          return _construct(Class, arguments, _getPrototypeOf(this).constructor);\n        }\n\n        Wrapper.prototype = Object.create(Class.prototype, {\n          constructor: {\n            value: Wrapper,\n            enumerable: false,\n            writable: true,\n            configurable: true\n          }\n        });\n        return _setPrototypeOf(Wrapper, Class);\n      };\n\n      return _wrapNativeSuper(Class);\n    }\n\n    function _construct(Parent, args, Class) {\n      if (_isNativeReflectConstruct()) {\n        _construct = Reflect.construct;\n      } else {\n        _construct = function _construct(Parent, args, Class) {\n          var a = [null];\n          a.push.apply(a, args);\n          var Constructor = Function.bind.apply(Parent, a);\n          var instance = new Constructor();\n          if (Class) _setPrototypeOf(instance, Class.prototype);\n          return instance;\n        };\n      }\n\n      return _construct.apply(null, arguments);\n    }\n\n    function _isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n      if (Reflect.construct.sham) return false;\n      if (typeof Proxy === \"function\") return true;\n\n      try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    function _isNativeFunction(fn) {\n      return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n    }\n\n    function _setPrototypeOf(o, p) {\n      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    function _getPrototypeOf(o) {\n      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n      };\n      return _getPrototypeOf(o);\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n\n    var _a;\n    /**\n     * Use this module if you want to create your own base class extending\n     * [[UpdatingElement]].\n     * @packageDocumentation\n     */\n\n    /*\n     * When using Closure Compiler, JSCompiler_renameProperty(property, object) is\n     * replaced at compile time by the munged name for object[property]. We cannot\n     * alias this function, so we have to use a small shim that has the same\n     * behavior when not compiling.\n     */\n\n\n    window.JSCompiler_renameProperty = function (prop, _obj) {\n      return prop;\n    };\n\n    var defaultConverter = {\n      toAttribute: function toAttribute(value, type) {\n        switch (type) {\n          case Boolean:\n            return value ? '' : null;\n\n          case Object:\n          case Array:\n            // if the value is `null` or `undefined` pass this through\n            // to allow removing/no change behavior.\n            return value == null ? value : JSON.stringify(value);\n        }\n\n        return value;\n      },\n      fromAttribute: function fromAttribute(value, type) {\n        switch (type) {\n          case Boolean:\n            return value !== null;\n\n          case Number:\n            return value === null ? null : Number(value);\n\n          case Object:\n          case Array:\n            return JSON.parse(value);\n        }\n\n        return value;\n      }\n    };\n    /**\n     * Change function that returns true if `value` is different from `oldValue`.\n     * This method is used as the default for a property's `hasChanged` function.\n     */\n\n    var notEqual = function notEqual(value, old) {\n      // This ensures (old==NaN, value==NaN) always returns false\n      return old !== value && (old === old || value === value);\n    };\n\n    var defaultPropertyDeclaration = {\n      attribute: true,\n      type: String,\n      converter: defaultConverter,\n      reflect: false,\n      hasChanged: notEqual\n    };\n    var STATE_HAS_UPDATED = 1;\n    var STATE_UPDATE_REQUESTED = 1 << 2;\n    var STATE_IS_REFLECTING_TO_ATTRIBUTE = 1 << 3;\n    var STATE_IS_REFLECTING_TO_PROPERTY = 1 << 4;\n    /**\n     * The Closure JS Compiler doesn't currently have good support for static\n     * property semantics where \"this\" is dynamic (e.g.\n     * https://github.com/google/closure-compiler/issues/3177 and others) so we use\n     * this hack to bypass any rewriting by the compiler.\n     */\n\n    var finalized = 'finalized';\n    /**\n     * Base element class which manages element properties and attributes. When\n     * properties change, the `update` method is asynchronously called. This method\n     * should be supplied by subclassers to render updates as desired.\n     * @noInheritDoc\n     */\n\n    var UpdatingElement = /*#__PURE__*/function (_HTMLElement) {\n      _inherits(UpdatingElement, _HTMLElement);\n\n      var _super = _createSuper(UpdatingElement);\n\n      function UpdatingElement() {\n        var _this;\n\n        _classCallCheck(this, UpdatingElement);\n\n        _this = _super.call(this);\n\n        _this.initialize();\n\n        return _this;\n      }\n      /**\n       * Returns a list of attributes corresponding to the registered properties.\n       * @nocollapse\n       */\n\n\n      _createClass(UpdatingElement, [{\n        key: \"initialize\",\n        value:\n        /**\n         * Performs element initialization. By default captures any pre-set values for\n         * registered properties.\n         */\n        function initialize() {\n          var _this2 = this;\n\n          this._updateState = 0;\n          this._updatePromise = new Promise(function (res) {\n            return _this2._enableUpdatingResolver = res;\n          });\n          this._changedProperties = new Map();\n\n          this._saveInstanceProperties(); // ensures first update will be caught by an early access of\n          // `updateComplete`\n\n\n          this.requestUpdateInternal();\n        }\n        /**\n         * Fixes any properties set on the instance before upgrade time.\n         * Otherwise these would shadow the accessor and break these properties.\n         * The properties are stored in a Map which is played back after the\n         * constructor runs. Note, on very old versions of Safari (<=9) or Chrome\n         * (<=41), properties created for native platform properties like (`id` or\n         * `name`) may not have default values set in the element constructor. On\n         * these browsers native properties appear on instances and therefore their\n         * default value will overwrite any element default (e.g. if the element sets\n         * this.id = 'id' in the constructor, the 'id' will become '' since this is\n         * the native platform default).\n         */\n\n      }, {\n        key: \"_saveInstanceProperties\",\n        value: function _saveInstanceProperties() {\n          var _this3 = this; // Use forEach so this works even if for/of loops are compiled to for loops\n          // expecting arrays\n\n\n          this.constructor._classProperties.forEach(function (_v, p) {\n            if (_this3.hasOwnProperty(p)) {\n              var value = _this3[p];\n              delete _this3[p];\n\n              if (!_this3._instanceProperties) {\n                _this3._instanceProperties = new Map();\n              }\n\n              _this3._instanceProperties.set(p, value);\n            }\n          });\n        }\n        /**\n         * Applies previously saved instance properties.\n         */\n\n      }, {\n        key: \"_applyInstanceProperties\",\n        value: function _applyInstanceProperties() {\n          var _this4 = this; // Use forEach so this works even if for/of loops are compiled to for loops\n          // expecting arrays\n          // tslint:disable-next-line:no-any\n\n\n          this._instanceProperties.forEach(function (v, p) {\n            return _this4[p] = v;\n          });\n\n          this._instanceProperties = undefined;\n        }\n      }, {\n        key: \"connectedCallback\",\n        value: function connectedCallback() {\n          // Ensure first connection completes an update. Updates cannot complete\n          // before connection.\n          this.enableUpdating();\n        }\n      }, {\n        key: \"enableUpdating\",\n        value: function enableUpdating() {\n          if (this._enableUpdatingResolver !== undefined) {\n            this._enableUpdatingResolver();\n\n            this._enableUpdatingResolver = undefined;\n          }\n        }\n        /**\n         * Allows for `super.disconnectedCallback()` in extensions while\n         * reserving the possibility of making non-breaking feature additions\n         * when disconnecting at some point in the future.\n         */\n\n      }, {\n        key: \"disconnectedCallback\",\n        value: function disconnectedCallback() {}\n        /**\n         * Synchronizes property values when attributes change.\n         */\n\n      }, {\n        key: \"attributeChangedCallback\",\n        value: function attributeChangedCallback(name, old, value) {\n          if (old !== value) {\n            this._attributeToProperty(name, value);\n          }\n        }\n      }, {\n        key: \"_propertyToAttribute\",\n        value: function _propertyToAttribute(name, value) {\n          var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultPropertyDeclaration;\n          var ctor = this.constructor;\n\n          var attr = ctor._attributeNameForProperty(name, options);\n\n          if (attr !== undefined) {\n            var attrValue = ctor._propertyValueToAttribute(value, options); // an undefined value does not change the attribute.\n\n\n            if (attrValue === undefined) {\n              return;\n            } // Track if the property is being reflected to avoid\n            // setting the property again via `attributeChangedCallback`. Note:\n            // 1. this takes advantage of the fact that the callback is synchronous.\n            // 2. will behave incorrectly if multiple attributes are in the reaction\n            // stack at time of calling. However, since we process attributes\n            // in `update` this should not be possible (or an extreme corner case\n            // that we'd like to discover).\n            // mark state reflecting\n\n\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_ATTRIBUTE;\n\n            if (attrValue == null) {\n              this.removeAttribute(attr);\n            } else {\n              this.setAttribute(attr, attrValue);\n            } // mark state not reflecting\n\n\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_ATTRIBUTE;\n          }\n        }\n      }, {\n        key: \"_attributeToProperty\",\n        value: function _attributeToProperty(name, value) {\n          // Use tracking info to avoid deserializing attribute value if it was\n          // just set from a property setter.\n          if (this._updateState & STATE_IS_REFLECTING_TO_ATTRIBUTE) {\n            return;\n          }\n\n          var ctor = this.constructor; // Note, hint this as an `AttributeMap` so closure clearly understands\n          // the type; it has issues with tracking types through statics\n          // tslint:disable-next-line:no-unnecessary-type-assertion\n\n          var propName = ctor._attributeToPropertyMap.get(name);\n\n          if (propName !== undefined) {\n            var options = ctor.getPropertyOptions(propName); // mark state reflecting\n\n            this._updateState = this._updateState | STATE_IS_REFLECTING_TO_PROPERTY;\n            this[propName] = // tslint:disable-next-line:no-any\n            ctor._propertyValueFromAttribute(value, options); // mark state not reflecting\n\n            this._updateState = this._updateState & ~STATE_IS_REFLECTING_TO_PROPERTY;\n          }\n        }\n        /**\n         * This protected version of `requestUpdate` does not access or return the\n         * `updateComplete` promise. This promise can be overridden and is therefore\n         * not free to access.\n         */\n\n      }, {\n        key: \"requestUpdateInternal\",\n        value: function requestUpdateInternal(name, oldValue, options) {\n          var shouldRequestUpdate = true; // If we have a property key, perform property update steps.\n\n          if (name !== undefined) {\n            var ctor = this.constructor;\n            options = options || ctor.getPropertyOptions(name);\n\n            if (ctor._valueHasChanged(this[name], oldValue, options.hasChanged)) {\n              if (!this._changedProperties.has(name)) {\n                this._changedProperties.set(name, oldValue);\n              } // Add to reflecting properties set.\n              // Note, it's important that every change has a chance to add the\n              // property to `_reflectingProperties`. This ensures setting\n              // attribute + property reflects correctly.\n\n\n              if (options.reflect === true && !(this._updateState & STATE_IS_REFLECTING_TO_PROPERTY)) {\n                if (this._reflectingProperties === undefined) {\n                  this._reflectingProperties = new Map();\n                }\n\n                this._reflectingProperties.set(name, options);\n              }\n            } else {\n              // Abort the request if the property should not be considered changed.\n              shouldRequestUpdate = false;\n            }\n          }\n\n          if (!this._hasRequestedUpdate && shouldRequestUpdate) {\n            this._updatePromise = this._enqueueUpdate();\n          }\n        }\n        /**\n         * Requests an update which is processed asynchronously. This should\n         * be called when an element should update based on some state not triggered\n         * by setting a property. In this case, pass no arguments. It should also be\n         * called when manually implementing a property setter. In this case, pass the\n         * property `name` and `oldValue` to ensure that any configured property\n         * options are honored. Returns the `updateComplete` Promise which is resolved\n         * when the update completes.\n         *\n         * @param name {PropertyKey} (optional) name of requesting property\n         * @param oldValue {any} (optional) old value of requesting property\n         * @returns {Promise} A Promise that is resolved when the update completes.\n         */\n\n      }, {\n        key: \"requestUpdate\",\n        value: function requestUpdate(name, oldValue) {\n          this.requestUpdateInternal(name, oldValue);\n          return this.updateComplete;\n        }\n        /**\n         * Sets up the element to asynchronously update.\n         */\n\n      }, {\n        key: \"_enqueueUpdate\",\n        value: function () {\n          var _enqueueUpdate2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var result;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    this._updateState = this._updateState | STATE_UPDATE_REQUESTED;\n                    _context.prev = 1;\n                    _context.next = 4;\n                    return this._updatePromise;\n\n                  case 4:\n                    _context.next = 8;\n                    break;\n\n                  case 6:\n                    _context.prev = 6;\n                    _context.t0 = _context[\"catch\"](1);\n\n                  case 8:\n                    result = this.performUpdate(); // If `performUpdate` returns a Promise, we await it. This is done to\n                    // enable coordinating updates with a scheduler. Note, the result is\n                    // checked to avoid delaying an additional microtask unless we need to.\n\n                    if (!(result != null)) {\n                      _context.next = 12;\n                      break;\n                    }\n\n                    _context.next = 12;\n                    return result;\n\n                  case 12:\n                    return _context.abrupt(\"return\", !this._hasRequestedUpdate);\n\n                  case 13:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee, this, [[1, 6]]);\n          }));\n\n          function _enqueueUpdate() {\n            return _enqueueUpdate2.apply(this, arguments);\n          }\n\n          return _enqueueUpdate;\n        }()\n      }, {\n        key: \"_hasRequestedUpdate\",\n        get: function get() {\n          return this._updateState & STATE_UPDATE_REQUESTED;\n        }\n      }, {\n        key: \"hasUpdated\",\n        get: function get() {\n          return this._updateState & STATE_HAS_UPDATED;\n        }\n        /**\n         * Performs an element update. Note, if an exception is thrown during the\n         * update, `firstUpdated` and `updated` will not be called.\n         *\n         * You can override this method to change the timing of updates. If this\n         * method is overridden, `super.performUpdate()` must be called.\n         *\n         * For instance, to schedule updates to occur just before the next frame:\n         *\n         * ```\n         * protected async performUpdate(): Promise<unknown> {\n         *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));\n         *   super.performUpdate();\n         * }\n         * ```\n         */\n\n      }, {\n        key: \"performUpdate\",\n        value: function performUpdate() {\n          // Abort any update if one is not pending when this is called.\n          // This can happen if `performUpdate` is called early to \"flush\"\n          // the update.\n          if (!this._hasRequestedUpdate) {\n            return;\n          } // Mixin instance properties once, if they exist.\n\n\n          if (this._instanceProperties) {\n            this._applyInstanceProperties();\n          }\n\n          var shouldUpdate = false;\n          var changedProperties = this._changedProperties;\n\n          try {\n            shouldUpdate = this.shouldUpdate(changedProperties);\n\n            if (shouldUpdate) {\n              this.update(changedProperties);\n            } else {\n              this._markUpdated();\n            }\n          } catch (e) {\n            // Prevent `firstUpdated` and `updated` from running when there's an\n            // update exception.\n            shouldUpdate = false; // Ensure element can accept additional updates after an exception.\n\n            this._markUpdated();\n\n            throw e;\n          }\n\n          if (shouldUpdate) {\n            if (!(this._updateState & STATE_HAS_UPDATED)) {\n              this._updateState = this._updateState | STATE_HAS_UPDATED;\n              this.firstUpdated(changedProperties);\n            }\n\n            this.updated(changedProperties);\n          }\n        }\n      }, {\n        key: \"_markUpdated\",\n        value: function _markUpdated() {\n          this._changedProperties = new Map();\n          this._updateState = this._updateState & ~STATE_UPDATE_REQUESTED;\n        }\n        /**\n         * Returns a Promise that resolves when the element has completed updating.\n         * The Promise value is a boolean that is `true` if the element completed the\n         * update without triggering another update. The Promise result is `false` if\n         * a property was set inside `updated()`. If the Promise is rejected, an\n         * exception was thrown during the update.\n         *\n         * To await additional asynchronous work, override the `_getUpdateComplete`\n         * method. For example, it is sometimes useful to await a rendered element\n         * before fulfilling this Promise. To do this, first await\n         * `super._getUpdateComplete()`, then any subsequent state.\n         *\n         * @returns {Promise} The Promise returns a boolean that indicates if the\n         * update resolved without triggering another update.\n         */\n\n      }, {\n        key: \"updateComplete\",\n        get: function get() {\n          return this._getUpdateComplete();\n        }\n        /**\n         * Override point for the `updateComplete` promise.\n         *\n         * It is not safe to override the `updateComplete` getter directly due to a\n         * limitation in TypeScript which means it is not possible to call a\n         * superclass getter (e.g. `super.updateComplete.then(...)`) when the target\n         * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).\n         * This method should be overridden instead. For example:\n         *\n         *   class MyElement extends LitElement {\n         *     async _getUpdateComplete() {\n         *       await super._getUpdateComplete();\n         *       await this._myChild.updateComplete;\n         *     }\n         *   }\n         */\n\n      }, {\n        key: \"_getUpdateComplete\",\n        value: function _getUpdateComplete() {\n          return this._updatePromise;\n        }\n        /**\n         * Controls whether or not `update` should be called when the element requests\n         * an update. By default, this method always returns `true`, but this can be\n         * customized to control when to update.\n         *\n         * @param _changedProperties Map of changed properties with old values\n         */\n\n      }, {\n        key: \"shouldUpdate\",\n        value: function shouldUpdate(_changedProperties) {\n          return true;\n        }\n        /**\n         * Updates the element. This method reflects property values to attributes.\n         * It can be overridden to render and keep updated element DOM.\n         * Setting properties inside this method will *not* trigger\n         * another update.\n         *\n         * @param _changedProperties Map of changed properties with old values\n         */\n\n      }, {\n        key: \"update\",\n        value: function update(_changedProperties) {\n          var _this5 = this;\n\n          if (this._reflectingProperties !== undefined && this._reflectingProperties.size > 0) {\n            // Use forEach so this works even if for/of loops are compiled to for\n            // loops expecting arrays\n            this._reflectingProperties.forEach(function (v, k) {\n              return _this5._propertyToAttribute(k, _this5[k], v);\n            });\n\n            this._reflectingProperties = undefined;\n          }\n\n          this._markUpdated();\n        }\n        /**\n         * Invoked whenever the element is updated. Implement to perform\n         * post-updating tasks via DOM APIs, for example, focusing an element.\n         *\n         * Setting properties inside this method will trigger the element to update\n         * again after this update cycle completes.\n         *\n         * @param _changedProperties Map of changed properties with old values\n         */\n\n      }, {\n        key: \"updated\",\n        value: function updated(_changedProperties) {}\n        /**\n         * Invoked when the element is first updated. Implement to perform one time\n         * work on the element after update.\n         *\n         * Setting properties inside this method will trigger the element to update\n         * again after this update cycle completes.\n         *\n         * @param _changedProperties Map of changed properties with old values\n         */\n\n      }, {\n        key: \"firstUpdated\",\n        value: function firstUpdated(_changedProperties) {}\n      }], [{\n        key: \"observedAttributes\",\n        get: function get() {\n          var _this6 = this; // note: piggy backing on this to ensure we're finalized.\n\n\n          this.finalize();\n          var attributes = []; // Use forEach so this works even if for/of loops are compiled to for loops\n          // expecting arrays\n\n          this._classProperties.forEach(function (v, p) {\n            var attr = _this6._attributeNameForProperty(p, v);\n\n            if (attr !== undefined) {\n              _this6._attributeToPropertyMap.set(attr, p);\n\n              attributes.push(attr);\n            }\n          });\n\n          return attributes;\n        }\n        /**\n         * Ensures the private `_classProperties` property metadata is created.\n         * In addition to `finalize` this is also called in `createProperty` to\n         * ensure the `@property` decorator can add property metadata.\n         */\n\n        /** @nocollapse */\n\n      }, {\n        key: \"_ensureClassProperties\",\n        value: function _ensureClassProperties() {\n          var _this7 = this; // ensure private storage for property declarations.\n\n\n          if (!this.hasOwnProperty(JSCompiler_renameProperty('_classProperties', this))) {\n            this._classProperties = new Map(); // NOTE: Workaround IE11 not supporting Map constructor argument.\n\n            var superProperties = Object.getPrototypeOf(this)._classProperties;\n\n            if (superProperties !== undefined) {\n              superProperties.forEach(function (v, k) {\n                return _this7._classProperties.set(k, v);\n              });\n            }\n          }\n        }\n        /**\n         * Creates a property accessor on the element prototype if one does not exist\n         * and stores a PropertyDeclaration for the property with the given options.\n         * The property setter calls the property's `hasChanged` property option\n         * or uses a strict identity check to determine whether or not to request\n         * an update.\n         *\n         * This method may be overridden to customize properties; however,\n         * when doing so, it's important to call `super.createProperty` to ensure\n         * the property is setup correctly. This method calls\n         * `getPropertyDescriptor` internally to get a descriptor to install.\n         * To customize what properties do when they are get or set, override\n         * `getPropertyDescriptor`. To customize the options for a property,\n         * implement `createProperty` like this:\n         *\n         * static createProperty(name, options) {\n         *   options = Object.assign(options, {myOption: true});\n         *   super.createProperty(name, options);\n         * }\n         *\n         * @nocollapse\n         */\n\n      }, {\n        key: \"createProperty\",\n        value: function createProperty(name) {\n          var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultPropertyDeclaration; // Note, since this can be called by the `@property` decorator which\n          // is called before `finalize`, we ensure storage exists for property\n          // metadata.\n\n          this._ensureClassProperties();\n\n          this._classProperties.set(name, options); // Do not generate an accessor if the prototype already has one, since\n          // it would be lost otherwise and that would never be the user's intention;\n          // Instead, we expect users to call `requestUpdate` themselves from\n          // user-defined accessors. Note that if the super has an accessor we will\n          // still overwrite it\n\n\n          if (options.noAccessor || this.prototype.hasOwnProperty(name)) {\n            return;\n          }\n\n          var key = updating_element_typeof(name) === 'symbol' ? Symbol() : \"__\".concat(name);\n          var descriptor = this.getPropertyDescriptor(name, key, options);\n\n          if (descriptor !== undefined) {\n            Object.defineProperty(this.prototype, name, descriptor);\n          }\n        }\n        /**\n         * Returns a property descriptor to be defined on the given named property.\n         * If no descriptor is returned, the property will not become an accessor.\n         * For example,\n         *\n         *   class MyElement extends LitElement {\n         *     static getPropertyDescriptor(name, key, options) {\n         *       const defaultDescriptor =\n         *           super.getPropertyDescriptor(name, key, options);\n         *       const setter = defaultDescriptor.set;\n         *       return {\n         *         get: defaultDescriptor.get,\n         *         set(value) {\n         *           setter.call(this, value);\n         *           // custom action.\n         *         },\n         *         configurable: true,\n         *         enumerable: true\n         *       }\n         *     }\n         *   }\n         *\n         * @nocollapse\n         */\n\n      }, {\n        key: \"getPropertyDescriptor\",\n        value: function getPropertyDescriptor(name, key, options) {\n          return {\n            // tslint:disable-next-line:no-any no symbol in index\n            get: function get() {\n              return this[key];\n            },\n            set: function set(value) {\n              var oldValue = this[name];\n              this[key] = value;\n              this.requestUpdateInternal(name, oldValue, options);\n            },\n            configurable: true,\n            enumerable: true\n          };\n        }\n        /**\n         * Returns the property options associated with the given property.\n         * These options are defined with a PropertyDeclaration via the `properties`\n         * object or the `@property` decorator and are registered in\n         * `createProperty(...)`.\n         *\n         * Note, this method should be considered \"final\" and not overridden. To\n         * customize the options for a given property, override `createProperty`.\n         *\n         * @nocollapse\n         * @final\n         */\n\n      }, {\n        key: \"getPropertyOptions\",\n        value: function getPropertyOptions(name) {\n          return this._classProperties && this._classProperties.get(name) || defaultPropertyDeclaration;\n        }\n        /**\n         * Creates property accessors for registered properties and ensures\n         * any superclasses are also finalized.\n         * @nocollapse\n         */\n\n      }, {\n        key: \"finalize\",\n        value: function finalize() {\n          // finalize any superclasses\n          var superCtor = Object.getPrototypeOf(this);\n\n          if (!superCtor.hasOwnProperty(finalized)) {\n            superCtor.finalize();\n          }\n\n          this[finalized] = true;\n\n          this._ensureClassProperties(); // initialize Map populated in observedAttributes\n\n\n          this._attributeToPropertyMap = new Map(); // make any properties\n          // Note, only process \"own\" properties since this element will inherit\n          // any properties defined on the superClass, and finalization ensures\n          // the entire prototype chain is finalized.\n\n          if (this.hasOwnProperty(JSCompiler_renameProperty('properties', this))) {\n            var props = this.properties; // support symbols in properties (IE11 does not support this)\n\n            var propKeys = [].concat(_toConsumableArray(Object.getOwnPropertyNames(props)), _toConsumableArray(typeof Object.getOwnPropertySymbols === 'function' ? Object.getOwnPropertySymbols(props) : [])); // This for/of is ok because propKeys is an array\n\n            var _iterator = _createForOfIteratorHelper(propKeys),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var p = _step.value; // note, use of `any` is due to TypeSript lack of support for symbol in\n                // index types\n                // tslint:disable-next-line:no-any no symbol in index\n\n                this.createProperty(p, props[p]);\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n          }\n        }\n        /**\n         * Returns the property name for the given attribute `name`.\n         * @nocollapse\n         */\n\n      }, {\n        key: \"_attributeNameForProperty\",\n        value: function _attributeNameForProperty(name, options) {\n          var attribute = options.attribute;\n          return attribute === false ? undefined : typeof attribute === 'string' ? attribute : typeof name === 'string' ? name.toLowerCase() : undefined;\n        }\n        /**\n         * Returns true if a property should request an update.\n         * Called when a property value is set and uses the `hasChanged`\n         * option for the property if present or a strict identity check.\n         * @nocollapse\n         */\n\n      }, {\n        key: \"_valueHasChanged\",\n        value: function _valueHasChanged(value, old) {\n          var hasChanged = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : notEqual;\n          return hasChanged(value, old);\n        }\n        /**\n         * Returns the property value for the given attribute value.\n         * Called via the `attributeChangedCallback` and uses the property's\n         * `converter` or `converter.fromAttribute` property option.\n         * @nocollapse\n         */\n\n      }, {\n        key: \"_propertyValueFromAttribute\",\n        value: function _propertyValueFromAttribute(value, options) {\n          var type = options.type;\n          var converter = options.converter || defaultConverter;\n          var fromAttribute = typeof converter === 'function' ? converter : converter.fromAttribute;\n          return fromAttribute ? fromAttribute(value, type) : value;\n        }\n        /**\n         * Returns the attribute value for the given property value. If this\n         * returns undefined, the property will *not* be reflected to an attribute.\n         * If this returns null, the attribute will be removed, otherwise the\n         * attribute will be set to the value.\n         * This uses the property's `reflect` and `type.toAttribute` property options.\n         * @nocollapse\n         */\n\n      }, {\n        key: \"_propertyValueToAttribute\",\n        value: function _propertyValueToAttribute(value, options) {\n          if (options.reflect === undefined) {\n            return;\n          }\n\n          var type = options.type;\n          var converter = options.converter;\n          var toAttribute = converter && converter.toAttribute || defaultConverter.toAttribute;\n          return toAttribute(value, type);\n        }\n      }]);\n\n      return UpdatingElement;\n    }( /*#__PURE__*/_wrapNativeSuper(HTMLElement));\n\n    _a = finalized;\n    /**\n     * Marks class as having finished creating properties.\n     */\n\n    UpdatingElement[_a] = true; // CONCATENATED MODULE: ./node_modules/lit-element/lib/decorators.js\n\n    function decorators_asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n      try {\n        var info = gen[key](arg);\n        var value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n\n      if (info.done) {\n        resolve(value);\n      } else {\n        Promise.resolve(value).then(_next, _throw);\n      }\n    }\n\n    function decorators_asyncToGenerator(fn) {\n      return function () {\n        var self = this,\n            args = arguments;\n        return new Promise(function (resolve, reject) {\n          var gen = fn.apply(self, args);\n\n          function _next(value) {\n            decorators_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n          }\n\n          function _throw(err) {\n            decorators_asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n          }\n\n          _next(undefined);\n        });\n      };\n    }\n\n    function decorators_typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        decorators_typeof = function _typeof(obj) {\n          return typeof obj;\n        };\n      } else {\n        decorators_typeof = function _typeof(obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return decorators_typeof(obj);\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n\n    var legacyCustomElement = function legacyCustomElement(tagName, clazz) {\n      window.customElements.define(tagName, clazz); // Cast as any because TS doesn't recognize the return type as being a\n      // subtype of the decorated class when clazz is typed as\n      // `Constructor<HTMLElement>` for some reason.\n      // `Constructor<HTMLElement>` is helpful to make sure the decorator is\n      // applied to elements however.\n      // tslint:disable-next-line:no-any\n\n      return clazz;\n    };\n\n    var standardCustomElement = function standardCustomElement(tagName, descriptor) {\n      var kind = descriptor.kind,\n          elements = descriptor.elements;\n      return {\n        kind: kind,\n        elements: elements,\n        // This callback is called once the class is otherwise fully defined\n        finisher: function finisher(clazz) {\n          window.customElements.define(tagName, clazz);\n        }\n      };\n    };\n    /**\n     * Class decorator factory that defines the decorated class as a custom element.\n     *\n     * ```\n     * @customElement('my-element')\n     * class MyElement {\n     *   render() {\n     *     return html``;\n     *   }\n     * }\n     * ```\n     * @category Decorator\n     * @param tagName The name of the custom element to define.\n     */\n\n\n    var customElement = function customElement(tagName) {\n      return function (classOrDescriptor) {\n        return typeof classOrDescriptor === 'function' ? legacyCustomElement(tagName, classOrDescriptor) : standardCustomElement(tagName, classOrDescriptor);\n      };\n    };\n\n    var standardProperty = function standardProperty(options, element) {\n      // When decorating an accessor, pass it through and add property metadata.\n      // Note, the `hasOwnProperty` check in `createProperty` ensures we don't\n      // stomp over the user's accessor.\n      if (element.kind === 'method' && element.descriptor && !('value' in element.descriptor)) {\n        return Object.assign(Object.assign({}, element), {\n          finisher: function finisher(clazz) {\n            clazz.createProperty(element.key, options);\n          }\n        });\n      } else {\n        // createProperty() takes care of defining the property, but we still\n        // must return some kind of descriptor, so return a descriptor for an\n        // unused prototype field. The finisher calls createProperty().\n        return {\n          kind: 'field',\n          key: Symbol(),\n          placement: 'own',\n          descriptor: {},\n          // When @babel/plugin-proposal-decorators implements initializers,\n          // do this instead of the initializer below. See:\n          // https://github.com/babel/babel/issues/9260 extras: [\n          //   {\n          //     kind: 'initializer',\n          //     placement: 'own',\n          //     initializer: descriptor.initializer,\n          //   }\n          // ],\n          initializer: function initializer() {\n            if (typeof element.initializer === 'function') {\n              this[element.key] = element.initializer.call(this);\n            }\n          },\n          finisher: function finisher(clazz) {\n            clazz.createProperty(element.key, options);\n          }\n        };\n      }\n    };\n\n    var legacyProperty = function legacyProperty(options, proto, name) {\n      proto.constructor.createProperty(name, options);\n    };\n    /**\n     * A property decorator which creates a LitElement property which reflects a\n     * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be\n     * supplied to configure property features.\n     *\n     * This decorator should only be used for public fields. Private or protected\n     * fields should use the [[`internalProperty`]] decorator.\n     *\n     * @example\n     * ```ts\n     * class MyElement {\n     *   @property({ type: Boolean })\n     *   clicked = false;\n     * }\n     * ```\n     * @category Decorator\n     * @ExportDecoratedItems\n     */\n\n\n    function property(options) {\n      // tslint:disable-next-line:no-any decorator\n      return function (protoOrDescriptor, name) {\n        return name !== undefined ? legacyProperty(options, protoOrDescriptor, name) : standardProperty(options, protoOrDescriptor);\n      };\n    }\n    /**\n     * Declares a private or protected property that still triggers updates to the\n     * element when it changes.\n     *\n     * Properties declared this way must not be used from HTML or HTML templating\n     * systems, they're solely for properties internal to the element. These\n     * properties may be renamed by optimization tools like closure compiler.\n     * @category Decorator\n     */\n\n\n    function internalProperty(options) {\n      return property({\n        attribute: false,\n        hasChanged: options === null || options === void 0 ? void 0 : options.hasChanged\n      });\n    }\n    /**\n     * A property decorator that converts a class property into a getter that\n     * executes a querySelector on the element's renderRoot.\n     *\n     * @param selector A DOMString containing one or more selectors to match.\n     * @param cache An optional boolean which when true performs the DOM query only\n     * once and caches the result.\n     *\n     * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n     *\n     * @example\n     *\n     * ```ts\n     * class MyElement {\n     *   @query('#first')\n     *   first;\n     *\n     *   render() {\n     *     return html`\n     *       <div id=\"first\"></div>\n     *       <div id=\"second\"></div>\n     *     `;\n     *   }\n     * }\n     * ```\n     * @category Decorator\n     */\n\n\n    function query(selector, cache) {\n      return function (protoOrDescriptor, // tslint:disable-next-line:no-any decorator\n      name) {\n        var descriptor = {\n          get: function get() {\n            return this.renderRoot.querySelector(selector);\n          },\n          enumerable: true,\n          configurable: true\n        };\n\n        if (cache) {\n          var key = decorators_typeof(name) === 'symbol' ? Symbol() : \"__\".concat(name);\n\n          descriptor.get = function () {\n            if (this[key] === undefined) {\n              this[key] = this.renderRoot.querySelector(selector);\n            }\n\n            return this[key];\n          };\n        }\n\n        return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);\n      };\n    } // Note, in the future, we may extend this decorator to support the use case\n    // where the queried element may need to do work to become ready to interact\n    // with (e.g. load some implementation code). If so, we might elect to\n    // add a second argument defining a function that can be run to make the\n    // queried element loaded/updated/ready.\n\n    /**\n     * A property decorator that converts a class property into a getter that\n     * returns a promise that resolves to the result of a querySelector on the\n     * element's renderRoot done after the element's `updateComplete` promise\n     * resolves. When the queried property may change with element state, this\n     * decorator can be used instead of requiring users to await the\n     * `updateComplete` before accessing the property.\n     *\n     * @param selector A DOMString containing one or more selectors to match.\n     *\n     * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector\n     *\n     * @example\n     * ```ts\n     * class MyElement {\n     *   @queryAsync('#first')\n     *   first;\n     *\n     *   render() {\n     *     return html`\n     *       <div id=\"first\"></div>\n     *       <div id=\"second\"></div>\n     *     `;\n     *   }\n     * }\n     *\n     * // external usage\n     * async doSomethingWithFirst() {\n     *  (await aMyElement.first).doSomething();\n     * }\n     * ```\n     * @category Decorator\n     */\n\n\n    function queryAsync(selector) {\n      return function (protoOrDescriptor, // tslint:disable-next-line:no-any decorator\n      name) {\n        var descriptor = {\n          get: function get() {\n            var _this = this;\n\n            return decorators_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _this.updateComplete;\n\n                    case 2:\n                      return _context.abrupt(\"return\", _this.renderRoot.querySelector(selector));\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }))();\n          },\n          enumerable: true,\n          configurable: true\n        };\n        return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);\n      };\n    }\n    /**\n     * A property decorator that converts a class property into a getter\n     * that executes a querySelectorAll on the element's renderRoot.\n     *\n     * @param selector A DOMString containing one or more selectors to match.\n     *\n     * See:\n     * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll\n     *\n     * @example\n     * ```ts\n     * class MyElement {\n     *   @queryAll('div')\n     *   divs;\n     *\n     *   render() {\n     *     return html`\n     *       <div id=\"first\"></div>\n     *       <div id=\"second\"></div>\n     *     `;\n     *   }\n     * }\n     * ```\n     * @category Decorator\n     */\n\n\n    function queryAll(selector) {\n      return function (protoOrDescriptor, // tslint:disable-next-line:no-any decorator\n      name) {\n        var descriptor = {\n          get: function get() {\n            return this.renderRoot.querySelectorAll(selector);\n          },\n          enumerable: true,\n          configurable: true\n        };\n        return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);\n      };\n    }\n\n    var legacyQuery = function legacyQuery(descriptor, proto, name) {\n      Object.defineProperty(proto, name, descriptor);\n    };\n\n    var standardQuery = function standardQuery(descriptor, element) {\n      return {\n        kind: 'method',\n        placement: 'prototype',\n        key: element.key,\n        descriptor: descriptor\n      };\n    };\n\n    var standardEventOptions = function standardEventOptions(options, element) {\n      return Object.assign(Object.assign({}, element), {\n        finisher: function finisher(clazz) {\n          Object.assign(clazz.prototype[element.key], options);\n        }\n      });\n    };\n\n    var legacyEventOptions = // tslint:disable-next-line:no-any legacy decorator\n    function legacyEventOptions(options, proto, name) {\n      Object.assign(proto[name], options);\n    };\n    /**\n     * Adds event listener options to a method used as an event listener in a\n     * lit-html template.\n     *\n     * @param options An object that specifies event listener options as accepted by\n     * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.\n     *\n     * Current browsers support the `capture`, `passive`, and `once` options. See:\n     * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters\n     *\n     * @example\n     * ```ts\n     * class MyElement {\n     *   clicked = false;\n     *\n     *   render() {\n     *     return html`\n     *       <div @click=${this._onClick}`>\n     *         <button></button>\n     *       </div>\n     *     `;\n     *   }\n     *\n     *   @eventOptions({capture: true})\n     *   _onClick(e) {\n     *     this.clicked = true;\n     *   }\n     * }\n     * ```\n     * @category Decorator\n     */\n\n\n    function eventOptions(options) {\n      // Return value typed as any to prevent TypeScript from complaining that\n      // standard decorator function signature does not match TypeScript decorator\n      // signature\n      // TODO(kschaaf): unclear why it was only failing on this decorator and not\n      // the others\n      return function (protoOrDescriptor, name) {\n        return name !== undefined ? legacyEventOptions(options, protoOrDescriptor, name) : standardEventOptions(options, protoOrDescriptor);\n      };\n    } // x-browser support for matches\n    // tslint:disable-next-line:no-any\n\n\n    var ElementProto = Element.prototype;\n    var legacyMatches = ElementProto.msMatchesSelector || ElementProto.webkitMatchesSelector;\n    /**\n     * A property decorator that converts a class property into a getter that\n     * returns the `assignedNodes` of the given named `slot`. Note, the type of\n     * this property should be annotated as `NodeListOf<HTMLElement>`.\n     *\n     * @param slotName A string name of the slot.\n     * @param flatten A boolean which when true flattens the assigned nodes,\n     * meaning any assigned nodes that are slot elements are replaced with their\n     * assigned nodes.\n     * @param selector A string which filters the results to elements that match\n     * the given css selector.\n     *\n     * * @example\n     * ```ts\n     * class MyElement {\n     *   @queryAssignedNodes('list', true, '.item')\n     *   listItems;\n     *\n     *   render() {\n     *     return html`\n     *       <slot name=\"list\"></slot>\n     *     `;\n     *   }\n     * }\n     * ```\n     * @category Decorator\n     */\n\n    function queryAssignedNodes() {\n      var slotName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var flatten = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var selector = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n      return function (protoOrDescriptor, // tslint:disable-next-line:no-any decorator\n      name) {\n        var descriptor = {\n          get: function get() {\n            var slotSelector = \"slot\".concat(slotName ? \"[name=\".concat(slotName, \"]\") : ':not([name])');\n            var slot = this.renderRoot.querySelector(slotSelector);\n            var nodes = slot && slot.assignedNodes({\n              flatten: flatten\n            });\n\n            if (nodes && selector) {\n              nodes = nodes.filter(function (node) {\n                return node.nodeType === Node.ELEMENT_NODE && node.matches ? node.matches(selector) : legacyMatches.call(node, selector);\n              });\n            }\n\n            return nodes;\n          },\n          enumerable: true,\n          configurable: true\n        };\n        return name !== undefined ? legacyQuery(descriptor, protoOrDescriptor, name) : standardQuery(descriptor, protoOrDescriptor);\n      };\n    } // CONCATENATED MODULE: ./node_modules/lit-element/lib/css-tag.js\n\n\n    function css_tag_classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function css_tag_defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function css_tag_createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) css_tag_defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) css_tag_defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n    /**\n    @license\n    Copyright (c) 2019 The Polymer Project Authors. All rights reserved.\n    This code may only be used under the BSD style license found at\n    http://polymer.github.io/LICENSE.txt The complete set of authors may be found at\n    http://polymer.github.io/AUTHORS.txt The complete set of contributors may be\n    found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\n    part of the polymer project is also subject to an additional IP rights grant\n    found at http://polymer.github.io/PATENTS.txt\n    */\n\n    /**\n     * Whether the current browser supports `adoptedStyleSheets`.\n     */\n\n\n    var supportsAdoptingStyleSheets = window.ShadowRoot && (window.ShadyCSS === undefined || window.ShadyCSS.nativeShadow) && 'adoptedStyleSheets' in Document.prototype && 'replace' in CSSStyleSheet.prototype;\n    var constructionToken = Symbol();\n\n    var CSSResult = /*#__PURE__*/function () {\n      function CSSResult(cssText, safeToken) {\n        css_tag_classCallCheck(this, CSSResult);\n\n        if (safeToken !== constructionToken) {\n          throw new Error('CSSResult is not constructable. Use `unsafeCSS` or `css` instead.');\n        }\n\n        this.cssText = cssText;\n      } // Note, this is a getter so that it's lazy. In practice, this means\n      // stylesheets are not created until the first element instance is made.\n\n\n      css_tag_createClass(CSSResult, [{\n        key: \"styleSheet\",\n        get: function get() {\n          if (this._styleSheet === undefined) {\n            // Note, if `supportsAdoptingStyleSheets` is true then we assume\n            // CSSStyleSheet is constructable.\n            if (supportsAdoptingStyleSheets) {\n              this._styleSheet = new CSSStyleSheet();\n\n              this._styleSheet.replaceSync(this.cssText);\n            } else {\n              this._styleSheet = null;\n            }\n          }\n\n          return this._styleSheet;\n        }\n      }, {\n        key: \"toString\",\n        value: function toString() {\n          return this.cssText;\n        }\n      }]);\n      return CSSResult;\n    }();\n    /**\n     * Wrap a value for interpolation in a [[`css`]] tagged template literal.\n     *\n     * This is unsafe because untrusted CSS text can be used to phone home\n     * or exfiltrate data to an attacker controlled site. Take care to only use\n     * this with trusted input.\n     */\n\n\n    var unsafeCSS = function unsafeCSS(value) {\n      return new CSSResult(String(value), constructionToken);\n    };\n\n    var textFromCSSResult = function textFromCSSResult(value) {\n      if (value instanceof CSSResult) {\n        return value.cssText;\n      } else if (typeof value === 'number') {\n        return value;\n      } else {\n        throw new Error(\"Value passed to 'css' function must be a 'css' function result: \".concat(value, \". Use 'unsafeCSS' to pass non-literal values, but\\n            take care to ensure page security.\"));\n      }\n    };\n    /**\n     * Template tag which which can be used with LitElement's [[LitElement.styles |\n     * `styles`]] property to set element styles. For security reasons, only literal\n     * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]\n     * may be used inside a template string part.\n     */\n\n\n    var css = function css(strings) {\n      for (var _len = arguments.length, values = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        values[_key - 1] = arguments[_key];\n      }\n\n      var cssText = values.reduce(function (acc, v, idx) {\n        return acc + textFromCSSResult(v) + strings[idx + 1];\n      }, strings[0]);\n      return new CSSResult(cssText, constructionToken);\n    }; // CONCATENATED MODULE: ./node_modules/lit-element/lit-element.js\n\n\n    function lit_element_typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        lit_element_typeof = function _typeof(obj) {\n          return typeof obj;\n        };\n      } else {\n        lit_element_typeof = function _typeof(obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return lit_element_typeof(obj);\n    }\n\n    function lit_element_classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function lit_element_defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function lit_element_createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) lit_element_defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) lit_element_defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    function _get(target, property, receiver) {\n      if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        _get = Reflect.get;\n      } else {\n        _get = function _get(target, property, receiver) {\n          var base = _superPropBase(target, property);\n\n          if (!base) return;\n          var desc = Object.getOwnPropertyDescriptor(base, property);\n\n          if (desc.get) {\n            return desc.get.call(receiver);\n          }\n\n          return desc.value;\n        };\n      }\n\n      return _get(target, property, receiver || target);\n    }\n\n    function _superPropBase(object, property) {\n      while (!Object.prototype.hasOwnProperty.call(object, property)) {\n        object = lit_element_getPrototypeOf(object);\n        if (object === null) break;\n      }\n\n      return object;\n    }\n\n    function lit_element_inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) lit_element_setPrototypeOf(subClass, superClass);\n    }\n\n    function lit_element_setPrototypeOf(o, p) {\n      lit_element_setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return lit_element_setPrototypeOf(o, p);\n    }\n\n    function lit_element_createSuper(Derived) {\n      var hasNativeReflectConstruct = lit_element_isNativeReflectConstruct();\n      return function _createSuperInternal() {\n        var Super = lit_element_getPrototypeOf(Derived),\n            result;\n\n        if (hasNativeReflectConstruct) {\n          var NewTarget = lit_element_getPrototypeOf(this).constructor;\n          result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n          result = Super.apply(this, arguments);\n        }\n\n        return lit_element_possibleConstructorReturn(this, result);\n      };\n    }\n\n    function lit_element_possibleConstructorReturn(self, call) {\n      if (call && (lit_element_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n      }\n\n      return lit_element_assertThisInitialized(self);\n    }\n\n    function lit_element_assertThisInitialized(self) {\n      if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return self;\n    }\n\n    function lit_element_isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n      if (Reflect.construct.sham) return false;\n      if (typeof Proxy === \"function\") return true;\n\n      try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    function lit_element_getPrototypeOf(o) {\n      lit_element_getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n      };\n      return lit_element_getPrototypeOf(o);\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * The main LitElement module, which defines the [[`LitElement`]] base class and\n     * related APIs.\n     *\n     *  LitElement components can define a template and a set of observed\n     * properties. Changing an observed property triggers a re-render of the\n     * element.\n     *\n     *  Import [[`LitElement`]] and [[`html`]] from this module to create a\n     * component:\n     *\n     *  ```js\n     * import {LitElement, html} from 'lit-element';\n     *\n     * class MyElement extends LitElement {\n     *\n     *   // Declare observed properties\n     *   static get properties() {\n     *     return {\n     *       adjective: {}\n     *     }\n     *   }\n     *\n     *   constructor() {\n     *     this.adjective = 'awesome';\n     *   }\n     *\n     *   // Define the element's template\n     *   render() {\n     *     return html`<p>your ${adjective} template here</p>`;\n     *   }\n     * }\n     *\n     * customElements.define('my-element', MyElement);\n     * ```\n     *\n     * `LitElement` extends [[`UpdatingElement`]] and adds lit-html templating.\n     * The `UpdatingElement` class is provided for users that want to build\n     * their own custom element base classes that don't use lit-html.\n     *\n     * @packageDocumentation\n     */\n    // IMPORTANT: do not change the property name or the assignment expression.\n    // This line will be used in regexes to search for LitElement usage.\n    // TODO(justinfagnani): inject version number at build time\n\n\n    (window['litElementVersions'] || (window['litElementVersions'] = [])).push('2.4.0');\n    /**\n     * Sentinal value used to avoid calling lit-html's render function when\n     * subclasses do not implement `render`\n     */\n\n    var renderNotImplemented = {};\n    /**\n     * Base element class that manages element properties and attributes, and\n     * renders a lit-html template.\n     *\n     * To define a component, subclass `LitElement` and implement a\n     * `render` method to provide the component's template. Define properties\n     * using the [[`properties`]] property or the [[`property`]] decorator.\n     */\n\n    var lit_element_LitElement = /*#__PURE__*/function (_UpdatingElement) {\n      lit_element_inherits(LitElement, _UpdatingElement);\n\n      var _super = lit_element_createSuper(LitElement);\n\n      function LitElement() {\n        lit_element_classCallCheck(this, LitElement);\n        return _super.apply(this, arguments);\n      }\n\n      lit_element_createClass(LitElement, [{\n        key: \"initialize\",\n        value:\n        /**\n         * Performs element initialization. By default this calls\n         * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and\n         * captures any pre-set values for registered properties.\n         */\n        function initialize() {\n          _get(lit_element_getPrototypeOf(LitElement.prototype), \"initialize\", this).call(this);\n\n          this.constructor._getUniqueStyles();\n\n          this.renderRoot = this.createRenderRoot(); // Note, if renderRoot is not a shadowRoot, styles would/could apply to the\n          // element's getRootNode(). While this could be done, we're choosing not to\n          // support this now since it would require different logic around de-duping.\n\n          if (window.ShadowRoot && this.renderRoot instanceof window.ShadowRoot) {\n            this.adoptStyles();\n          }\n        }\n        /**\n         * Returns the node into which the element should render and by default\n         * creates and returns an open shadowRoot. Implement to customize where the\n         * element's DOM is rendered. For example, to render into the element's\n         * childNodes, return `this`.\n         * @returns {Element|DocumentFragment} Returns a node into which to render.\n         */\n\n      }, {\n        key: \"createRenderRoot\",\n        value: function createRenderRoot() {\n          return this.attachShadow({\n            mode: 'open'\n          });\n        }\n        /**\n         * Applies styling to the element shadowRoot using the [[`styles`]]\n         * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where\n         * available and will fallback otherwise. When Shadow DOM is polyfilled,\n         * ShadyCSS scopes styles and adds them to the document. When Shadow DOM\n         * is available but `adoptedStyleSheets` is not, styles are appended to the\n         * end of the `shadowRoot` to [mimic spec\n         * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).\n         */\n\n      }, {\n        key: \"adoptStyles\",\n        value: function adoptStyles() {\n          var styles = this.constructor._styles;\n\n          if (styles.length === 0) {\n            return;\n          } // There are three separate cases here based on Shadow DOM support.\n          // (1) shadowRoot polyfilled: use ShadyCSS\n          // (2) shadowRoot.adoptedStyleSheets available: use it\n          // (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after\n          // rendering\n\n\n          if (window.ShadyCSS !== undefined && !window.ShadyCSS.nativeShadow) {\n            window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map(function (s) {\n              return s.cssText;\n            }), this.localName);\n          } else if (supportsAdoptingStyleSheets) {\n            this.renderRoot.adoptedStyleSheets = styles.map(function (s) {\n              return s instanceof CSSStyleSheet ? s : s.styleSheet;\n            });\n          } else {\n            // This must be done after rendering so the actual style insertion is done\n            // in `update`.\n            this._needsShimAdoptedStyleSheets = true;\n          }\n        }\n      }, {\n        key: \"connectedCallback\",\n        value: function connectedCallback() {\n          _get(lit_element_getPrototypeOf(LitElement.prototype), \"connectedCallback\", this).call(this); // Note, first update/render handles styleElement so we only call this if\n          // connected after first update.\n\n\n          if (this.hasUpdated && window.ShadyCSS !== undefined) {\n            window.ShadyCSS.styleElement(this);\n          }\n        }\n        /**\n         * Updates the element. This method reflects property values to attributes\n         * and calls `render` to render DOM via lit-html. Setting properties inside\n         * this method will *not* trigger another update.\n         * @param _changedProperties Map of changed properties with old values\n         */\n\n      }, {\n        key: \"update\",\n        value: function update(changedProperties) {\n          var _this = this; // Setting properties in `render` should not trigger an update. Since\n          // updates are allowed after super.update, it's important to call `render`\n          // before that.\n\n\n          var templateResult = this.render();\n\n          _get(lit_element_getPrototypeOf(LitElement.prototype), \"update\", this).call(this, changedProperties); // If render is not implemented by the component, don't call lit-html render\n\n\n          if (templateResult !== renderNotImplemented) {\n            this.constructor.render(templateResult, this.renderRoot, {\n              scopeName: this.localName,\n              eventContext: this\n            });\n          } // When native Shadow DOM is used but adoptedStyles are not supported,\n          // insert styling after rendering to ensure adoptedStyles have highest\n          // priority.\n\n\n          if (this._needsShimAdoptedStyleSheets) {\n            this._needsShimAdoptedStyleSheets = false;\n\n            this.constructor._styles.forEach(function (s) {\n              var style = document.createElement('style');\n              style.textContent = s.cssText;\n\n              _this.renderRoot.appendChild(style);\n            });\n          }\n        }\n        /**\n         * Invoked on each update to perform rendering tasks. This method may return\n         * any value renderable by lit-html's `NodePart` - typically a\n         * `TemplateResult`. Setting properties inside this method will *not* trigger\n         * the element to update.\n         */\n\n      }, {\n        key: \"render\",\n        value: function render() {\n          return renderNotImplemented;\n        }\n      }], [{\n        key: \"getStyles\",\n        value:\n        /**\n         * Return the array of styles to apply to the element.\n         * Override this method to integrate into a style management system.\n         *\n         * @nocollapse\n         */\n        function getStyles() {\n          return this.styles;\n        }\n        /** @nocollapse */\n\n      }, {\n        key: \"_getUniqueStyles\",\n        value: function _getUniqueStyles() {\n          // Only gather styles once per class\n          if (this.hasOwnProperty(JSCompiler_renameProperty('_styles', this))) {\n            return;\n          } // Take care not to call `this.getStyles()` multiple times since this\n          // generates new CSSResults each time.\n          // TODO(sorvell): Since we do not cache CSSResults by input, any\n          // shared styles will generate new stylesheet objects, which is wasteful.\n          // This should be addressed when a browser ships constructable\n          // stylesheets.\n\n\n          var userStyles = this.getStyles();\n\n          if (Array.isArray(userStyles)) {\n            // De-duplicate styles preserving the _last_ instance in the set.\n            // This is a performance optimization to avoid duplicated styles that can\n            // occur especially when composing via subclassing.\n            // The last item is kept to try to preserve the cascade order with the\n            // assumption that it's most important that last added styles override\n            // previous styles.\n            var addStyles = function addStyles(styles, set) {\n              return styles.reduceRight(function (set, s) {\n                return (// Note: On IE set.add() does not return the set\n                  Array.isArray(s) ? addStyles(s, set) : (set.add(s), set)\n                );\n              }, set);\n            }; // Array.from does not work on Set in IE, otherwise return\n            // Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()\n\n\n            var set = addStyles(userStyles, new Set());\n            var styles = [];\n            set.forEach(function (v) {\n              return styles.unshift(v);\n            });\n            this._styles = styles;\n          } else {\n            this._styles = userStyles === undefined ? [] : [userStyles];\n          } // Ensure that there are no invalid CSSStyleSheet instances here. They are\n          // invalid in two conditions.\n          // (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but\n          //     this is impossible to check except via .replaceSync or use\n          // (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is\n          //     false)\n\n\n          this._styles = this._styles.map(function (s) {\n            if (s instanceof CSSStyleSheet && !supportsAdoptingStyleSheets) {\n              // Flatten the cssText from the passed constructible stylesheet (or\n              // undetectable non-constructible stylesheet). The user might have\n              // expected to update their stylesheets over time, but the alternative\n              // is a crash.\n              var cssText = Array.prototype.slice.call(s.cssRules).reduce(function (css, rule) {\n                return css + rule.cssText;\n              }, '');\n              return unsafeCSS(cssText);\n            }\n\n            return s;\n          });\n        }\n      }]);\n      return LitElement;\n    }(UpdatingElement);\n    /**\n     * Ensure this class is marked as `finalized` as an optimization ensuring\n     * it will not needlessly try to `finalize`.\n     *\n     * Note this property name is a string to prevent breaking Closure JS Compiler\n     * optimizations. See updating-element.ts for more information.\n     */\n\n\n    lit_element_LitElement['finalized'] = true;\n    /**\n     * Reference to the underlying library method used to render the element's\n     * DOM. By default, points to the `render` method from lit-html's shady-render\n     * module.\n     *\n     * **Most users will never need to touch this property.**\n     *\n     * This  property should not be confused with the `render` instance method,\n     * which should be overridden to define a template for the element.\n     *\n     * Advanced users creating a new base class based on LitElement can override\n     * this property to point to a custom render method with a signature that\n     * matches [shady-render's `render`\n     * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).\n     *\n     * @nocollapse\n     */\n\n    lit_element_LitElement.render = shady_render_render;\n    /***/\n  },\n\n  /***/\n  \"GMCd\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return TemplateResult;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return SVGTemplateResult;\n    });\n    /* harmony import */\n\n\n    var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"tFPJ\");\n    /* harmony import */\n\n\n    var _template_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"4yuk\");\n\n    function _typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function _typeof(obj) {\n          return typeof obj;\n        };\n      } else {\n        _typeof = function _typeof(obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return _typeof(obj);\n    }\n\n    function _get(target, property, receiver) {\n      if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        _get = Reflect.get;\n      } else {\n        _get = function _get(target, property, receiver) {\n          var base = _superPropBase(target, property);\n\n          if (!base) return;\n          var desc = Object.getOwnPropertyDescriptor(base, property);\n\n          if (desc.get) {\n            return desc.get.call(receiver);\n          }\n\n          return desc.value;\n        };\n      }\n\n      return _get(target, property, receiver || target);\n    }\n\n    function _superPropBase(object, property) {\n      while (!Object.prototype.hasOwnProperty.call(object, property)) {\n        object = _getPrototypeOf(object);\n        if (object === null) break;\n      }\n\n      return object;\n    }\n\n    function _inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) _setPrototypeOf(subClass, superClass);\n    }\n\n    function _setPrototypeOf(o, p) {\n      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    function _createSuper(Derived) {\n      var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n      return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n\n        if (hasNativeReflectConstruct) {\n          var NewTarget = _getPrototypeOf(this).constructor;\n\n          result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n          result = Super.apply(this, arguments);\n        }\n\n        return _possibleConstructorReturn(this, result);\n      };\n    }\n\n    function _possibleConstructorReturn(self, call) {\n      if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n      }\n\n      return _assertThisInitialized(self);\n    }\n\n    function _assertThisInitialized(self) {\n      if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return self;\n    }\n\n    function _isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n      if (Reflect.construct.sham) return false;\n      if (typeof Proxy === \"function\") return true;\n\n      try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    function _getPrototypeOf(o) {\n      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n      };\n      return _getPrototypeOf(o);\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * @module lit-html\n     */\n\n    /**\n     * Our TrustedTypePolicy for HTML which is declared using the html template\n     * tag function.\n     *\n     * That HTML is a developer-authored constant, and is parsed with innerHTML\n     * before any untrusted expressions have been mixed in. Therefor it is\n     * considered safe by construction.\n     */\n\n\n    var policy = window.trustedTypes && trustedTypes.createPolicy('lit-html', {\n      createHTML: function createHTML(s) {\n        return s;\n      }\n    });\n    var commentMarker = \" \".concat(_template_js__WEBPACK_IMPORTED_MODULE_1__[\n    /* marker */\n    \"f\"], \" \");\n    /**\n     * The return type of `html`, which holds a Template and the values from\n     * interpolated expressions.\n     */\n\n    var TemplateResult = /*#__PURE__*/function () {\n      function TemplateResult(strings, values, type, processor) {\n        _classCallCheck(this, TemplateResult);\n\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n      }\n      /**\n       * Returns a string of HTML used to create a `<template>` element.\n       */\n\n\n      _createClass(TemplateResult, [{\n        key: \"getHTML\",\n        value: function getHTML() {\n          var l = this.strings.length - 1;\n          var html = '';\n          var isCommentBinding = false;\n\n          for (var i = 0; i < l; i++) {\n            var s = this.strings[i]; // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment position.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n\n            var commentOpen = s.lastIndexOf('<!--'); // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) && s.indexOf('-->', commentOpen + 1) === -1; // Check to see if we have an attribute-like sequence preceding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n\n            var attributeMatch = _template_js__WEBPACK_IMPORTED_MODULE_1__[\n            /* lastAttributeNameRegex */\n            \"e\"].exec(s);\n\n            if (attributeMatch === null) {\n              // We're only in this branch if we don't have a attribute-like\n              // preceding sequence. For comments, this guards against unusual\n              // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n              // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n              // below.\n              html += s + (isCommentBinding ? commentMarker : _template_js__WEBPACK_IMPORTED_MODULE_1__[\n              /* nodeMarker */\n              \"g\"]);\n            } else {\n              // For attributes we use just a marker sentinel, and also append a\n              // $lit$ suffix to the name to opt-out of attribute-specific parsing\n              // that IE and Edge do for style and certain SVG attributes.\n              html += s.substr(0, attributeMatch.index) + attributeMatch[1] + attributeMatch[2] + _template_js__WEBPACK_IMPORTED_MODULE_1__[\n              /* boundAttributeSuffix */\n              \"b\"] + attributeMatch[3] + _template_js__WEBPACK_IMPORTED_MODULE_1__[\n              /* marker */\n              \"f\"];\n            }\n          }\n\n          html += this.strings[l];\n          return html;\n        }\n      }, {\n        key: \"getTemplateElement\",\n        value: function getTemplateElement() {\n          var template = document.createElement('template');\n          var value = this.getHTML();\n\n          if (policy !== undefined) {\n            // this is secure because `this.strings` is a TemplateStringsArray.\n            // TODO: validate this when\n            // https://github.com/tc39/proposal-array-is-template-object is\n            // implemented.\n            value = policy.createHTML(value);\n          }\n\n          template.innerHTML = value;\n          return template;\n        }\n      }]);\n\n      return TemplateResult;\n    }();\n    /**\n     * A TemplateResult for SVG fragments.\n     *\n     * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n     * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n     * clones only container the original fragment.\n     */\n\n\n    var SVGTemplateResult = /*#__PURE__*/function (_TemplateResult) {\n      _inherits(SVGTemplateResult, _TemplateResult);\n\n      var _super = _createSuper(SVGTemplateResult);\n\n      function SVGTemplateResult() {\n        _classCallCheck(this, SVGTemplateResult);\n\n        return _super.apply(this, arguments);\n      }\n\n      _createClass(SVGTemplateResult, [{\n        key: \"getHTML\",\n        value: function getHTML() {\n          return \"<svg>\".concat(_get(_getPrototypeOf(SVGTemplateResult.prototype), \"getHTML\", this).call(this), \"</svg>\");\n        }\n      }, {\n        key: \"getTemplateElement\",\n        value: function getTemplateElement() {\n          var template = _get(_getPrototypeOf(SVGTemplateResult.prototype), \"getTemplateElement\", this).call(this);\n\n          var content = template.content;\n          var svgElement = content.firstChild;\n          content.removeChild(svgElement);\n          Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\n          /* reparentNodes */\n          \"c\"])(content, svgElement.firstChild);\n          return template;\n        }\n      }]);\n\n      return SVGTemplateResult;\n    }(TemplateResult);\n    /***/\n\n  },\n\n  /***/\n  \"KXV8\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return browserSupportsCssVariables;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return browserSupportsWidthMaxContent;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return isMobileDevice;\n    });\n\n    var browserSupportsCssVariables = function browserSupportsCssVariables() {\n      return typeof CSS !== 'undefined' ? CSS.supports('color', 'var(--fake-var)') : false;\n    };\n\n    var browserSupportsWidthMaxContent = function browserSupportsWidthMaxContent() {\n      return typeof CSS !== 'undefined' ? CSS.supports('width', 'max-content') || CSS.supports('width', '-moz-max-content') || CSS.supports('width', '-webkit-max-content') : false;\n    };\n\n    var isMobileDevice = function isMobileDevice() {\n      return screen.width < 700 ? true : false;\n    };\n    /***/\n\n  },\n\n  /***/\n  \"ONJ/\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony import */\n\n    var lit_element__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"CQbg\");\n\n    var _templateObject;\n\n    function _taggedTemplateLiteral(strings, raw) {\n      if (!raw) {\n        raw = strings.slice(0);\n      }\n\n      return Object.freeze(Object.defineProperties(strings, {\n        raw: {\n          value: Object.freeze(raw)\n        }\n      }));\n    }\n    /* harmony default export */\n\n\n    __webpack_exports__[\"a\"] = Object(lit_element__WEBPACK_IMPORTED_MODULE_0__[\n    /* css */\n    \"b\"])(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  /* Universal Box Model Fix */\\n  *,\\n  *:before,\\n  *:after {\\n    box-sizing: border-box;\\n  }\\n\\n  h1,\\n  h2,\\n  h3,\\n  p {\\n    margin: 0;\\n  }\\n\\n  /* Common component styles */\\n  :host {\\n    display: block;\\n  }\\n\"])));\n    /***/\n  },\n\n  /***/\n  \"PqmH\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return templateFactory;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return templateCaches;\n    });\n    /* harmony import */\n\n\n    var _template_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"4yuk\");\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * The default TemplateFactory which caches Templates keyed on\n     * result.type and result.strings.\n     */\n\n\n    function templateFactory(result) {\n      var templateCache = templateCaches.get(result.type);\n\n      if (templateCache === undefined) {\n        templateCache = {\n          stringsArray: new WeakMap(),\n          keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n      }\n\n      var template = templateCache.stringsArray.get(result.strings);\n\n      if (template !== undefined) {\n        return template;\n      } // If the TemplateStringsArray is new, generate a key from the strings\n      // This key is shared between all templates with identical content\n\n\n      var key = result.strings.join(_template_js__WEBPACK_IMPORTED_MODULE_0__[\n      /* marker */\n      \"f\"]); // Check if we already have a Template for this key\n\n      template = templateCache.keyString.get(key);\n\n      if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new _template_js__WEBPACK_IMPORTED_MODULE_0__[\n        /* Template */\n        \"a\"](result, result.getTemplateElement()); // Cache the Template for this key\n\n        templateCache.keyString.set(key, template);\n      } // Cache all future queries for this TemplateStringsArray\n\n\n      templateCache.stringsArray.set(result.strings, template);\n      return template;\n    }\n\n    var templateCaches = new Map();\n    /***/\n  },\n\n  /***/\n  \"XI78\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"h\", function () {\n      return isPrimitive;\n    });\n    /* unused harmony export isIterable */\n\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return AttributeCommitter;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return AttributePart;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"e\", function () {\n      return NodePart;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return BooleanAttributePart;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"f\", function () {\n      return PropertyCommitter;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"g\", function () {\n      return PropertyPart;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"d\", function () {\n      return EventPart;\n    });\n    /* harmony import */\n\n\n    var _directive_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"eByC\");\n    /* harmony import */\n\n\n    var _dom_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"tFPJ\");\n    /* harmony import */\n\n\n    var _part_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"1VLE\");\n    /* harmony import */\n\n\n    var _template_instance_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(\"6unr\");\n    /* harmony import */\n\n\n    var _template_result_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(\"GMCd\");\n    /* harmony import */\n\n\n    var _template_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(\"4yuk\");\n\n    function _get(target, property, receiver) {\n      if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        _get = Reflect.get;\n      } else {\n        _get = function _get(target, property, receiver) {\n          var base = _superPropBase(target, property);\n\n          if (!base) return;\n          var desc = Object.getOwnPropertyDescriptor(base, property);\n\n          if (desc.get) {\n            return desc.get.call(receiver);\n          }\n\n          return desc.value;\n        };\n      }\n\n      return _get(target, property, receiver || target);\n    }\n\n    function _superPropBase(object, property) {\n      while (!Object.prototype.hasOwnProperty.call(object, property)) {\n        object = _getPrototypeOf(object);\n        if (object === null) break;\n      }\n\n      return object;\n    }\n\n    function _inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) _setPrototypeOf(subClass, superClass);\n    }\n\n    function _setPrototypeOf(o, p) {\n      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    function _createSuper(Derived) {\n      var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n      return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n\n        if (hasNativeReflectConstruct) {\n          var NewTarget = _getPrototypeOf(this).constructor;\n\n          result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n          result = Super.apply(this, arguments);\n        }\n\n        return _possibleConstructorReturn(this, result);\n      };\n    }\n\n    function _possibleConstructorReturn(self, call) {\n      if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n      }\n\n      return _assertThisInitialized(self);\n    }\n\n    function _assertThisInitialized(self) {\n      if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return self;\n    }\n\n    function _isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n      if (Reflect.construct.sham) return false;\n      if (typeof Proxy === \"function\") return true;\n\n      try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    function _getPrototypeOf(o) {\n      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n      };\n      return _getPrototypeOf(o);\n    }\n\n    function _createForOfIteratorHelper(o, allowArrayLike) {\n      var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n      if (!it) {\n        if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n          if (it) o = it;\n          var i = 0;\n\n          var F = function F() {};\n\n          return {\n            s: F,\n            n: function n() {\n              if (i >= o.length) return {\n                done: true\n              };\n              return {\n                done: false,\n                value: o[i++]\n              };\n            },\n            e: function e(_e2) {\n              throw _e2;\n            },\n            f: F\n          };\n        }\n\n        throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n      }\n\n      var normalCompletion = true,\n          didErr = false,\n          err;\n      return {\n        s: function s() {\n          it = it.call(o);\n        },\n        n: function n() {\n          var step = it.next();\n          normalCompletion = step.done;\n          return step;\n        },\n        e: function e(_e3) {\n          didErr = true;\n          err = _e3;\n        },\n        f: function f() {\n          try {\n            if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n          } finally {\n            if (didErr) throw err;\n          }\n        }\n      };\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    function _typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function _typeof(obj) {\n          return typeof obj;\n        };\n      } else {\n        _typeof = function _typeof(obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return _typeof(obj);\n    }\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n\n    var isPrimitive = function isPrimitive(value) {\n      return value === null || !(_typeof(value) === 'object' || typeof value === 'function');\n    };\n\n    var isIterable = function isIterable(value) {\n      return Array.isArray(value) || // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      !!(value && value[Symbol.iterator]);\n    };\n    /**\n     * Writes attribute values to the DOM for a group of AttributeParts bound to a\n     * single attribute. The value is only set once even if there are multiple parts\n     * for an attribute.\n     */\n\n\n    var AttributeCommitter = /*#__PURE__*/function () {\n      function AttributeCommitter(element, name, strings) {\n        _classCallCheck(this, AttributeCommitter);\n\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n\n        for (var i = 0; i < strings.length - 1; i++) {\n          this.parts[i] = this._createPart();\n        }\n      }\n      /**\n       * Creates a single part. Override this to create a differnt type of part.\n       */\n\n\n      _createClass(AttributeCommitter, [{\n        key: \"_createPart\",\n        value: function _createPart() {\n          return new AttributePart(this);\n        }\n      }, {\n        key: \"_getValue\",\n        value: function _getValue() {\n          var strings = this.strings;\n          var l = strings.length - 1;\n          var parts = this.parts; // If we're assigning an attribute via syntax like:\n          //    attr=\"${foo}\"  or  attr=${foo}\n          // but not\n          //    attr=\"${foo} ${bar}\" or attr=\"${foo} baz\"\n          // then we don't want to coerce the attribute value into one long\n          // string. Instead we want to just return the value itself directly,\n          // so that sanitizeDOMValue can get the actual value rather than\n          // String(value)\n          // The exception is if v is an array, in which case we do want to smash\n          // it together into a string without calling String() on the array.\n          //\n          // This also allows trusted values (when using TrustedTypes) being\n          // assigned to DOM sinks without being stringified in the process.\n\n          if (l === 1 && strings[0] === '' && strings[1] === '') {\n            var v = parts[0].value;\n\n            if (_typeof(v) === 'symbol') {\n              return String(v);\n            }\n\n            if (typeof v === 'string' || !isIterable(v)) {\n              return v;\n            }\n          }\n\n          var text = '';\n\n          for (var i = 0; i < l; i++) {\n            text += strings[i];\n            var part = parts[i];\n\n            if (part !== undefined) {\n              var _v = part.value;\n\n              if (isPrimitive(_v) || !isIterable(_v)) {\n                text += typeof _v === 'string' ? _v : String(_v);\n              } else {\n                var _iterator = _createForOfIteratorHelper(_v),\n                    _step;\n\n                try {\n                  for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                    var t = _step.value;\n                    text += typeof t === 'string' ? t : String(t);\n                  }\n                } catch (err) {\n                  _iterator.e(err);\n                } finally {\n                  _iterator.f();\n                }\n              }\n            }\n          }\n\n          text += strings[l];\n          return text;\n        }\n      }, {\n        key: \"commit\",\n        value: function commit() {\n          if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n          }\n        }\n      }]);\n\n      return AttributeCommitter;\n    }();\n    /**\n     * A Part that controls all or part of an attribute value.\n     */\n\n\n    var AttributePart = /*#__PURE__*/function () {\n      function AttributePart(committer) {\n        _classCallCheck(this, AttributePart);\n\n        this.value = undefined;\n        this.committer = committer;\n      }\n\n      _createClass(AttributePart, [{\n        key: \"setValue\",\n        value: function setValue(value) {\n          if (value !== _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* noChange */\n          \"a\"] && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value; // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n\n            if (!Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\n            /* isDirective */\n            \"b\"])(value)) {\n              this.committer.dirty = true;\n            }\n          }\n        }\n      }, {\n        key: \"commit\",\n        value: function commit() {\n          while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\n          /* isDirective */\n          \"b\"])(this.value)) {\n            var directive = this.value;\n            this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__[\n            /* noChange */\n            \"a\"];\n            directive(this);\n          }\n\n          if (this.value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* noChange */\n          \"a\"]) {\n            return;\n          }\n\n          this.committer.commit();\n        }\n      }]);\n\n      return AttributePart;\n    }();\n    /**\n     * A Part that controls a location within a Node tree. Like a Range, NodePart\n     * has start and end locations and can set and update the Nodes between those\n     * locations.\n     *\n     * NodeParts support several value types: primitives, Nodes, TemplateResults,\n     * as well as arrays and iterables of those types.\n     */\n\n\n    var NodePart = /*#__PURE__*/function () {\n      function NodePart(options) {\n        _classCallCheck(this, NodePart);\n\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n      }\n      /**\n       * Appends this part into a container.\n       *\n       * This part must be empty, as its contents are not automatically moved.\n       */\n\n\n      _createClass(NodePart, [{\n        key: \"appendInto\",\n        value: function appendInto(container) {\n          this.startNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\n          /* createMarker */\n          \"c\"])());\n          this.endNode = container.appendChild(Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\n          /* createMarker */\n          \"c\"])());\n        }\n        /**\n         * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n         * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n         * such as those that appear in a literal section of a template.\n         *\n         * This part must be empty, as its contents are not automatically moved.\n         */\n\n      }, {\n        key: \"insertAfterNode\",\n        value: function insertAfterNode(ref) {\n          this.startNode = ref;\n          this.endNode = ref.nextSibling;\n        }\n        /**\n         * Appends this part into a parent part.\n         *\n         * This part must be empty, as its contents are not automatically moved.\n         */\n\n      }, {\n        key: \"appendIntoPart\",\n        value: function appendIntoPart(part) {\n          part.__insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\n          /* createMarker */\n          \"c\"])());\n\n          part.__insert(this.endNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\n          /* createMarker */\n          \"c\"])());\n        }\n        /**\n         * Inserts this part after the `ref` part.\n         *\n         * This part must be empty, as its contents are not automatically moved.\n         */\n\n      }, {\n        key: \"insertAfterPart\",\n        value: function insertAfterPart(ref) {\n          ref.__insert(this.startNode = Object(_template_js__WEBPACK_IMPORTED_MODULE_5__[\n          /* createMarker */\n          \"c\"])());\n\n          this.endNode = ref.endNode;\n          ref.endNode = this.startNode;\n        }\n      }, {\n        key: \"setValue\",\n        value: function setValue(value) {\n          this.__pendingValue = value;\n        }\n      }, {\n        key: \"commit\",\n        value: function commit() {\n          if (this.startNode.parentNode === null) {\n            return;\n          }\n\n          while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\n          /* isDirective */\n          \"b\"])(this.__pendingValue)) {\n            var directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\n            /* noChange */\n            \"a\"];\n            directive(this);\n          }\n\n          var value = this.__pendingValue;\n\n          if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* noChange */\n          \"a\"]) {\n            return;\n          }\n\n          if (isPrimitive(value)) {\n            if (value !== this.value) {\n              this.__commitText(value);\n            }\n          } else if (value instanceof _template_result_js__WEBPACK_IMPORTED_MODULE_4__[\n          /* TemplateResult */\n          \"b\"]) {\n            this.__commitTemplateResult(value);\n          } else if (value instanceof Node) {\n            this.__commitNode(value);\n          } else if (isIterable(value)) {\n            this.__commitIterable(value);\n          } else if (value === _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* nothing */\n          \"b\"]) {\n            this.value = _part_js__WEBPACK_IMPORTED_MODULE_2__[\n            /* nothing */\n            \"b\"];\n            this.clear();\n          } else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n          }\n        }\n      }, {\n        key: \"__insert\",\n        value: function __insert(node) {\n          this.endNode.parentNode.insertBefore(node, this.endNode);\n        }\n      }, {\n        key: \"__commitNode\",\n        value: function __commitNode(value) {\n          if (this.value === value) {\n            return;\n          }\n\n          this.clear();\n\n          this.__insert(value);\n\n          this.value = value;\n        }\n      }, {\n        key: \"__commitText\",\n        value: function __commitText(value) {\n          var node = this.startNode.nextSibling;\n          value = value == null ? '' : value; // If `value` isn't already a string, we explicitly convert it here in case\n          // it can't be implicitly converted - i.e. it's a symbol.\n\n          var valueAsString = typeof value === 'string' ? value : String(value);\n\n          if (node === this.endNode.previousSibling && node.nodeType === 3\n          /* Node.TEXT_NODE */\n          ) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n          } else {\n            this.__commitNode(document.createTextNode(valueAsString));\n          }\n\n          this.value = value;\n        }\n      }, {\n        key: \"__commitTemplateResult\",\n        value: function __commitTemplateResult(value) {\n          var template = this.options.templateFactory(value);\n\n          if (this.value instanceof _template_instance_js__WEBPACK_IMPORTED_MODULE_3__[\n          /* TemplateInstance */\n          \"a\"] && this.value.template === template) {\n            this.value.update(value.values);\n          } else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            var instance = new _template_instance_js__WEBPACK_IMPORTED_MODULE_3__[\n            /* TemplateInstance */\n            \"a\"](template, value.processor, this.options);\n\n            var fragment = instance._clone();\n\n            instance.update(value.values);\n\n            this.__commitNode(fragment);\n\n            this.value = instance;\n          }\n        }\n      }, {\n        key: \"__commitIterable\",\n        value: function __commitIterable(value) {\n          // For an Iterable, we create a new InstancePart per item, then set its\n          // value to the item. This is a little bit of overhead for every item in\n          // an Iterable, but it lets us recurse easily and efficiently update Arrays\n          // of TemplateResults that will be commonly returned from expressions like:\n          // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n          // If _value is an array, then the previous render was of an\n          // iterable and _value will contain the NodeParts from the previous\n          // render. If _value is not an array, clear this part and make a new\n          // array for NodeParts.\n          if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n          } // Lets us keep track of how many items we stamped so we can clear leftover\n          // items from a previous render\n\n\n          var itemParts = this.value;\n          var partIndex = 0;\n          var itemPart;\n\n          var _iterator2 = _createForOfIteratorHelper(value),\n              _step2;\n\n          try {\n            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n              var item = _step2.value; // Try to reuse an existing part\n\n              itemPart = itemParts[partIndex]; // If no existing part, create a new one\n\n              if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n\n                if (partIndex === 0) {\n                  itemPart.appendIntoPart(this);\n                } else {\n                  itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n              }\n\n              itemPart.setValue(item);\n              itemPart.commit();\n              partIndex++;\n            }\n          } catch (err) {\n            _iterator2.e(err);\n          } finally {\n            _iterator2.f();\n          }\n\n          if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n          }\n        }\n      }, {\n        key: \"clear\",\n        value: function clear() {\n          var startNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.startNode;\n          Object(_dom_js__WEBPACK_IMPORTED_MODULE_1__[\n          /* removeNodes */\n          \"b\"])(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n        }\n      }]);\n\n      return NodePart;\n    }();\n    /**\n     * Implements a boolean attribute, roughly as defined in the HTML\n     * specification.\n     *\n     * If the value is truthy, then the attribute is present with a value of\n     * ''. If the value is falsey, the attribute is removed.\n     */\n\n\n    var BooleanAttributePart = /*#__PURE__*/function () {\n      function BooleanAttributePart(element, name, strings) {\n        _classCallCheck(this, BooleanAttributePart);\n\n        this.value = undefined;\n        this.__pendingValue = undefined;\n\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n          throw new Error('Boolean attributes can only contain a single expression');\n        }\n\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n      }\n\n      _createClass(BooleanAttributePart, [{\n        key: \"setValue\",\n        value: function setValue(value) {\n          this.__pendingValue = value;\n        }\n      }, {\n        key: \"commit\",\n        value: function commit() {\n          while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\n          /* isDirective */\n          \"b\"])(this.__pendingValue)) {\n            var directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\n            /* noChange */\n            \"a\"];\n            directive(this);\n          }\n\n          if (this.__pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* noChange */\n          \"a\"]) {\n            return;\n          }\n\n          var value = !!this.__pendingValue;\n\n          if (this.value !== value) {\n            if (value) {\n              this.element.setAttribute(this.name, '');\n            } else {\n              this.element.removeAttribute(this.name);\n            }\n\n            this.value = value;\n          }\n\n          this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* noChange */\n          \"a\"];\n        }\n      }]);\n\n      return BooleanAttributePart;\n    }();\n    /**\n     * Sets attribute values for PropertyParts, so that the value is only set once\n     * even if there are multiple parts for a property.\n     *\n     * If an expression controls the whole property value, then the value is simply\n     * assigned to the property under control. If there are string literals or\n     * multiple expressions, then the strings are expressions are interpolated into\n     * a string first.\n     */\n\n\n    var PropertyCommitter = /*#__PURE__*/function (_AttributeCommitter) {\n      _inherits(PropertyCommitter, _AttributeCommitter);\n\n      var _super = _createSuper(PropertyCommitter);\n\n      function PropertyCommitter(element, name, strings) {\n        var _this;\n\n        _classCallCheck(this, PropertyCommitter);\n\n        _this = _super.call(this, element, name, strings);\n        _this.single = strings.length === 2 && strings[0] === '' && strings[1] === '';\n        return _this;\n      }\n\n      _createClass(PropertyCommitter, [{\n        key: \"_createPart\",\n        value: function _createPart() {\n          return new PropertyPart(this);\n        }\n      }, {\n        key: \"_getValue\",\n        value: function _getValue() {\n          if (this.single) {\n            return this.parts[0].value;\n          }\n\n          return _get(_getPrototypeOf(PropertyCommitter.prototype), \"_getValue\", this).call(this);\n        }\n      }, {\n        key: \"commit\",\n        value: function commit() {\n          if (this.dirty) {\n            this.dirty = false; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n            this.element[this.name] = this._getValue();\n          }\n        }\n      }]);\n\n      return PropertyCommitter;\n    }(AttributeCommitter);\n\n    var PropertyPart = /*#__PURE__*/function (_AttributePart) {\n      _inherits(PropertyPart, _AttributePart);\n\n      var _super2 = _createSuper(PropertyPart);\n\n      function PropertyPart() {\n        _classCallCheck(this, PropertyPart);\n\n        return _super2.apply(this, arguments);\n      }\n\n      return PropertyPart;\n    }(AttributePart); // Detect event listener options support. If the `capture` property is read\n    // from the options object, then options are supported. If not, then the third\n    // argument to add/removeEventListener is interpreted as the boolean capture\n    // value so we should only pass the `capture` property.\n\n\n    var eventOptionsSupported = false; // Wrap into an IIFE because MS Edge <= v41 does not support having try/catch\n    // blocks right into the body of a module\n\n    (function () {\n      try {\n        var options = {\n          get capture() {\n            eventOptionsSupported = true;\n            return false;\n          }\n\n        }; // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        window.addEventListener('test', options, options); // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n        window.removeEventListener('test', options, options);\n      } catch (_e) {// event options not supported\n      }\n    })();\n\n    var EventPart = /*#__PURE__*/function () {\n      function EventPart(element, eventName, eventContext) {\n        var _this2 = this;\n\n        _classCallCheck(this, EventPart);\n\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n\n        this.__boundHandleEvent = function (e) {\n          return _this2.handleEvent(e);\n        };\n      }\n\n      _createClass(EventPart, [{\n        key: \"setValue\",\n        value: function setValue(value) {\n          this.__pendingValue = value;\n        }\n      }, {\n        key: \"commit\",\n        value: function commit() {\n          while (Object(_directive_js__WEBPACK_IMPORTED_MODULE_0__[\n          /* isDirective */\n          \"b\"])(this.__pendingValue)) {\n            var directive = this.__pendingValue;\n            this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\n            /* noChange */\n            \"a\"];\n            directive(this);\n          }\n\n          if (this.__pendingValue === _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* noChange */\n          \"a\"]) {\n            return;\n          }\n\n          var newListener = this.__pendingValue;\n          var oldListener = this.value;\n          var shouldRemoveListener = newListener == null || oldListener != null && (newListener.capture !== oldListener.capture || newListener.once !== oldListener.once || newListener.passive !== oldListener.passive);\n          var shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n\n          if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n          }\n\n          if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n          }\n\n          this.value = newListener;\n          this.__pendingValue = _part_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* noChange */\n          \"a\"];\n        }\n      }, {\n        key: \"handleEvent\",\n        value: function handleEvent(event) {\n          if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n          } else {\n            this.value.handleEvent(event);\n          }\n        }\n      }]);\n\n      return EventPart;\n    }(); // We copy options because of the inconsistent behavior of browsers when reading\n    // the third argument of add/removeEventListener. IE11 doesn't support options\n    // at all. Chrome 41 only reads `capture` if the argument is an object.\n\n\n    var getOptions = function getOptions(o) {\n      return o && (eventOptionsSupported ? {\n        capture: o.capture,\n        passive: o.passive,\n        once: o.once\n      } : o.capture);\n    };\n    /***/\n\n  },\n\n  /***/\n  \"ZEzQ\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return createSlottedStyles;\n    });\n    /* harmony import */\n\n\n    var _utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"7Qib\");\n\n    var createSlottedStyles = function createSlottedStyles(component, slottedStyles) {\n      component.$slotStyles = document.createElement('style');\n      var styles = Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\n      /* browserSupportsCssVariables */\n      \"b\"])() ? slottedStyles : Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\n      /* replaceCssVars */\n      \"x\"])({\n        context: component,\n        styles: slottedStyles\n      });\n      component.$slotStyles.innerHTML = styles;\n      return Object(_utils__WEBPACK_IMPORTED_MODULE_0__[\n      /* isIE */\n      \"q\"])() ? component.parentNode.appendChild(component.$slotStyles) : component.appendChild(component.$slotStyles);\n    };\n    /***/\n\n  },\n\n  /***/\n  \"eByC\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return directive;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return isDirective;\n    });\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n\n    var directives = new WeakMap();\n    /**\n     * Brands a function as a directive factory function so that lit-html will call\n     * the function during template rendering, rather than passing as a value.\n     *\n     * A _directive_ is a function that takes a Part as an argument. It has the\n     * signature: `(part: Part) => void`.\n     *\n     * A directive _factory_ is a function that takes arguments for data and\n     * configuration and returns a directive. Users of directive usually refer to\n     * the directive factory as the directive. For example, \"The repeat directive\".\n     *\n     * Usually a template author will invoke a directive factory in their template\n     * with relevant arguments, which will then return a directive function.\n     *\n     * Here's an example of using the `repeat()` directive factory that takes an\n     * array and a function to render an item:\n     *\n     * ```js\n     * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n     * ```\n     *\n     * When `repeat` is invoked, it returns a directive function that closes over\n     * `items` and the template function. When the outer template is rendered, the\n     * return directive function is called with the Part for the expression.\n     * `repeat` then performs it's custom logic to render multiple items.\n     *\n     * @param f The directive factory function. Must be a function that returns a\n     * function of the signature `(part: Part) => void`. The returned function will\n     * be called with the part object.\n     *\n     * @example\n     *\n     * import {directive, html} from 'lit-html';\n     *\n     * const immutable = directive((v) => (part) => {\n     *   if (part.value !== v) {\n     *     part.setValue(v)\n     *   }\n     * });\n     */\n\n    var directive = function directive(f) {\n      return function () {\n        var d = f.apply(void 0, arguments);\n        directives.set(d, true);\n        return d;\n      };\n    };\n\n    var isDirective = function isDirective(o) {\n      return typeof o === 'function' && directives.has(o);\n    };\n    /***/\n\n  },\n\n  /***/\n  \"pAs2\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return listenForEvents;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return gaEvent;\n    });\n\n    function getEventCategory(path) {\n      var nodes = [];\n      var innerText = '';\n      var isVDSElement = false;\n      path.forEach(function (el) {\n        var _el$nodeName;\n\n        if (el.nodeName && el.nodeName.slice(0, 2) === 'V-' || el.nodeName === 'A' || el.nodeName === 'NAV') {\n          nodes.push(el.cloneNode(true));\n\n          if (!innerText && el.innerText) {\n            innerText = el.innerText;\n          }\n        }\n\n        if (!isVDSElement) isVDSElement = (el === null || el === void 0 ? void 0 : (_el$nodeName = el.nodeName) === null || _el$nodeName === void 0 ? void 0 : _el$nodeName.slice(0, 2)) === 'V-';\n      }); //workaround slotted text for v-icon, v-footer-nav-item\n\n      if (innerText && !nodes[0].innerText) {\n        nodes[0].text = innerText;\n      }\n\n      if (isVDSElement) return nodes;else return [];\n    }\n\n    function getEventLabel(nodes) {\n      var eventLabel = '';\n      var gaAction = '';\n      var gaCategory = '';\n      var gaLabel = '';\n      var node = nodes[0]; //add any additional properties to include here\n\n      var props = ['gaAction', 'gaCategory', 'gaLabel', 'href', 'link', 'id', 'linkText', 'tabtext', 'innerText', 'text', 'name', 'dataset', 'altLabel', 'value', 'tileTitle', 'tileHref', 'currentTopic', 'data-index', 'aria-label'];\n      props.forEach(function (prop) {\n        if (node[prop]) {\n          if (['linkText', 'innerText', 'text', 'tileTitle', 'tabtext'].includes(prop) && typeof node[prop] === 'string') {\n            if (node[prop].trim() === '' && nodes[1] && nodes[1][prop] && nodes[1][prop].trim() !== '') {\n              var txt = nodes[1][prop].trim();\n              eventLabel += \"<\".concat(prop, \": \").concat(txt.substring(0, 20), \">\");\n            } else if (node[prop].trim() !== '') {\n              eventLabel += \"<\".concat(prop, \": \").concat(node[prop].trim().substring(0, 20), \">\");\n            }\n          } else if (['href', 'tileHref'].includes(prop) && node[prop].indexOf('?') !== -1) {\n            eventLabel += \"<\".concat(prop, \": \").concat(getURL(node[prop]), \">\");\n          } else if ('dataset' === prop) {\n            if (node['index'] !== undefined) {\n              eventLabel += \"<data-index: \".concat(node['index'], \">\");\n            } else if (node['dataset'].label !== undefined) {\n              eventLabel += \"<data-label: \".concat(node['dataset'].label, \">\");\n            }\n          } else if (node[prop] === 'pdf') {\n            eventLabel += \"<\".concat(prop, \": \").concat(node.parentNode.innerText, \">\");\n          } else if (['value'].includes(prop) && (node.nodeName === 'V-INPUT-FIELD' || node.nodeName === 'V-TEXTAREA')) {\n            eventLabel += \"<\".concat(prop, \": ****>\");\n          } else {\n            // New params for custom GA tagging\n            if (prop === 'gaAction') {\n              gaAction = \"\".concat(node.getAttribute(prop));\n            } else if (prop === 'gaCategory') {\n              gaCategory = \"\".concat(node.getAttribute(prop));\n            } else if (prop === 'gaLabel') {\n              gaLabel = \"\".concat(node.getAttribute(prop));\n            }\n\n            eventLabel += \"<\".concat(prop, \": \").concat(node[prop], \">\");\n          }\n        } else if (node.getAttribute(prop)) {\n          eventLabel += \"<\".concat(prop, \": \").concat(node.getAttribute(prop), \">\"); // New params for custom GA tagging\n\n          if (prop === 'gaAction') {\n            gaAction = \"\".concat(node.getAttribute(prop));\n          } else if (prop === 'gaCategory') {\n            gaCategory = \"\".concat(node.getAttribute(prop));\n          } else if (prop === 'gaLabel') {\n            gaLabel = \"\".concat(node.getAttribute(prop));\n          }\n        } else if (['id'].includes(prop) && nodes[1] && nodes[1][prop]) {\n          eventLabel += \"<\".concat(prop, \": \").concat(nodes[1][prop], \">\");\n        }\n      });\n\n      if (nodes[1] && nodes[1].linkText || nodes[1] && nodes[1].nodeName === 'V-BUTTON' && nodes[2] && nodes[1].linkText) {\n        if (nodes[1] && nodes[1].linkText) {\n          eventLabel += \"<linkText: \".concat(nodes[1].linkText, \">\");\n        } else if (nodes[2] && nodes[2].linkText) {\n          eventLabel += \"<linkText: \".concat(nodes[2].linkText, \">\");\n        }\n      }\n\n      if (nodes[1] && nodes[1].getAttribute('title') || nodes[1] && nodes[1].nodeName === 'V-BUTTON' && nodes[2] && nodes[2].getAttribute('title')) {\n        if (nodes[1] && nodes[1].getAttribute('title')) {\n          eventLabel += \"<title: \".concat(nodes[1].getAttribute('title').substring(0, 20), \">\");\n        } else if (nodes[2] && nodes[2].getAttribute('title')) {\n          eventLabel += \"<title: \".concat(nodes[2].getAttribute('title').substring(0, 20), \">\");\n        }\n      }\n\n      if (nodes[1] && nodes[1].getAttribute('headingtext') || nodes[1] && nodes[1].nodeName === 'V-BUTTON' && nodes[2] && nodes[2].getAttribute('headingtext')) {\n        if (nodes[1] && nodes[1].getAttribute('headingtext')) {\n          eventLabel += \"<headingtext: \".concat(nodes[1].getAttribute('headingtext').substring(0, 20), \">\");\n        } else if (nodes[2] && nodes[2].getAttribute('headingtext')) {\n          eventLabel += \"<headingtext: \".concat(nodes[2].getAttribute('headingtext').substring(0, 20), \">\");\n        }\n      }\n\n      if (nodes[1] && nodes[1].getAttribute('headertext') || nodes[1] && nodes[1].nodeName === 'V-BUTTON' && nodes[2] && nodes[2].getAttribute('headertext')) {\n        if (nodes[1] && nodes[1].getAttribute('headertext')) {\n          eventLabel += \"<headingtext: \".concat(nodes[1].getAttribute('headertext').substring(0, 20), \">\");\n        } else if (nodes[2] && nodes[2].getAttribute('headertext')) {\n          eventLabel += \"<headingtext: \".concat(nodes[2].getAttribute('headertext').substring(0, 20), \">\");\n        }\n      }\n\n      if (node.nodeName === 'V-BUTTON' && nodes[1] && nodes[1].nodeName === 'V-COLUMN') {\n        var headerText = nodes[1].querySelector('.columnHeaders').innerHTML;\n        eventLabel += \"<columnHeader: \".concat(headerText.substring(0, 20), \">\");\n      }\n\n      if (nodes[1] && nodes[1].currentTopic) {\n        eventLabel += \"<currentTopic: \".concat(nodes[1].currentTopic, \">\");\n      }\n\n      if (nodes[2] && nodes[2].labelText) {\n        eventLabel += \"<labelText: \".concat(nodes[2].labelText, \">\");\n      }\n\n      if (node.nodeName === 'V-WYSIWYG' && nodes[1] && nodes[1].subID) {\n        eventLabel += \"<subId: \".concat(nodes[1].subID, \">\");\n      }\n\n      if (node.nodeName === 'A' && nodes[1] && nodes[1].nodeName === 'V-ICON') {\n        eventLabel += \"<Name: \".concat(nodes[1].name, \">\");\n      }\n\n      return [eventLabel, gaAction, gaCategory, gaLabel];\n    }\n\n    function waitToRedirect(e, link) {\n      e.preventDefault();\n      setTimeout(function () {\n        if (link.target && link.target === '_blank') {\n          window.open(link.href);\n        } else {\n          window.location.href = link.href;\n        }\n      }, 500);\n    }\n\n    function getURL(url) {\n      var hostName = url.substring(0, url.indexOf('?'));\n      var hash = url.substring(url.indexOf('#'), url.length);\n      return hostName + hash;\n    }\n\n    function listenForEvents() {\n      window.addEventListener('click', function (e) {\n        var nodes = getEventCategory(e.composedPath());\n\n        if (nodes.length > 0 && !(nodes.length === 1 && nodes[0].nodeName === 'A')) {\n          var eventDetail = nodes.map(function (el) {\n            return el.nodeName + ' ';\n          }).join('');\n\n          if (nodes[0]['href']) {\n            eventDetail += nodes[0]['href'];\n          }\n\n          var eventLabelWithCustom = getEventLabel(nodes);\n          var eventCategory = '';\n          var eventLabel = eventLabelWithCustom[0];\n          var gaAction = eventLabelWithCustom[1];\n          var gaCategory = eventLabelWithCustom[2];\n          var gaLabel = eventLabelWithCustom[3];\n\n          if (nodes[0].nodeName === 'A') {\n            eventCategory = nodes[1].nodeName;\n          } else if (nodes[0].nodeName === 'V-ICON') {\n            eventCategory = nodes[1].nodeName + ' V-ICON';\n          } else if (nodes[0].nodeName === 'V-WYSIWYG') {\n            eventCategory = nodes[1].nodeName;\n          } else {\n            eventCategory = nodes[0].nodeName;\n          }\n\n          if (nodes[0].nodeName === 'A' && nodes[0].href) {\n            waitToRedirect(e, nodes[0]);\n          }\n\n          if (window.dataLayer && typeof window.dataLayer.push === 'function' && eventDetail !== 'V-DEMO-APP ') {\n            window.dataLayer.push({\n              event: 'GAEvent',\n              eventCategory: eventCategory,\n              eventAction: 'click',\n              eventLabel: eventLabel,\n              eventActionCustom: gaAction,\n              eventCategoryCustom: gaCategory,\n              eventLabelCustom: gaLabel,\n              eventValue: 0,\n              eventDetail: '<place: ' + eventDetail + '>',\n              nonInteraction: false\n            });\n          }\n        }\n      });\n    }\n\n    function gaEvent(e, eventCategory, eventAction, eventLabel, gaAction, gaCategory, gaLabel) {\n      var nodes = [];\n\n      if (e) {\n        e.composedPath().forEach(function (el) {\n          if (el.nodeName && el.nodeName.slice(0, 2) === 'V-' || el.nodeName === 'A') {\n            nodes.push(el.cloneNode(true));\n          }\n        });\n        var eventDetail = nodes.map(function (el) {\n          return el.nodeName + ' ';\n        }).join('');\n\n        if (window.dataLayer && typeof window.dataLayer.push === 'function') {\n          window.dataLayer.push({\n            event: 'GAEvent',\n            eventCategory: eventCategory,\n            eventAction: eventAction,\n            eventLabel: eventLabel,\n            eventActionCustom: gaAction,\n            eventCategoryCustom: gaCategory,\n            eventLabelCustom: gaLabel,\n            eventValue: 0,\n            eventDetail: '<place: ' + eventDetail + '>',\n            nonInteraction: false\n          });\n        }\n      }\n    }\n    /***/\n\n  },\n\n  /***/\n  \"tFPJ\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return isCEPolyfill;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"c\", function () {\n      return reparentNodes;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return removeNodes;\n    });\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n    /**\n     * True if the custom elements polyfill is in use.\n     */\n\n\n    var isCEPolyfill = typeof window !== 'undefined' && window.customElements != null && window.customElements.polyfillWrapFlushCallback !== undefined;\n    /**\n     * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n     * into another container (could be the same container), before `before`. If\n     * `before` is null, it appends the nodes to the container.\n     */\n\n    var reparentNodes = function reparentNodes(container, start) {\n      var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var before = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n      while (start !== end) {\n        var n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n      }\n    };\n    /**\n     * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n     * `container`.\n     */\n\n\n    var removeNodes = function removeNodes(container, start) {\n      var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      while (start !== end) {\n        var n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n      }\n    };\n    /***/\n\n  },\n\n  /***/\n  \"wmha\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\";\n    /* harmony export (binding) */\n\n    __webpack_require__.d(__webpack_exports__, \"a\", function () {\n      return parts;\n    });\n    /* harmony export (binding) */\n\n\n    __webpack_require__.d(__webpack_exports__, \"b\", function () {\n      return render;\n    });\n    /* harmony import */\n\n\n    var _dom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"tFPJ\");\n    /* harmony import */\n\n\n    var _parts_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(\"XI78\");\n    /* harmony import */\n\n\n    var _template_factory_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(\"PqmH\");\n    /**\n     * @license\n     * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n     * This code may only be used under the BSD style license found at\n     * http://polymer.github.io/LICENSE.txt\n     * The complete set of authors may be found at\n     * http://polymer.github.io/AUTHORS.txt\n     * The complete set of contributors may be found at\n     * http://polymer.github.io/CONTRIBUTORS.txt\n     * Code distributed by Google as part of the polymer project is also\n     * subject to an additional IP rights grant found at\n     * http://polymer.github.io/PATENTS.txt\n     */\n\n\n    var parts = new WeakMap();\n    /**\n     * Renders a template result or other value to a container.\n     *\n     * To update a container with new values, reevaluate the template literal and\n     * call `render` with the new result.\n     *\n     * @param result Any value renderable by NodePart - typically a TemplateResult\n     *     created by evaluating a template tag like `html` or `svg`.\n     * @param container A DOM parent to render to. The entire contents are either\n     *     replaced, or efficiently updated if the same result type was previous\n     *     rendered there.\n     * @param options RenderOptions for the entire render tree rendered to this\n     *     container. Render options must *not* change between renders to the same\n     *     container, as those changes will not effect previously rendered DOM.\n     */\n\n    var render = function render(result, container, options) {\n      var part = parts.get(container);\n\n      if (part === undefined) {\n        Object(_dom_js__WEBPACK_IMPORTED_MODULE_0__[\n        /* removeNodes */\n        \"b\"])(container, container.firstChild);\n        parts.set(container, part = new _parts_js__WEBPACK_IMPORTED_MODULE_1__[\n        /* NodePart */\n        \"e\"](Object.assign({\n          templateFactory: _template_factory_js__WEBPACK_IMPORTED_MODULE_2__[\n          /* templateFactory */\n          \"b\"]\n        }, options)));\n        part.appendInto(container);\n      }\n\n      part.setValue(result);\n      part.commit();\n    };\n    /***/\n\n  },\n\n  /***/\n  \"ytus\":\n  /***/\n  function (module, __webpack_exports__, __webpack_require__) {\n    \"use strict\"; // ESM COMPAT FLAG\n\n    __webpack_require__.r(__webpack_exports__); // EXPORTS\n\n\n    __webpack_require__.d(__webpack_exports__, \"vPagination\", function () {\n      return (\n        /* binding */\n        v_pagination_vPagination\n      );\n    }); // EXTERNAL MODULE: ./node_modules/lit-element/lit-element.js + 5 modules\n\n\n    var lit_element = __webpack_require__(\"CQbg\"); // EXTERNAL MODULE: ./src/styles/commonStyles.js\n\n\n    var commonStyles = __webpack_require__(\"ONJ/\"); // EXTERNAL MODULE: ./node_modules/lit-html/directives/class-map.js\n\n\n    var class_map = __webpack_require__(\"4qtV\"); // CONCATENATED MODULE: ./src/components/v-pagination/styles.js\n\n\n    var _templateObject;\n\n    function _taggedTemplateLiteral(strings, raw) {\n      if (!raw) {\n        raw = strings.slice(0);\n      }\n\n      return Object.freeze(Object.defineProperties(strings, {\n        raw: {\n          value: Object.freeze(raw)\n        }\n      }));\n    }\n    /* harmony default export */\n\n\n    var v_pagination_styles = Object(lit_element[\"b\"\n    /* css */\n    ])(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n  .pagination-container {\\n    display: flex;\\n    width: 100%;\\n    justify-content: space-between;\\n    align-items: center;\\n  }\\n  .pagination {\\n    display: inline-block;\\n  }\\n  .pagination a {\\n    color: var(--v-colors__black);\\n    float: left;\\n    display: flex;\\n    margin: 0px 2.5px;\\n    justify-content: center;\\n    align-items: center;\\n    text-decoration: none;\\n    width: 26px;\\n    border-radius: 5px;\\n    height: 26px;\\n    font-size: 18px;\\n  }\\n\\n  .pagination .pages.active {\\n    background-color: var(--v-colors__primary);\\n    color: var(--v-colors__white);\\n  }\\n\\n  .next_icon {\\n    transform: rotate(180deg);\\n    cursor: pointer;\\n  }\\n\\n  .prev_icon {\\n    cursor: pointer;\\n  }\\n\\n  .pages {\\n    cursor: pointer;\\n  }\\n\\n  .prev_icon_disabled {\\n    cursor: default;\\n  }\\n\\n  .next_icon_disabled {\\n    transform: rotate(180deg);\\n    cursor: default;\\n  }\\n\\n  .pagination .pages:hover:not(.active) {\\n    background-color: var(--v-colors__primary-darker-1);\\n    color: var(--v-colors__white);\\n  }\\n  .pagination .pages:active:not(.active) {\\n    background-color: var(--v-colors__active_color);\\n    color: var(--v-colors__white);\\n  }\\n\\n  @media screen and (max-width: 768px) {\\n    .pagination-container {\\n      flex-direction: column;\\n    }\\n    .pagination {\\n      display: block;\\n    }\\n  }\\n\"]))); // EXTERNAL MODULE: ./src/utils/keyboardAccessibility.js\n\n    var keyboardAccessibility = __webpack_require__(\"BAbn\"); // EXTERNAL MODULE: ./src/utils/index.js + 9 modules\n\n\n    var utils = __webpack_require__(\"7Qib\"); // CONCATENATED MODULE: ./src/components/v-pagination/index.js\n\n\n    function _typeof(obj) {\n      \"@babel/helpers - typeof\";\n\n      if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n        _typeof = function _typeof(obj) {\n          return typeof obj;\n        };\n      } else {\n        _typeof = function _typeof(obj) {\n          return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n        };\n      }\n\n      return _typeof(obj);\n    }\n\n    var v_pagination_templateObject, _templateObject2, _templateObject3;\n\n    function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n      try {\n        var info = gen[key](arg);\n        var value = info.value;\n      } catch (error) {\n        reject(error);\n        return;\n      }\n\n      if (info.done) {\n        resolve(value);\n      } else {\n        Promise.resolve(value).then(_next, _throw);\n      }\n    }\n\n    function _asyncToGenerator(fn) {\n      return function () {\n        var self = this,\n            args = arguments;\n        return new Promise(function (resolve, reject) {\n          var gen = fn.apply(self, args);\n\n          function _next(value) {\n            asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n          }\n\n          function _throw(err) {\n            asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n          }\n\n          _next(undefined);\n        });\n      };\n    }\n\n    function v_pagination_taggedTemplateLiteral(strings, raw) {\n      if (!raw) {\n        raw = strings.slice(0);\n      }\n\n      return Object.freeze(Object.defineProperties(strings, {\n        raw: {\n          value: Object.freeze(raw)\n        }\n      }));\n    }\n\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    function _inherits(subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function\");\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) _setPrototypeOf(subClass, superClass);\n    }\n\n    function _setPrototypeOf(o, p) {\n      _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      return _setPrototypeOf(o, p);\n    }\n\n    function _createSuper(Derived) {\n      var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n      return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n\n        if (hasNativeReflectConstruct) {\n          var NewTarget = _getPrototypeOf(this).constructor;\n\n          result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n          result = Super.apply(this, arguments);\n        }\n\n        return _possibleConstructorReturn(this, result);\n      };\n    }\n\n    function _possibleConstructorReturn(self, call) {\n      if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n        return call;\n      }\n\n      return _assertThisInitialized(self);\n    }\n\n    function _assertThisInitialized(self) {\n      if (self === void 0) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return self;\n    }\n\n    function _isNativeReflectConstruct() {\n      if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n      if (Reflect.construct.sham) return false;\n      if (typeof Proxy === \"function\") return true;\n\n      try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n        return true;\n      } catch (e) {\n        return false;\n      }\n    }\n\n    function _decorate(decorators, factory, superClass, mixins) {\n      var api = _getDecoratorsApi();\n\n      if (mixins) {\n        for (var i = 0; i < mixins.length; i++) {\n          api = mixins[i](api);\n        }\n      }\n\n      var r = factory(function initialize(O) {\n        api.initializeInstanceElements(O, decorated.elements);\n      }, superClass);\n      var decorated = api.decorateClass(_coalesceClassElements(r.d.map(_createElementDescriptor)), decorators);\n      api.initializeClassElements(r.F, decorated.elements);\n      return api.runClassFinishers(r.F, decorated.finishers);\n    }\n\n    function _getDecoratorsApi() {\n      _getDecoratorsApi = function _getDecoratorsApi() {\n        return api;\n      };\n\n      var api = {\n        elementsDefinitionOrder: [[\"method\"], [\"field\"]],\n        initializeInstanceElements: function initializeInstanceElements(O, elements) {\n          [\"method\", \"field\"].forEach(function (kind) {\n            elements.forEach(function (element) {\n              if (element.kind === kind && element.placement === \"own\") {\n                this.defineClassElement(O, element);\n              }\n            }, this);\n          }, this);\n        },\n        initializeClassElements: function initializeClassElements(F, elements) {\n          var proto = F.prototype;\n          [\"method\", \"field\"].forEach(function (kind) {\n            elements.forEach(function (element) {\n              var placement = element.placement;\n\n              if (element.kind === kind && (placement === \"static\" || placement === \"prototype\")) {\n                var receiver = placement === \"static\" ? F : proto;\n                this.defineClassElement(receiver, element);\n              }\n            }, this);\n          }, this);\n        },\n        defineClassElement: function defineClassElement(receiver, element) {\n          var descriptor = element.descriptor;\n\n          if (element.kind === \"field\") {\n            var initializer = element.initializer;\n            descriptor = {\n              enumerable: descriptor.enumerable,\n              writable: descriptor.writable,\n              configurable: descriptor.configurable,\n              value: initializer === void 0 ? void 0 : initializer.call(receiver)\n            };\n          }\n\n          Object.defineProperty(receiver, element.key, descriptor);\n        },\n        decorateClass: function decorateClass(elements, decorators) {\n          var newElements = [];\n          var finishers = [];\n          var placements = {\n            \"static\": [],\n            prototype: [],\n            own: []\n          };\n          elements.forEach(function (element) {\n            this.addElementPlacement(element, placements);\n          }, this);\n          elements.forEach(function (element) {\n            if (!_hasDecorators(element)) return newElements.push(element);\n            var elementFinishersExtras = this.decorateElement(element, placements);\n            newElements.push(elementFinishersExtras.element);\n            newElements.push.apply(newElements, elementFinishersExtras.extras);\n            finishers.push.apply(finishers, elementFinishersExtras.finishers);\n          }, this);\n\n          if (!decorators) {\n            return {\n              elements: newElements,\n              finishers: finishers\n            };\n          }\n\n          var result = this.decorateConstructor(newElements, decorators);\n          finishers.push.apply(finishers, result.finishers);\n          result.finishers = finishers;\n          return result;\n        },\n        addElementPlacement: function addElementPlacement(element, placements, silent) {\n          var keys = placements[element.placement];\n\n          if (!silent && keys.indexOf(element.key) !== -1) {\n            throw new TypeError(\"Duplicated element (\" + element.key + \")\");\n          }\n\n          keys.push(element.key);\n        },\n        decorateElement: function decorateElement(element, placements) {\n          var extras = [];\n          var finishers = [];\n\n          for (var decorators = element.decorators, i = decorators.length - 1; i >= 0; i--) {\n            var keys = placements[element.placement];\n            keys.splice(keys.indexOf(element.key), 1);\n            var elementObject = this.fromElementDescriptor(element);\n            var elementFinisherExtras = this.toElementFinisherExtras((0, decorators[i])(elementObject) || elementObject);\n            element = elementFinisherExtras.element;\n            this.addElementPlacement(element, placements);\n\n            if (elementFinisherExtras.finisher) {\n              finishers.push(elementFinisherExtras.finisher);\n            }\n\n            var newExtras = elementFinisherExtras.extras;\n\n            if (newExtras) {\n              for (var j = 0; j < newExtras.length; j++) {\n                this.addElementPlacement(newExtras[j], placements);\n              }\n\n              extras.push.apply(extras, newExtras);\n            }\n          }\n\n          return {\n            element: element,\n            finishers: finishers,\n            extras: extras\n          };\n        },\n        decorateConstructor: function decorateConstructor(elements, decorators) {\n          var finishers = [];\n\n          for (var i = decorators.length - 1; i >= 0; i--) {\n            var obj = this.fromClassDescriptor(elements);\n            var elementsAndFinisher = this.toClassDescriptor((0, decorators[i])(obj) || obj);\n\n            if (elementsAndFinisher.finisher !== undefined) {\n              finishers.push(elementsAndFinisher.finisher);\n            }\n\n            if (elementsAndFinisher.elements !== undefined) {\n              elements = elementsAndFinisher.elements;\n\n              for (var j = 0; j < elements.length - 1; j++) {\n                for (var k = j + 1; k < elements.length; k++) {\n                  if (elements[j].key === elements[k].key && elements[j].placement === elements[k].placement) {\n                    throw new TypeError(\"Duplicated element (\" + elements[j].key + \")\");\n                  }\n                }\n              }\n            }\n          }\n\n          return {\n            elements: elements,\n            finishers: finishers\n          };\n        },\n        fromElementDescriptor: function fromElementDescriptor(element) {\n          var obj = {\n            kind: element.kind,\n            key: element.key,\n            placement: element.placement,\n            descriptor: element.descriptor\n          };\n          var desc = {\n            value: \"Descriptor\",\n            configurable: true\n          };\n          Object.defineProperty(obj, Symbol.toStringTag, desc);\n          if (element.kind === \"field\") obj.initializer = element.initializer;\n          return obj;\n        },\n        toElementDescriptors: function toElementDescriptors(elementObjects) {\n          if (elementObjects === undefined) return;\n          return _toArray(elementObjects).map(function (elementObject) {\n            var element = this.toElementDescriptor(elementObject);\n            this.disallowProperty(elementObject, \"finisher\", \"An element descriptor\");\n            this.disallowProperty(elementObject, \"extras\", \"An element descriptor\");\n            return element;\n          }, this);\n        },\n        toElementDescriptor: function toElementDescriptor(elementObject) {\n          var kind = String(elementObject.kind);\n\n          if (kind !== \"method\" && kind !== \"field\") {\n            throw new TypeError('An element descriptor\\'s .kind property must be either \"method\" or' + ' \"field\", but a decorator created an element descriptor with' + ' .kind \"' + kind + '\"');\n          }\n\n          var key = _toPropertyKey(elementObject.key);\n\n          var placement = String(elementObject.placement);\n\n          if (placement !== \"static\" && placement !== \"prototype\" && placement !== \"own\") {\n            throw new TypeError('An element descriptor\\'s .placement property must be one of \"static\",' + ' \"prototype\" or \"own\", but a decorator created an element descriptor' + ' with .placement \"' + placement + '\"');\n          }\n\n          var descriptor = elementObject.descriptor;\n          this.disallowProperty(elementObject, \"elements\", \"An element descriptor\");\n          var element = {\n            kind: kind,\n            key: key,\n            placement: placement,\n            descriptor: Object.assign({}, descriptor)\n          };\n\n          if (kind !== \"field\") {\n            this.disallowProperty(elementObject, \"initializer\", \"A method descriptor\");\n          } else {\n            this.disallowProperty(descriptor, \"get\", \"The property descriptor of a field descriptor\");\n            this.disallowProperty(descriptor, \"set\", \"The property descriptor of a field descriptor\");\n            this.disallowProperty(descriptor, \"value\", \"The property descriptor of a field descriptor\");\n            element.initializer = elementObject.initializer;\n          }\n\n          return element;\n        },\n        toElementFinisherExtras: function toElementFinisherExtras(elementObject) {\n          var element = this.toElementDescriptor(elementObject);\n\n          var finisher = _optionalCallableProperty(elementObject, \"finisher\");\n\n          var extras = this.toElementDescriptors(elementObject.extras);\n          return {\n            element: element,\n            finisher: finisher,\n            extras: extras\n          };\n        },\n        fromClassDescriptor: function fromClassDescriptor(elements) {\n          var obj = {\n            kind: \"class\",\n            elements: elements.map(this.fromElementDescriptor, this)\n          };\n          var desc = {\n            value: \"Descriptor\",\n            configurable: true\n          };\n          Object.defineProperty(obj, Symbol.toStringTag, desc);\n          return obj;\n        },\n        toClassDescriptor: function toClassDescriptor(obj) {\n          var kind = String(obj.kind);\n\n          if (kind !== \"class\") {\n            throw new TypeError('A class descriptor\\'s .kind property must be \"class\", but a decorator' + ' created a class descriptor with .kind \"' + kind + '\"');\n          }\n\n          this.disallowProperty(obj, \"key\", \"A class descriptor\");\n          this.disallowProperty(obj, \"placement\", \"A class descriptor\");\n          this.disallowProperty(obj, \"descriptor\", \"A class descriptor\");\n          this.disallowProperty(obj, \"initializer\", \"A class descriptor\");\n          this.disallowProperty(obj, \"extras\", \"A class descriptor\");\n\n          var finisher = _optionalCallableProperty(obj, \"finisher\");\n\n          var elements = this.toElementDescriptors(obj.elements);\n          return {\n            elements: elements,\n            finisher: finisher\n          };\n        },\n        runClassFinishers: function runClassFinishers(constructor, finishers) {\n          for (var i = 0; i < finishers.length; i++) {\n            var newConstructor = (0, finishers[i])(constructor);\n\n            if (newConstructor !== undefined) {\n              if (typeof newConstructor !== \"function\") {\n                throw new TypeError(\"Finishers must return a constructor.\");\n              }\n\n              constructor = newConstructor;\n            }\n          }\n\n          return constructor;\n        },\n        disallowProperty: function disallowProperty(obj, name, objectType) {\n          if (obj[name] !== undefined) {\n            throw new TypeError(objectType + \" can't have a .\" + name + \" property.\");\n          }\n        }\n      };\n      return api;\n    }\n\n    function _createElementDescriptor(def) {\n      var key = _toPropertyKey(def.key);\n\n      var descriptor;\n\n      if (def.kind === \"method\") {\n        descriptor = {\n          value: def.value,\n          writable: true,\n          configurable: true,\n          enumerable: false\n        };\n      } else if (def.kind === \"get\") {\n        descriptor = {\n          get: def.value,\n          configurable: true,\n          enumerable: false\n        };\n      } else if (def.kind === \"set\") {\n        descriptor = {\n          set: def.value,\n          configurable: true,\n          enumerable: false\n        };\n      } else if (def.kind === \"field\") {\n        descriptor = {\n          configurable: true,\n          writable: true,\n          enumerable: true\n        };\n      }\n\n      var element = {\n        kind: def.kind === \"field\" ? \"field\" : \"method\",\n        key: key,\n        placement: def[\"static\"] ? \"static\" : def.kind === \"field\" ? \"own\" : \"prototype\",\n        descriptor: descriptor\n      };\n      if (def.decorators) element.decorators = def.decorators;\n      if (def.kind === \"field\") element.initializer = def.value;\n      return element;\n    }\n\n    function _coalesceGetterSetter(element, other) {\n      if (element.descriptor.get !== undefined) {\n        other.descriptor.get = element.descriptor.get;\n      } else {\n        other.descriptor.set = element.descriptor.set;\n      }\n    }\n\n    function _coalesceClassElements(elements) {\n      var newElements = [];\n\n      var isSameElement = function isSameElement(other) {\n        return other.kind === \"method\" && other.key === element.key && other.placement === element.placement;\n      };\n\n      for (var i = 0; i < elements.length; i++) {\n        var element = elements[i];\n        var other;\n\n        if (element.kind === \"method\" && (other = newElements.find(isSameElement))) {\n          if (_isDataDescriptor(element.descriptor) || _isDataDescriptor(other.descriptor)) {\n            if (_hasDecorators(element) || _hasDecorators(other)) {\n              throw new ReferenceError(\"Duplicated methods (\" + element.key + \") can't be decorated.\");\n            }\n\n            other.descriptor = element.descriptor;\n          } else {\n            if (_hasDecorators(element)) {\n              if (_hasDecorators(other)) {\n                throw new ReferenceError(\"Decorators can't be placed on different accessors with for \" + \"the same property (\" + element.key + \").\");\n              }\n\n              other.decorators = element.decorators;\n            }\n\n            _coalesceGetterSetter(element, other);\n          }\n        } else {\n          newElements.push(element);\n        }\n      }\n\n      return newElements;\n    }\n\n    function _hasDecorators(element) {\n      return element.decorators && element.decorators.length;\n    }\n\n    function _isDataDescriptor(desc) {\n      return desc !== undefined && !(desc.value === undefined && desc.writable === undefined);\n    }\n\n    function _optionalCallableProperty(obj, name) {\n      var value = obj[name];\n\n      if (value !== undefined && typeof value !== \"function\") {\n        throw new TypeError(\"Expected '\" + name + \"' to be a function\");\n      }\n\n      return value;\n    }\n\n    function _toPropertyKey(arg) {\n      var key = _toPrimitive(arg, \"string\");\n\n      return _typeof(key) === \"symbol\" ? key : String(key);\n    }\n\n    function _toPrimitive(input, hint) {\n      if (_typeof(input) !== \"object\" || input === null) return input;\n      var prim = input[Symbol.toPrimitive];\n\n      if (prim !== undefined) {\n        var res = prim.call(input, hint || \"default\");\n        if (_typeof(res) !== \"object\") return res;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n      }\n\n      return (hint === \"string\" ? String : Number)(input);\n    }\n\n    function _toArray(arr) {\n      return _arrayWithHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableRest();\n    }\n\n    function _nonIterableRest() {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n\n    function _unsupportedIterableToArray(o, minLen) {\n      if (!o) return;\n      if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n      var n = Object.prototype.toString.call(o).slice(8, -1);\n      if (n === \"Object\" && o.constructor) n = o.constructor.name;\n      if (n === \"Map\" || n === \"Set\") return Array.from(o);\n      if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n    }\n\n    function _arrayLikeToArray(arr, len) {\n      if (len == null || len > arr.length) len = arr.length;\n\n      for (var i = 0, arr2 = new Array(len); i < len; i++) {\n        arr2[i] = arr[i];\n      }\n\n      return arr2;\n    }\n\n    function _iterableToArray(iter) {\n      if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n    }\n\n    function _arrayWithHoles(arr) {\n      if (Array.isArray(arr)) return arr;\n    }\n\n    function _get(target, property, receiver) {\n      if (typeof Reflect !== \"undefined\" && Reflect.get) {\n        _get = Reflect.get;\n      } else {\n        _get = function _get(target, property, receiver) {\n          var base = _superPropBase(target, property);\n\n          if (!base) return;\n          var desc = Object.getOwnPropertyDescriptor(base, property);\n\n          if (desc.get) {\n            return desc.get.call(receiver);\n          }\n\n          return desc.value;\n        };\n      }\n\n      return _get(target, property, receiver || target);\n    }\n\n    function _superPropBase(object, property) {\n      while (!Object.prototype.hasOwnProperty.call(object, property)) {\n        object = _getPrototypeOf(object);\n        if (object === null) break;\n      }\n\n      return object;\n    }\n\n    function _getPrototypeOf(o) {\n      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n        return o.__proto__ || Object.getPrototypeOf(o);\n      };\n      return _getPrototypeOf(o);\n    }\n\n    var v_pagination_vPagination = _decorate([Object(lit_element[\"c\"\n    /* customElement */\n    ])('v-pagination')], function (_initialize, _LitElement) {\n      var vPagination = /*#__PURE__*/function (_LitElement2) {\n        _inherits(vPagination, _LitElement2);\n\n        var _super = _createSuper(vPagination);\n\n        function vPagination() {\n          var _this;\n\n          _classCallCheck(this, vPagination);\n\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          _this = _super.call.apply(_super, [this].concat(args));\n\n          _initialize(_assertThisInitialized(_this));\n\n          return _this;\n        }\n\n        return vPagination;\n      }(_LitElement);\n\n      return {\n        F: vPagination,\n        d: [{\n          kind: \"get\",\n          \"static\": true,\n          key: \"styles\",\n          value: function styles() {\n            return [commonStyles[\"a\"\n            /* default */\n            ], v_pagination_styles];\n          }\n        }, {\n          kind: \"field\",\n          decorators: [Object(lit_element[\"f\"\n          /* property */\n          ])({\n            type: Object\n          })],\n          key: \"config\",\n          value: void 0\n        }, {\n          kind: \"field\",\n          decorators: [Object(lit_element[\"f\"\n          /* property */\n          ])({\n            type: Array\n          })],\n          key: \"pages\",\n          value: function value() {\n            return [];\n          }\n        }, {\n          kind: \"field\",\n          decorators: [Object(lit_element[\"f\"\n          /* property */\n          ])({\n            type: Array\n          })],\n          key: \"pageIndex\",\n          value: function value() {\n            return [];\n          }\n        }, {\n          kind: \"field\",\n          decorators: [Object(lit_element[\"f\"\n          /* property */\n          ])({\n            type: Number\n          })],\n          key: \"currentPage\",\n          value: function value() {\n            return 0;\n          }\n        }, {\n          kind: \"field\",\n          decorators: [Object(lit_element[\"f\"\n          /* property */\n          ])({\n            type: Number\n          })],\n          key: \"itemsPerPage\",\n          value: function value() {\n            return 0;\n          }\n        }, {\n          kind: \"field\",\n          decorators: [Object(lit_element[\"f\"\n          /* property */\n          ])({\n            type: Number\n          })],\n          key: \"pageButtons\",\n          value: function value() {\n            return 7;\n          }\n        }, {\n          kind: \"field\",\n          decorators: [Object(lit_element[\"f\"\n          /* property */\n          ])({\n            type: Number\n          })],\n          key: \"dataSize\",\n          value: function value() {\n            return 0;\n          }\n        }, {\n          kind: \"method\",\n          key: \"firstUpdated\",\n          value: function firstUpdated() {\n            if (!this.config) {\n              return;\n            }\n\n            this.dataSize = Number(this.config.dataSize);\n            this.currentPage = Number(this.config.currentPage);\n            this.itemsPerPage = Number(this.config.itemsPerPage);\n\n            this._setPages();\n          }\n        }, {\n          kind: \"method\",\n          key: \"shouldUpdate\",\n          value: function shouldUpdate() {\n            if (this.config && (Number(this.config.dataSize) !== this.dataSize || Number(this.config.itemsPerPage) !== this.itemsPerPage) && this.dataSize !== 0) {\n              this.pages = [];\n              this.dataSize = Number(this.config.dataSize);\n              this.currentPage = Number(this.config.currentPage);\n              this.itemsPerPage = Number(this.config.itemsPerPage);\n\n              this._getPageList();\n\n              this._setPages();\n            }\n\n            return true;\n          }\n        }, {\n          kind: \"method\",\n          key: \"render\",\n          value: function render() {\n            var _this2 = this;\n\n            return this.config ? this.config.dataSize <= this.itemsPerPage ? undefined : Object(lit_element[\"d\"\n            /* html */\n            ])(v_pagination_templateObject || (v_pagination_templateObject = v_pagination_taggedTemplateLiteral([\"\\n            <div class=\\\"pagination-container\\\">\\n              \", \"\\n\\n              <div class=\\\"pagination\\\">\\n                <a\\n                  aria-label=\\\"previous page\\\"\\n                  @click=\", \"\\n                  tabindex=\\\"\", \"\\\"\\n                  @keypress=\", \"\\n                >\\n                  <v-icon\\n                    size=\\\"30px\\\"\\n                    color=\", \"\\n                    class=\\\"\", \"\\\"\\n                    name=\\\"chevronLeftCircle\\\"\\n                  ></v-icon>\\n                </a>\\n\\n                \", \"\\n\\n                <a\\n                  aria-label=\\\"next page\\\"\\n                  @click=\", \"\\n                  tabindex=\\\"\", \"\\\"\\n                  @keypress=\", \"\\n                >\\n                  <v-icon\\n                    size=\\\"30px\\\"\\n                    color=\", \"\\n                    class=\\\"\", \"\\\"\\n                    name=\\\"chevronLeftCircle\\\"\\n                  ></v-icon>\\n                </a>\\n              </div>\\n            </div>\\n          \"])), this._getListMessage(), function () {\n              return _this2._prevPage();\n            }, this.currentPage > 1 ? '0' : '-1', function (event) {\n              return _this2._prevPageOnKeypress(event);\n            }, this.currentPage > 1 ? '--v-colors__primary' : '--v-colors__gray', this.currentPage > 1 ? 'prev_icon' : 'prev_icon_disabled', this._pagesList().map(function (page, index) {\n              return Object(lit_element[\"d\"\n              /* html */\n              ])(_templateObject2 || (_templateObject2 = v_pagination_taggedTemplateLiteral([\" <a\\n                    aria-label=\\\"\", \"\\\"\\n                    class=\", \"\\n                    @click=\", \"\\n                    @keypress=\", \"\\n                    tabindex=\\\"\", \"\\\"\\n                    >\", \"</a\\n                  >\"])), 'page ' + (page === '...' ? 'collapsed' : page), Object(class_map[\"a\"\n              /* classMap */\n              ])({\n                pages: true,\n                active: _this2._selected(page)\n              }), function () {\n                return _this2._onPageSelect(page, index);\n              }, function (event) {\n                return _this2._onPageSelectByKeypress(event, page, index);\n              }, _this2._selected(page) ? '-1' : '0', page);\n            }), function () {\n              return _this2._nextPage();\n            }, this.currentPage < this.pages.length ? '0' : '-1', function (event) {\n              return _this2._nextPageOnKeypress(event);\n            }, this.currentPage < this.pages.length ? '--v-colors__primary' : '--v-colors__gray', this.currentPage < this.pages.length ? 'next_icon' : 'next_icon_disabled') : undefined;\n          }\n        }, {\n          kind: \"method\",\n          key: \"_getPageList\",\n          value: function _getPageList() {\n            var startIndex = this.currentPage * this.itemsPerPage - this.itemsPerPage;\n            var endLimit = this.currentPage * this.itemsPerPage - 1;\n            var endIndex = endLimit > this.config.dataSize - 1 ? this.config.dataSize - 1 : endLimit;\n            this.pageIndex = [startIndex, endIndex];\n\n            this._dispatchChangeEvent();\n          }\n        }, {\n          kind: \"field\",\n          key: \"_setPages\",\n          value: function value() {\n            var _this3 = this;\n\n            return function () {\n              var numberOfPages = Math.ceil(_this3.config.dataSize / _this3.config.itemsPerPage);\n\n              for (var index = 1; index <= numberOfPages; index++) {\n                _this3.pages.push(index);\n              }\n            };\n          }\n        }, {\n          kind: \"field\",\n          key: \"_nextPage\",\n          value: function value() {\n            var _this4 = this;\n\n            return function () {\n              if (_this4.currentPage < _this4.pages.length) {\n                ++_this4.currentPage;\n\n                _this4._getPageList();\n              }\n            };\n          }\n        }, {\n          kind: \"field\",\n          key: \"_nextPageOnKeypress\",\n          value: function value() {\n            var _this5 = this;\n\n            return function (event) {\n              if (Object(keyboardAccessibility[\"a\"\n              /* enterKeypress */\n              ])(event) && _this5.currentPage < _this5.pages.length) {\n                ++_this5.currentPage;\n\n                _this5._getPageList();\n              }\n            };\n          }\n        }, {\n          kind: \"field\",\n          key: \"_prevPage\",\n          value: function value() {\n            var _this6 = this;\n\n            return function () {\n              if (_this6.currentPage > 1) {\n                --_this6.currentPage;\n\n                _this6._getPageList();\n              }\n            };\n          }\n        }, {\n          kind: \"field\",\n          key: \"_prevPageOnKeypress\",\n          value: function value() {\n            var _this7 = this;\n\n            return function (event) {\n              if (event.keyCode === 13 && _this7.currentPage > 1) {\n                --_this7.currentPage;\n\n                _this7._getPageList();\n              }\n            };\n          }\n        }, {\n          kind: \"field\",\n          key: \"_onPageSelect\",\n          value: function value() {\n            var _this8 = this;\n\n            return function (selectedPage, index) {\n              _this8.currentPage = selectedPage === '...' ? _this8._getHiddenPages(index) : Number(selectedPage);\n\n              _this8._getPageList();\n            };\n          }\n        }, {\n          kind: \"field\",\n          key: \"_onPageSelectByKeypress\",\n          value: function value() {\n            var _this9 = this;\n\n            return function (event, selectedPage, index) {\n              if (event.keyCode === 13) {\n                _this9.currentPage = selectedPage === '...' ? _this9._getHiddenPages(index) : Number(selectedPage);\n\n                _this9._getPageList();\n              }\n            };\n          }\n        }, {\n          kind: \"method\",\n          key: \"_getHiddenPages\",\n          value: function _getHiddenPages(index) {\n            return Number(index === 1 ? this.pages[index] : this.pages[this.pages.length - 2]);\n          }\n        }, {\n          kind: \"method\",\n          key: \"_pagesList\",\n          value: function _pagesList() {\n            var mid = Math.floor(this.pageButtons / 2) + 1;\n            var pagesDisplay = [];\n\n            if (this.pages.length < this.pageButtons) {\n              return this.pages;\n            }\n\n            if (this.currentPage > mid) {\n              var exeedValue = this.currentPage + mid - this.pages.length;\n              var startIndex = exeedValue > 0 ? this.currentPage - (mid + exeedValue - 1) : this.currentPage - mid;\n              var endIndex = exeedValue > 0 ? this.currentPage + mid - exeedValue : this.currentPage + mid - 1;\n              pagesDisplay = this.pages.slice(startIndex, endIndex);\n              pagesDisplay[0] = this.pages[0];\n              pagesDisplay[1] = '...';\n              exeedValue > 0 ? '' : pagesDisplay[this.pageButtons - 2] = '...';\n              pagesDisplay[this.pageButtons - 1] = this.pages[this.pages.length - 1];\n              return pagesDisplay;\n            }\n\n            pagesDisplay = this.pages.slice(0, this.pageButtons);\n            pagesDisplay[this.pageButtons - 1] = this.pages[this.pages.length - 1];\n            pagesDisplay[this.pageButtons - 2] = '...';\n            return pagesDisplay;\n          }\n        }, {\n          kind: \"field\",\n          key: \"_selected\",\n          value: function value() {\n            var _this10 = this;\n\n            return function (page) {\n              return Number(page) === _this10.currentPage;\n            };\n          }\n        }, {\n          kind: \"method\",\n          key: \"_getListMessage\",\n          value: function _getListMessage() {\n            var startIndex = this.currentPage * this.itemsPerPage - this.itemsPerPage;\n            var endIndex = this.currentPage * this.itemsPerPage > this.config.dataSize ? this.config.dataSize : this.currentPage * this.itemsPerPage;\n            return this.config.conjunction === 'table' ? Object(lit_element[\"d\"\n            /* html */\n            ])(_templateObject3 || (_templateObject3 = v_pagination_taggedTemplateLiteral([\"<span\\n          >Showing \", \" - \", \" of \", \"\\n          results</span\\n        >\"])), startIndex + 1, endIndex, this.config.dataSize) : undefined;\n          }\n        }, {\n          kind: \"method\",\n          key: \"_dispatchChangeEvent\",\n          value: function _dispatchChangeEvent() {\n            this.dispatchEvent(new CustomEvent('vpagination-change', {\n              bubbles: true,\n              composed: true,\n              detail: {\n                pageIndex: this.pageIndex\n              }\n            }));\n          }\n        }, {\n          kind: \"method\",\n          key: \"_getUpdateComplete\",\n          value: function () {\n            var _getUpdateComplete2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return _get(_getPrototypeOf(vPagination.prototype), \"_getUpdateComplete\", this).call(this);\n\n                    case 2:\n                      _context.next = 4;\n                      return Object(utils[\"m\"\n                      /* getUpdateComplete */\n                      ])(this);\n\n                    case 4:\n                      return _context.abrupt(\"return\", _context.sent);\n\n                    case 5:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee, this);\n            }));\n\n            function _getUpdateComplete() {\n              return _getUpdateComplete2.apply(this, arguments);\n            }\n\n            return _getUpdateComplete;\n          }()\n        }]\n      };\n    }, lit_element[\"a\"\n    /* LitElement */\n    ]);\n    /***/\n\n  }\n  /******/\n\n});","map":null,"metadata":{},"sourceType":"script"}