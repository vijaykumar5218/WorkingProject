{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as text from './constants/alertText.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nexport let AlertWindowService = /*#__PURE__*/(() => {\n  class AlertWindowService {\n    constructor(alertController, router) {\n      this.alertController = alertController;\n      this.router = router;\n      this.pageText = text;\n    }\n\n    presentAlert(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const link = msg.link || '';\n        const alert = yield this.alertController.create({\n          cssClass: msg.cssClass || 'alert-window',\n          header: msg.header || this.pageText.systemUnavailable,\n          subHeader: msg.subHeader || '',\n          message: msg.message || this.pageText.youMustUse,\n          buttons: msg.buttons || ['OK'],\n          backdropDismiss: (msg === null || msg === void 0 ? void 0 : msg.backdropDismiss) !== undefined ? msg.backdropDismiss : true\n        });\n        yield alert.present();\n\n        if (link !== '') {\n          yield alert.onDidDismiss().then(() => {\n            this.router.navigateByUrl('' + link);\n          });\n        } else {\n          yield alert.onDidDismiss();\n        }\n      });\n    }\n\n    createAndPresent(opts) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create(opts);\n        return alert.present();\n      });\n    }\n\n  }\n\n  AlertWindowService.ɵfac = function AlertWindowService_Factory(t) {\n    return new (t || AlertWindowService)(i0.ɵɵinject(i1.AlertController), i0.ɵɵinject(i2.Router));\n  };\n\n  AlertWindowService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AlertWindowService,\n    factory: AlertWindowService.ɵfac,\n    providedIn: 'root'\n  });\n  return AlertWindowService;\n})();","map":null,"metadata":{},"sourceType":"module"}