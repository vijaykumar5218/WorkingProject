{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { WebPlugin } from '@capacitor/core';\nexport class ScreenReaderWeb extends WebPlugin {\n  isEnabled() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      throw _this.unavailable('This feature is not available in the browser.');\n    })();\n  }\n\n  speak(options) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (!('speechSynthesis' in window)) {\n        throw _this2.unavailable('Browser does not support the SpeechSynthesis API');\n      }\n\n      const utterance = new SpeechSynthesisUtterance(options.value);\n\n      if (options.language) {\n        utterance.lang = options.language;\n      }\n\n      speechSynthesis.speak(utterance);\n    })();\n  }\n\n}","map":{"version":3,"sources":["/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@capacitor/screen-reader/dist/esm/web.js"],"names":["WebPlugin","ScreenReaderWeb","isEnabled","unavailable","speak","options","window","utterance","SpeechSynthesisUtterance","value","language","lang","speechSynthesis"],"mappings":";AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAO,MAAMC,eAAN,SAA8BD,SAA9B,CAAwC;AACrCE,EAAAA,SAAS,GAAG;AAAA;;AAAA;AACd,YAAM,KAAI,CAACC,WAAL,CAAiB,+CAAjB,CAAN;AADc;AAEjB;;AACKC,EAAAA,KAAK,CAACC,OAAD,EAAU;AAAA;;AAAA;AACjB,UAAI,EAAE,qBAAqBC,MAAvB,CAAJ,EAAoC;AAChC,cAAM,MAAI,CAACH,WAAL,CAAiB,kDAAjB,CAAN;AACH;;AACD,YAAMI,SAAS,GAAG,IAAIC,wBAAJ,CAA6BH,OAAO,CAACI,KAArC,CAAlB;;AACA,UAAIJ,OAAO,CAACK,QAAZ,EAAsB;AAClBH,QAAAA,SAAS,CAACI,IAAV,GAAiBN,OAAO,CAACK,QAAzB;AACH;;AACDE,MAAAA,eAAe,CAACR,KAAhB,CAAsBG,SAAtB;AARiB;AASpB;;AAb0C","sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class ScreenReaderWeb extends WebPlugin {\n    async isEnabled() {\n        throw this.unavailable('This feature is not available in the browser.');\n    }\n    async speak(options) {\n        if (!('speechSynthesis' in window)) {\n            throw this.unavailable('Browser does not support the SpeechSynthesis API');\n        }\n        const utterance = new SpeechSynthesisUtterance(options.value);\n        if (options.language) {\n            utterance.lang = options.language;\n        }\n        speechSynthesis.speak(utterance);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}