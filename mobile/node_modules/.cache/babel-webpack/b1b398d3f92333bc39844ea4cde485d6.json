{"ast":null,"code":"define(['./AccountTypes', './util/employermatch/EmployerMatchWrapper', './util/CalcUtilities'], function (AccountTypes, EmployerMatchWrapper, CalcUtilities) {\n  var AccountAccum = function () {\n    //  Private Variable declarations ------------------------------------\n    var _em = null; //  of type 'EmployerMatchWrapper'\n\n    var _mm = null; //  of type 'MinMaxLimit'\n\n    var _loan = null; //  of type 'MinMaxLimit'\n\n    var _planName = \"\";\n    var _planLabel = \"\";\n    var _planId = \"\";\n\n    var _planIndex = -1;\n\n    var _planType = -1;\n\n    var _name = \"\";\n    var _label = \"\";\n    var _id = \"\";\n\n    var _index = -1;\n\n    var _type = -1;\n\n    var _irc_code = -1;\n\n    var _priority = -1;\n\n    var _errorCode = -1;\n\n    var _errorString = \"\";\n    var _modes = 1;\n    var _contribType = AccountTypes.CONTRIB_RATE;\n    var _startContrib = 0;\n    var _immediateOrDue = false; // \"immediate\": interest applied before payment; \"due\": interest applied after payment\n\n    var _iterationEeAnnualSalary = 0;\n    var _iterationErAnnualSalary = 0;\n    var _iterationEeContribAmount = 0;\n    var _iterationErContribAmount = 0;\n\n    var _iterationPeriod = -1;\n\n    var _initialEeContribAmount = 0;\n    var _initialErContribAmount = 0;\n    var _contribIterationThreshold = 36500;\n\n    var _maxPeriod = -1;\n\n    var _eeLumpAmount = 0;\n    var _eeEarningsOnLumpAmount = 0;\n    var _eeTaxedEarningsOnLumpAmount = 0;\n    var _eeContribBucket = 0;\n    var _eeEarningsOnContribs = 0;\n    var _eeTaxedEarningsOnContribs = 0;\n    var _erLumpAmount = 0;\n    var _erEarningsOnLumpAmount = 0;\n    var _erTaxedEarningsOnLumpAmount = 0;\n    var _erContribBucket = 0;\n    var _erEarningsOnContribs = 0;\n    var _erTaxedEarningsOnContribs = 0;\n    var _rateOfReturn = 0;\n    var _rateOfIncrease = 0;\n    var _rateOfWithholding = 0;\n    var _irsInfraction = false; //will be set to true if there is any IRS infraction\n    //  Privileged Method Declarations ---------------------------------\n\n    this.reset = function () {\n      _eeEarningsOnLumpAmount = 0;\n      _eeTaxedEarningsOnLumpAmount = 0;\n      _eeContribBucket = 0;\n      _eeEarningsOnContribs = 0;\n      _eeTaxedEarningsOnContribs = 0;\n      _iterationEeContribAmount = 0;\n      _initialEeContribAmount = 0;\n      _erEarningsOnLumpAmount = 0;\n      _erTaxedEarningsOnLumpAmount = 0;\n      _erContribBucket = 0;\n      _erEarningsOnContribs = 0;\n      _erTaxedEarningsOnContribs = 0;\n      _iterationErContribAmount = 0;\n      _initialErContribAmount = 0;\n      _contribIterationThreshold = 36500;\n      _maxPeriod = -1;\n      _errorCode = -1;\n      _errorString = \"\";\n      _irsInfraction = false;\n    };\n\n    this.isMinMaxLimit = function () {\n      return _mm !== null && (_mm.getMinValue() > 0 || _mm.getMaxValue() > 0);\n    };\n\n    this.isLoan = function () {\n      return _loan != null;\n    };\n\n    this.atMax = function () {\n      return _maxPeriod > -1;\n    };\n\n    this.isEmployerMatch = function () {\n      return _em !== null;\n    };\n\n    this.getEmployerMatchId = function () {\n      return this.isEmployerMatch() ? _em.getID() : -1;\n    };\n\n    this.isEmployerMatchPeriodicityModal = function () {\n      return _em.calcPeriodicityIsModal();\n    };\n\n    this.setName = function (s) {\n      _name = s;\n    };\n\n    this.getName = function () {\n      return _name;\n    };\n\n    this.setLabel = function (s) {\n      _label = s;\n    };\n\n    this.getLabel = function () {\n      return _label;\n    };\n\n    this.setId = function (s) {\n      _id = s;\n    };\n\n    this.getId = function () {\n      return _id;\n    };\n\n    this.setIRC = function (n) {\n      _irc_code = n;\n    };\n\n    this.getIRC = function () {\n      return _irc_code;\n    };\n\n    this.setIndex = function (n) {\n      _index = n;\n    };\n\n    this.getIndex = function () {\n      return _index;\n    };\n\n    this.setType = function (n) {\n      _type = n;\n\n      switch (n) {\n        case AccountTypes.TYPE_RECURRING_ER:\n          this.setImmediateOrDue(true);\n          break;\n\n        default:\n          this.setImmediateOrDue(false);\n          break;\n      }\n    };\n\n    this.getType = function () {\n      return _type;\n    };\n\n    this.setPlanName = function (s) {\n      _planName = s;\n    };\n\n    this.getPlanName = function () {\n      return _planName;\n    };\n\n    this.setPlanLabel = function (s) {\n      _planLabel = s;\n    };\n\n    this.getPlanLabel = function () {\n      return _planLabel;\n    };\n\n    this.setPlanId = function (s) {\n      _planId = s;\n    };\n\n    this.getPlanId = function () {\n      return _planId;\n    };\n\n    this.setPlanIndex = function (n) {\n      _planIndex = n;\n    };\n\n    this.getPlanIndex = function () {\n      return _planIndex;\n    };\n\n    this.setPlanType = function (n) {\n      _planType = n;\n    };\n\n    this.getPlanType = function () {\n      return _planType;\n    };\n\n    this.setPriority = function (n) {\n      _priority = n;\n    };\n\n    this.getPriority = function () {\n      return _priority;\n    };\n\n    this.touchErrorCode = function (n) {\n      _errorCode = _errorCode > -1 ? _errorCode : n;\n    };\n\n    this.getErrorCode = function () {\n      return _errorCode;\n    };\n\n    this.touchErrorString = function (s) {\n      _errorString = _errorString.length > 0 ? _errorString : s;\n    };\n\n    this.getErrorString = function () {\n      return _errorString;\n    };\n\n    this.compareTo = function (another) {\n      return _priority - another.getPriority();\n    };\n\n    this.setModes = function (n) {\n      _modes = n > 0 ? n : 1;\n    };\n\n    this.getModes = function () {\n      return _modes;\n    };\n\n    this.getFrequency = function () {\n      return this.getModes();\n    };\n\n    this.setImmediateOrDue = function (b) {\n      _immediateOrDue = b;\n    };\n\n    this.isImmediateOrDue = function () {\n      return _immediateOrDue;\n    };\n\n    this.setStartContrib = function (n, d) {\n      _contribType = n;\n      _startContrib = d;\n    };\n\n    this.adjustStartContrib = function (d) {\n      _startContrib = d;\n    };\n\n    this.getStartContrib = function () {\n      return _startContrib;\n    };\n\n    this.getContribType = function () {\n      return _contribType;\n    };\n\n    this.setIrsInfraction = function (n) {\n      _irsInfraction = n;\n    };\n\n    this.getIrsInfraction = function () {\n      return _irsInfraction;\n    };\n\n    this.isIrsInfraction = function () {\n      return Boolean(_irsInfraction);\n    };\n\n    this.setIterationEeContribAmount = function (period) {\n      var holder = 0;\n      var annualSalaryRef = this.getIterationEeAnnualSalary();\n      this.setIterationPeriod(period);\n\n      if (!this.atMax()) {\n        holder = 0;\n\n        switch (this.getContribType()) {\n          case AccountTypes.CONTRIB_RATE:\n            holder = this.getStartContrib() * annualSalaryRef / this.getModes();\n            break;\n\n          case AccountTypes.CONTRIB_MODAL:\n            switch (this.getType()) {\n              case AccountTypes.TYPE_MANDATORY_EE:\n              case AccountTypes.TYPE_MANDATORY_ER:\n              case AccountTypes.TYPE_RECURRING_ER:\n                holder = this.getStartContrib();\n                break;\n\n              default:\n                holder = this.getStartContrib() * Math.pow(1.0 + this.getRateOfIncrease(), period);\n                break;\n            }\n\n            break;\n\n          case AccountTypes.CONTRIB_ANNUAL:\n            switch (this.getType()) {\n              case AccountTypes.TYPE_MANDATORY_EE:\n              case AccountTypes.TYPE_MANDATORY_ER:\n              case AccountTypes.TYPE_RECURRING_ER:\n                holder = this.getStartContrib() / this.getModes();\n                break;\n\n              default:\n                holder = this.getStartContrib() / this.getModes() * Math.pow(1.0 + this.getRateOfIncrease(), period);\n                break;\n            }\n\n            break;\n        }\n\n        holder = this.isEmployerMatch() ? _em.modifyEeContrib(holder, annualSalaryRef, this.getModes()) : holder;\n        _iterationEeContribAmount = holder;\n      }\n\n      return this.getIterationEeContribAmount();\n    };\n\n    this.getInitialEeContribAmount = function () {\n      return _initialEeContribAmount;\n    };\n\n    this.getIterationEeContribAmount = function () {\n      return _iterationEeContribAmount;\n    };\n\n    this.getEvaldEeContrib = function () {\n      return this.getIterationEeContribAmount();\n    };\n\n    this.getPeriodicEeContrib = function () {\n      return this.getIterationEeContribAmount() * this.getModes();\n    };\n\n    this.adjustEeIterationContribAmount = function (d) {\n      _iterationEeContribAmount = d;\n      return this.getIterationEeContribAmount();\n    };\n\n    this.getIterationEeContribPerContribType = function () {\n      var holder = 0.0;\n      var iterationAmount = this.getIterationEeContribAmount();\n      var annualSalaryRef = this.getIterationEeAnnualSalary();\n\n      switch (this.getContribType()) {\n        case AccountTypes.CONTRIB_RATE:\n          holder = iterationAmount * this.getModes() / annualSalaryRef;\n          break;\n\n        case AccountTypes.CONTRIB_MODAL:\n          holder = iterationAmount;\n          break;\n\n        case AccountTypes.CONTRIB_ANNUAL:\n          holder = iterationAmount * this.getModes();\n          break;\n      }\n\n      return holder;\n    };\n\n    this.getIterationEeAnnualSalary = function () {\n      return _iterationEeAnnualSalary;\n    };\n\n    this.setIterationEeAnnualSalary = function (d) {\n      _iterationEeAnnualSalary = d;\n    };\n\n    this.getIterationErAnnualSalary = function () {\n      return _iterationEeAnnualSalary;\n    };\n\n    this.setIterationErAnnualSalary = function (d) {\n      _iterationErAnnualSalary = d;\n    };\n\n    this.getIterationPeriod = function () {\n      return _iterationPeriod;\n    };\n\n    this.setIterationPeriod = function (n) {\n      _iterationPeriod = n;\n    };\n\n    this.setIterationErContribAmount = function (alreadyMatchedContribs) {\n      var holder = 0; //this.getIterationEeContribAmount() ;\n\n      if (this.isEmployerMatch()) {\n        if (_em.calcPeriodicityIsAnnual()) {\n          holder = _em.getEmployerContrib(this.getIterationEeContribAmount(), alreadyMatchedContribs, this.getIterationErAnnualSalary(), this.getModes());\n        } else {\n          holder = _em.getEmployerContrib(this.getIterationEeContribAmount(), alreadyMatchedContribs, this.getIterationErAnnualSalary(), this.getModes(), this.getIterationPeriod(), 0);\n        }\n      }\n\n      _iterationErContribAmount = holder;\n      return this.getIterationErContribAmount();\n    };\n\n    this.adjustErIterationContribAmount = function (d) {\n      _iterationErContribAmount = d;\n      return this.getIterationErContribAmount();\n    };\n\n    this.getInitialErContribAmount = function () {\n      return _initialErContribAmount;\n    };\n\n    this.getIterationErContribAmount = function () {\n      return _iterationErContribAmount;\n    };\n\n    this.getPeriodicErContrib = function () {\n      return this.getIterationErContribAmount() * this.getModes();\n    };\n\n    this.getEvaldErContrib = function () {\n      return this.getIterationErContribAmount();\n    };\n\n    this.getIterationErContribPerContribType = function () {\n      var holder = 0.0;\n      var iterationAmount = this.getIterationErContribAmount();\n      var annualSalaryRef = this.getIterationErAnnualSalary();\n\n      switch (this.getContribType()) {\n        case AccountTypes.CONTRIB_RATE:\n          holder = iterationAmount * this.getModes() / annualSalaryRef;\n          break;\n\n        case AccountTypes.CONTRIB_MODAL:\n          holder = iterationAmount;\n          break;\n\n        case AccountTypes.CONTRIB_ANNUAL:\n          holder = iterationAmount * this.getModes();\n          break;\n      }\n\n      return holder;\n    };\n\n    this.getContribIterationThreshold = function () {\n      return _contribIterationThreshold;\n    };\n\n    this.setContribIterationThreshold = function (n) {\n      _contribIterationThreshold = n;\n    };\n\n    this.getMaxPeriod = function () {\n      return _maxPeriod;\n    };\n\n    this.touchMaxPeriod = function (n) {\n      _maxPeriod = _maxPeriod > -1 ? _maxPeriod : n;\n    };\n\n    this.setRateOfReturn = function (d) {\n      _rateOfReturn = d;\n    };\n\n    this.getRateOfReturn = function () {\n      return _rateOfReturn;\n    };\n\n    this.setRateOfWithholding = function (d) {\n      _rateOfWithholding = d;\n    };\n\n    this.getRateOfWithholding = function () {\n      return _rateOfWithholding;\n    };\n\n    this.setRateOfIncrease = function (d) {\n      _rateOfIncrease = d;\n    };\n\n    this.getRateOfIncrease = function () {\n      return _rateOfIncrease;\n    };\n\n    this.setEeLumpAmount = function (d) {\n      _eeLumpAmount = d;\n    };\n\n    this.getEeLumpAmount = function () {\n      return _eeLumpAmount;\n    };\n\n    this.setErLumpAmount = function (d) {\n      _erLumpAmount = d;\n    };\n\n    this.getErLumpAmount = function () {\n      return _erLumpAmount;\n    };\n\n    this.touchEeEarningsOnLumpAmount = function (d) {\n      _eeEarningsOnLumpAmount += d;\n    };\n\n    this.getEeEarningsOnLumpAmount = function () {\n      return _eeEarningsOnLumpAmount;\n    };\n\n    this.touchErEarningsOnLumpAmount = function (d) {\n      _erEarningsOnLumpAmount += d;\n    };\n\n    this.getErEarningsOnLumpAmount = function () {\n      return _erEarningsOnLumpAmount;\n    };\n\n    this.touchEeTaxedEarningsOnLumpAmount = function (d) {\n      _eeTaxedEarningsOnLumpAmount += d;\n    };\n\n    this.getEeTaxedEarningsOnLumpAmount = function () {\n      return _eeTaxedEarningsOnLumpAmount;\n    };\n\n    this.touchErTaxedEarningsOnLumpAmount = function (d) {\n      _erTaxedEarningsOnLumpAmount += d;\n    };\n\n    this.getErTaxedEarningsOnLumpAmount = function () {\n      return _erTaxedEarningsOnLumpAmount;\n    };\n\n    this.touchEeContribBucket = function (d) {\n      _eeContribBucket += d;\n    };\n\n    this.getEeContribBucket = function () {\n      return _eeContribBucket;\n    };\n\n    this.touchErContribBucket = function (d) {\n      _erContribBucket += d;\n    };\n\n    this.getErContribBucket = function () {\n      return _erContribBucket;\n    };\n\n    this.touchEeEarningsOnContribs = function (d) {\n      _eeEarningsOnContribs += d;\n    };\n\n    this.getEeEarningsOnContribs = function () {\n      return _eeEarningsOnContribs;\n    };\n\n    this.touchErEarningsOnContribs = function (d) {\n      _erEarningsOnContribs += d;\n    };\n\n    this.getErEarningsOnContribs = function () {\n      return _erEarningsOnContribs;\n    };\n\n    this.touchEeTaxedEarningsOnContribs = function (d) {\n      _eeTaxedEarningsOnContribs += d;\n    };\n\n    this.getEeTaxedEarningsOnContribs = function () {\n      return _eeTaxedEarningsOnContribs;\n    };\n\n    this.touchErTaxedEarningsOnContribs = function (d) {\n      _erTaxedEarningsOnContribs += d;\n    };\n\n    this.getErTaxedEarningsOnContribs = function () {\n      return _erTaxedEarningsOnContribs;\n    };\n\n    this.align = function (pp, alreadyMatchedContribs) {\n      var modalRateOfReturn = this.getType() == AccountTypes.TYPE_NOGROWTH ? 0.0 : CalcUtilities.getPeriodicRate(this.getModes(), this.getRateOfReturn());\n      var taxedRateOfReturn = CalcUtilities.getAfterTaxRateOfReturn(modalRateOfReturn, this.getRateOfWithholding()); //var iterationIndex = ( ( this.getIterationPeriod() * this.getModes() ) + pp ) ;\n\n      var iterationIndex = CalcUtilities.getSerialIndexFromPeriodAndMode(this.getIterationPeriod(), pp, this.getModes());\n      var applyContribs = iterationIndex < this.getContribIterationThreshold();\n\n      if (this.isEmployerMatch()) {\n        if (_em.calcPeriodicityIsModal()) {\n          _iterationErContribAmount = _em.getEmployerContrib(this.getIterationEeContribAmount(), alreadyMatchedContribs, this.getIterationErAnnualSalary(), this.getModes(), this.getIterationPeriod(), pp);\n        }\n      }\n\n      if (this.isLoan()) {\n        this.touchEeContribBucket(_loan.getPayment(iterationIndex));\n      } else if (!this.isImmediateOrDue() && applyContribs) {\n        // due\n        this.touchEeContribBucket(this.getIterationEeContribAmount());\n        this.touchErContribBucket(this.getIterationErContribAmount());\n\n        if (this.getIterationPeriod() < 1 && pp < 1) {\n          _initialEeContribAmount = this.getIterationEeContribAmount();\n          _initialErContribAmount = this.getIterationErContribAmount();\n        }\n      } // accumulation of earnings\n\n\n      this.touchEeEarningsOnLumpAmount((this.getEeLumpAmount() + this.getEeEarningsOnLumpAmount()) * modalRateOfReturn);\n      this.touchEeEarningsOnContribs((this.getEeContribBucket() + this.getEeEarningsOnContribs()) * modalRateOfReturn);\n      this.touchEeTaxedEarningsOnLumpAmount((this.getEeLumpAmount() + this.getEeTaxedEarningsOnLumpAmount()) * taxedRateOfReturn);\n      this.touchEeTaxedEarningsOnContribs((this.getEeContribBucket() + this.getEeTaxedEarningsOnContribs()) * taxedRateOfReturn);\n      this.touchErEarningsOnLumpAmount((this.getErLumpAmount() + this.getErEarningsOnLumpAmount()) * modalRateOfReturn);\n      this.touchErEarningsOnContribs((this.getErContribBucket() + this.getErEarningsOnContribs()) * modalRateOfReturn);\n      this.touchErTaxedEarningsOnLumpAmount((this.getErLumpAmount() + this.getErTaxedEarningsOnLumpAmount()) * taxedRateOfReturn);\n      this.touchErTaxedEarningsOnContribs((this.getErContribBucket() + this.getErTaxedEarningsOnContribs()) * taxedRateOfReturn);\n\n      if (this.isImmediateOrDue() && applyContribs && !this.isLoan()) {\n        // immediate\n        this.touchEeContribBucket(this.getIterationEeContribAmount());\n        this.touchErContribBucket(this.getIterationErContribAmount());\n\n        if (this.getIterationPeriod() < 1 && pp < 1) {\n          _initialEeContribAmount = this.getIterationEeContribAmount();\n          _initialErContribAmount = this.getIterationErContribAmount();\n        }\n      }\n    };\n\n    this.getEmployerMatchWrapper = function () {\n      return _em;\n    }; // of type 'EmployerMatchWrapper'\n\n\n    this.setEmployerMatchWrapper = function (em) {\n      _em = em;\n    };\n\n    this.getMinMaxLimit = function () {\n      return _mm;\n    };\n\n    this.setMinMaxLimit = function (mm) {\n      _mm = mm;\n    };\n\n    this.getLoan = function () {\n      return _loan;\n    };\n\n    this.setLoan = function (l) {\n      _loan = l;\n    };\n  };\n\n  return AccountAccum;\n});","map":null,"metadata":{},"sourceType":"script"}