{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ElementRef } from '@angular/core';\nimport { TPAWarningType } from '../../../services/tpa-stream/models/tpa.model';\nimport { NavigationEnd } from '@angular/router';\nimport { delay, filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/tpa-stream/tpastream.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@shared-lib/services/utility/utility.service\";\nimport * as i4 from \"../../loading/loading.component\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"../consent-required/consent-required.component\";\nimport * as i7 from \"../plan-tabs/plan-transactions/plan-transactions.component\";\nimport * as i8 from \"./tpawarning/tpawarning.component\";\nconst _c0 = [\"topmostElement\"];\n\nfunction TPAClaimsComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"app-consent-required\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TPAClaimsComponent_div_4_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵelement(1, \"app-tpawarning\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const warn_r4 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"warning\", warn_r4);\n  }\n}\n\nfunction TPAClaimsComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, TPAClaimsComponent_div_4_div_1_Template, 2, 1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"mobile-plan-transactions\", 7);\n    i0.ɵɵlistener(\"manageButtonEvent\", function TPAClaimsComponent_div_4_Template_mobile_plan_transactions_manageButtonEvent_2_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.manageProviders();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.warnings);\n  }\n}\n\nexport let TPAClaimsComponent = /*#__PURE__*/(() => {\n  class TPAClaimsComponent {\n    constructor(tpaStreamService, router, utilityService) {\n      this.tpaStreamService = tpaStreamService;\n      this.router = router;\n      this.utilityService = utilityService;\n      this.isWeb = false;\n      this.loading = true;\n      this.notConnected = true;\n      this.warnings = [];\n      this.isWeb = this.utilityService.getIsWeb();\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.subscription = _this.tpaStreamService.getTPAData().subscribe(tpaData => {\n          _this.tpaData = tpaData;\n\n          _this.checkForErrors();\n\n          setTimeout(() => {\n            _this.loading = false;\n          }, 250);\n        });\n\n        _this.subscription.add(_this.tpaStreamService.tpaDataReload$.subscribe(() => {\n          _this.loading = true;\n        }));\n      })();\n    }\n\n    ionViewWillEnter() {\n      this.scrollToTop();\n    }\n\n    scrollToTop() {\n      if (this.isWeb) {\n        const routerSubscription = this.router.events.pipe(filter(event => event instanceof NavigationEnd), delay(100)).subscribe(() => {\n          this.utilityService.scrollToTop(this.topmostElement);\n        });\n        this.subscription.add(routerSubscription);\n      }\n    }\n\n    checkForErrors() {\n      this.warnings = [];\n      this.tpaData.carriers.forEach(car => {\n        if (car.crawlCount < 1) {\n          this.warnings.push({\n            carrier: car.carrierName,\n            warningType: TPAWarningType.IN_PROCCESS\n          });\n        } else if (car.loginProblem != 'valid') {\n          this.warnings.push({\n            carrier: car.carrierName,\n            errorMessage: car.loginMessage,\n            warningType: TPAWarningType.CONNECTION_ERROR\n          });\n        }\n      });\n    }\n\n    manageProviders() {\n      if (this.isWeb) {\n        this.router.navigateByUrl('coverages/all-coverages/tpaclaims/providers');\n      } else {\n        this.router.navigateByUrl('coverages/coverage-tabs/tpaproviders');\n      }\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n  }\n\n  TPAClaimsComponent.ɵfac = function TPAClaimsComponent_Factory(t) {\n    return new (t || TPAClaimsComponent)(i0.ɵɵdirectiveInject(i1.TPAStreamService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.SharedUtilityService));\n  };\n\n  TPAClaimsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TPAClaimsComponent,\n    selectors: [[\"app-tpaclaims\"]],\n    viewQuery: function TPAClaimsComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5, ElementRef);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.topmostElement = _t.first);\n      }\n    },\n    decls: 5,\n    vars: 3,\n    consts: [[3, \"loading\"], [1, \"half-bg\"], [\"topmostElement\", \"\"], [\"class\", \"consent-wrap\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"consent-wrap\"], [\"class\", \"warning-wrap\", 4, \"ngFor\", \"ngForOf\"], [3, \"manageButtonEvent\"], [1, \"warning-wrap\"], [3, \"warning\"]],\n    template: function TPAClaimsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"app-loading\", 0);\n        i0.ɵɵelement(1, \"div\", 1, 2);\n        i0.ɵɵtemplate(3, TPAClaimsComponent_div_3_Template, 2, 0, \"div\", 3);\n        i0.ɵɵtemplate(4, TPAClaimsComponent_div_4_Template, 3, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"loading\", ctx.loading);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", (ctx.tpaData == null ? null : ctx.tpaData.claims.length) < 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (ctx.tpaData == null ? null : ctx.tpaData.claims.length) > 0);\n      }\n    },\n    directives: [i4.LoadingComponent, i5.NgIf, i6.ConsentRequiredComponent, i5.NgForOf, i7.PlanTransactionsComponent, i8.TPAWarningComponent],\n    styles: [\"[_nghost-%COMP%]{background-color:var(--ion-color-white)}[_nghost-%COMP%]   .consent-wrap[_ngcontent-%COMP%]{min-height:800px}[_nghost-%COMP%]   mobile-plan-transactions[_ngcontent-%COMP%]{margin-top:16px}\"]\n  });\n  return TPAClaimsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}