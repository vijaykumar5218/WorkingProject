{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as preferenceText from './constants/preference-selection-content.json';\nimport { EventTrackingService } from '@shared-lib/services/event-tracker/event-tracking.service';\nimport * as eventC from '@shared-lib/services/event-tracker/constants/event-tracking.json';\nimport { Preferences } from './constants/preferenceEnum.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/utility/utility.service\";\nimport * as i2 from \"@shared-lib/services/notification-setting/notification-setting.service\";\nimport * as i3 from \"@shared-lib/services/native-settings/native-settings.service\";\nimport * as i4 from \"../../services/modal-presentation/modal-presentation.service\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\n\nfunction PreferenceSelectionPage_ng_container_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-row\", 10);\n    i0.ɵɵelementStart(2, \"ion-col\");\n    i0.ɵɵelementStart(3, \"ion-text\", 11);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-col\", 12);\n    i0.ɵɵelementStart(6, \"ion-toggle\", 13);\n    i0.ɵɵlistener(\"ngModelChange\", function PreferenceSelectionPage_ng_container_12_Template_ion_toggle_ngModelChange_6_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.pageText.preferenceOptions[item_r1] = $event;\n    })(\"ionChange\", function PreferenceSelectionPage_ng_container_12_Template_ion_toggle_ionChange_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.changeNotificationMethod(item_r1);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"id\", \"toggle-\", item_r1, \"\");\n    i0.ɵɵproperty(\"disabled\", item_r1 === \"Text\" && ctx_r0.noMobilePhone ? true : undefined)(\"ngModel\", ctx_r0.pageText.preferenceOptions[item_r1]);\n  }\n}\n\nexport let PreferenceSelectionPage = /*#__PURE__*/(() => {\n  class PreferenceSelectionPage {\n    constructor(utilityService, injector, notificationSettingService, nativeSettingsService, modalPresentationService) {\n      this.utilityService = utilityService;\n      this.injector = injector;\n      this.notificationSettingService = notificationSettingService;\n      this.nativeSettingsService = nativeSettingsService;\n      this.modalPresentationService = modalPresentationService;\n      this.pageText = preferenceText;\n      this.eventContent = eventC;\n      this.eventTrackingService = this.injector.get(EventTrackingService);\n    }\n\n    onPopState() {\n      this.closeDialog();\n    }\n\n    ngOnInit() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        _this.emailContactId = _this.preferenceObject.primaryEmail.partyContactId;\n        _this.mobileContactId = 'mobilePhone' in _this.preferenceObject ? _this.preferenceObject.mobilePhone.partyContactId : '';\n        _this.isWeb = _this.utilityService.getIsWeb();\n\n        if (!_this.isWeb) {\n          _this.originalPushPref = yield _this.nativeSettingsService.checkNotificationStatus();\n        }\n\n        _this.setUpToggleValues();\n      })();\n    }\n\n    ngAfterViewInit() {\n      if (!('mobilePhone' in this.preferenceObject)) {\n        this.noMobilePhone = true;\n      }\n    }\n\n    changeNotificationMethod(notificationText) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        if (notificationText === 'Push Notifications' && _this2.pageText.preferenceOptions[notificationText] && !_this2.isWeb) {\n          const permissionStatus = yield _this2.nativeSettingsService.checkNotificationStatus();\n\n          if (!permissionStatus) {\n            yield _this2.nativeSettingsService.createAndShowModal();\n          }\n        }\n      })();\n    }\n\n    closeDialog() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        _this3.trackpreferenceEvent();\n\n        if (_this3.loginObject.firstTimeLogin && _this3.loginObject.firstTimeLoginWeb) {\n          let pushID = _this3.emailContactId;\n\n          if (!_this3.isWeb && !_this3.originalPushPref) {\n            pushID = 'DONT_PUSH';\n          }\n\n          const defaultObj = {\n            accountAlertPrefs: {\n              prefEmailContactId: _this3.emailContactId,\n              prefMobileContactId: 'DONT_TEXT',\n              prefPushNotificationContactId: pushID\n            },\n            highPrioitytNotificationPrefs: {\n              prefEmailContactId: _this3.emailContactId,\n              prefMobileContactId: 'DONT_TEXT',\n              prefPushNotificationContactId: pushID\n            },\n            insightsNotificationPrefs: {\n              prefEmailContactId: _this3.emailContactId,\n              prefMobileContactId: 'DONT_TEXT',\n              prefPushNotificationContactId: pushID\n            }\n          };\n          yield _this3.notificationSettingService.saveNotificationPrefs(defaultObj);\n        }\n\n        _this3.modalPresentationService.dismiss();\n      })();\n    }\n\n    setUpToggleValues() {\n      var _this4 = this;\n\n      return _asyncToGenerator(function* () {\n        const isFirstLogin = _this4.loginObject.firstTimeLoginWeb && _this4.loginObject.firstTimeLogin;\n\n        if (!isFirstLogin) {\n          _this4.pageText.preferenceOptions['Email'] = false;\n        } else {\n          if (_this4.isWeb) {\n            _this4.pageText.preferenceOptions['Push Notifications'] = true;\n          } else {\n            if (_this4.originalPushPref) {\n              _this4.pageText.preferenceOptions['Push Notifications'] = true;\n            }\n          }\n        }\n      })();\n    }\n\n    objectKeys(keyObject) {\n      return Object.keys(keyObject);\n    }\n\n    savePreferenceInDB() {\n      var _this5 = this;\n\n      return _asyncToGenerator(function* () {\n        _this5.trackpreferenceEvent();\n\n        yield _this5.notificationSettingService.saveNotificationPrefs(_this5.setPreferenceObject());\n\n        _this5.modalPresentationService.dismiss();\n      })();\n    }\n\n    setPreferenceObject() {\n      const preferenceObj = {\n        insightsNotificationPrefs: {\n          prefPushNotificationContactId: 'DONT_PUSH',\n          prefMobileContactId: 'DONT_TEXT',\n          prefEmailContactId: 'DONT_EMAIL'\n        },\n        accountAlertPrefs: {\n          prefPushNotificationContactId: 'DONT_PUSH',\n          prefMobileContactId: 'DONT_TEXT',\n          prefEmailContactId: 'DONT_EMAIL'\n        },\n        highPrioitytNotificationPrefs: {\n          prefPushNotificationContactId: 'DONT_PUSH',\n          prefMobileContactId: 'DONT_TEXT',\n          prefEmailContactId: 'DONT_EMAIL'\n        }\n      };\n      const ArrKeys = this.objectKeys(this.pageText.preferenceOptions);\n      ArrKeys.forEach(key => {\n        switch (true) {\n          case Preferences.PUSH_NOTIFICATION === key && this.pageText.preferenceOptions[Preferences.PUSH_NOTIFICATION]:\n            preferenceObj.insightsNotificationPrefs.prefPushNotificationContactId = this.emailContactId;\n            preferenceObj.accountAlertPrefs.prefPushNotificationContactId = this.emailContactId;\n            preferenceObj.highPrioitytNotificationPrefs.prefPushNotificationContactId = this.emailContactId;\n            break;\n\n          case Preferences.TEXT === key && this.pageText.preferenceOptions[Preferences.TEXT]:\n            preferenceObj.insightsNotificationPrefs.prefMobileContactId = this.mobileContactId;\n            preferenceObj.accountAlertPrefs.prefMobileContactId = this.mobileContactId;\n            preferenceObj.highPrioitytNotificationPrefs.prefMobileContactId = this.mobileContactId;\n            break;\n\n          case Preferences.EMAIL === key && this.pageText.preferenceOptions[Preferences.EMAIL]:\n            preferenceObj.insightsNotificationPrefs.prefEmailContactId = this.emailContactId;\n            preferenceObj.accountAlertPrefs.prefEmailContactId = this.emailContactId;\n            preferenceObj.highPrioitytNotificationPrefs.prefEmailContactId = this.emailContactId;\n            break;\n        }\n      });\n      return preferenceObj;\n    }\n\n    trackpreferenceEvent() {\n      this.eventTrackingService.eventTracking({\n        eventName: this.eventContent.eventTrackingPreference.eventName\n      });\n    }\n\n  }\n\n  PreferenceSelectionPage.ɵfac = function PreferenceSelectionPage_Factory(t) {\n    return new (t || PreferenceSelectionPage)(i0.ɵɵdirectiveInject(i1.SharedUtilityService), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i2.NotificationsSettingService), i0.ɵɵdirectiveInject(i3.NativeSettingsService), i0.ɵɵdirectiveInject(i4.ModalPresentationService));\n  };\n\n  PreferenceSelectionPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PreferenceSelectionPage,\n    selectors: [[\"app-preference-selection\"]],\n    hostBindings: function PreferenceSelectionPage_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"popstate\", function PreferenceSelectionPage_popstate_HostBindingHandler($event) {\n          return ctx.originalPushPref($event);\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      preferenceObject: \"preferenceObject\",\n      loginObject: \"loginObject\"\n    },\n    decls: 24,\n    vars: 6,\n    consts: [[1, \"header\"], [1, \"fix-width\"], [1, \"sub-header\"], [1, \"image\"], [\"src\", \"assets/icon/preferenceSelectionImage.svg\", \"alt\", \"\"], [4, \"ngFor\", \"ngForOf\"], [1, \"save-button-row\"], [\"size\", \"small\", \"color\", \"btncolor\", \"shape\", \"round\", \"expand\", \"block\", \"automation\", \"preferenceSaveButton\", 3, \"click\"], [\"size\", \"small\", \"color\", \"white\", \"shape\", \"round\", \"expand\", \"block\", \"id\", \"preferenceNotNowButton\", 1, \"secondary\", 3, \"click\"], [3, \"innerHTML\"], [1, \"toggle-row\", \"fix-width\"], [1, \"preference-selection-text\"], [1, \"toggle-col\"], [1, \"preference-toggle\", 3, \"disabled\", \"id\", \"ngModel\", \"ngModelChange\", \"ionChange\"]],\n    template: function PreferenceSelectionPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-grid\");\n        i0.ɵɵelementStart(1, \"ion-row\");\n        i0.ɵɵelementStart(2, \"ion-col\");\n        i0.ɵɵelementStart(3, \"ion-text\", 0);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"ion-row\", 1);\n        i0.ɵɵelementStart(6, \"ion-col\");\n        i0.ɵɵelementStart(7, \"ion-text\", 2);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ion-row\");\n        i0.ɵɵelementStart(10, \"ion-col\", 3);\n        i0.ɵɵelement(11, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(12, PreferenceSelectionPage_ng_container_12_Template, 7, 4, \"ng-container\", 5);\n        i0.ɵɵelementStart(13, \"ion-row\", 6);\n        i0.ɵɵelementStart(14, \"ion-col\");\n        i0.ɵɵelementStart(15, \"ion-button\", 7);\n        i0.ɵɵlistener(\"click\", function PreferenceSelectionPage_Template_ion_button_click_15_listener() {\n          return ctx.savePreferenceInDB();\n        });\n        i0.ɵɵtext(16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-row\");\n        i0.ɵɵelementStart(18, \"ion-col\");\n        i0.ɵɵelementStart(19, \"ion-button\", 8);\n        i0.ɵɵlistener(\"click\", function PreferenceSelectionPage_Template_ion_button_click_19_listener() {\n          return ctx.closeDialog();\n        });\n        i0.ɵɵtext(20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"ion-row\");\n        i0.ɵɵelementStart(22, \"ion-col\");\n        i0.ɵɵelement(23, \"ion-text\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageText.header);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageText.subHeader);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.objectKeys(ctx.pageText.preferenceOptions));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageText.saveButton);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageText.notnowButton);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"innerHTML\", ctx.pageText.legalText, i0.ɵɵsanitizeHtml);\n      }\n    },\n    directives: [i5.IonGrid, i5.IonRow, i5.IonCol, i5.IonText, i6.NgForOf, i5.IonButton, i5.IonToggle, i5.BooleanValueAccessor, i7.NgControlStatus, i7.NgModel],\n    styles: [\"[_nghost-%COMP%]{background-color:var(--primary-colors-voya-white)}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]{padding-top:0;padding-top:var(--ion-safe-area-top, 0);margin:20px 20px 40px;display:flex;flex-direction:column}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   ion-text[_ngcontent-%COMP%]{color:var(--primary-colors-voya-black)}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   ion-text.header[_ngcontent-%COMP%]{font-size:24px;font-weight:bold;text-align:center;display:block}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   ion-text.sub-header[_ngcontent-%COMP%]{font-size:18px;text-align:center;display:block}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   .image[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:45px}@media (min-width: 450px){[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   .fix-width[_ngcontent-%COMP%]{align-self:center;width:449px}}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   .toggle-row[_ngcontent-%COMP%]{padding-bottom:12px}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   .toggle-row[_ngcontent-%COMP%]   ion-toggle[_ngcontent-%COMP%]{float:right;margin-right:4px}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   .toggle-row[_ngcontent-%COMP%]   .toggle-col[_ngcontent-%COMP%]{padding-top:10px}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   .save-button-row[_ngcontent-%COMP%]{padding:20px 0 10px;border-top:1px solid var(--border-light-grey)}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   ion-button[_ngcontent-%COMP%]{max-width:120px;margin:0 auto;height:40px;font-weight:normal;font-size:16px;--color: var(--primary-colors-voya-white);--background: var(--primary-colors-voya-dark-blue)}[_nghost-%COMP%]   ion-grid[_ngcontent-%COMP%]   ion-button.secondary[_ngcontent-%COMP%]{--background: var(--primary-colors-voya-white);--color: var(--primary-colors-voya-dark-blue);--border-color: var(--primary-colors-voya-dark-blue);--border-style: solid;--border-width: 2px;font-weight:600;margin-bottom:40px}\"]\n  });\n  return PreferenceSelectionPage;\n})();","map":null,"metadata":{},"sourceType":"module"}