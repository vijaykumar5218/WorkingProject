{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../mobile/src/app/modules/shared/service/authentication/authentication.service\";\nimport * as i2 from \"@shared-lib/services/event-tracker/event-tracking.service\";\nexport let PushNotificationsService = /*#__PURE__*/(() => {\n  class PushNotificationsService {\n    constructor(authService, eventTrackingService) {\n      this.authService = authService;\n      this.eventTrackingService = eventTrackingService;\n      this.mcSDK = window.MCCordovaPlugin;\n      this.mcSDK.enableVerboseLogging();\n      this.mcSDK.setOnNotificationOpenedListener(event => {\n        this.mcSDK.logSdkState();\n        this.authService.didLaunchWithURL(event.values.url);\n        this.captureCTAClickEvent(event.values.url);\n      });\n      this.mcSDK.logSdkState();\n    }\n\n    setContactKey(partyId) {\n      this.mcSDK.setContactKey(partyId);\n      this.mcSDK.logSdkState();\n    }\n\n    captureCTAClickEvent(url) {\n      const eventTrackingEvent = {\n        eventName: 'CTAClick',\n        passThruAttributes: [{\n          attributeName: 'source',\n          attributeValue: 'push'\n        }, {\n          attributeName: 'redirect_url',\n          attributeValue: url\n        }]\n      };\n      this.eventTrackingService.eventTracking(eventTrackingEvent);\n    }\n\n  }\n\n  PushNotificationsService.ɵfac = function PushNotificationsService_Factory(t) {\n    return new (t || PushNotificationsService)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.EventTrackingService));\n  };\n\n  PushNotificationsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PushNotificationsService,\n    factory: PushNotificationsService.ɵfac,\n    providedIn: 'root'\n  });\n  return PushNotificationsService;\n})();","map":null,"metadata":{},"sourceType":"module"}