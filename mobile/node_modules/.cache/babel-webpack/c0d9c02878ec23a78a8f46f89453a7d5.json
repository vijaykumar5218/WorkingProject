{"ast":null,"code":"define(['./util/WithholdingUtilities'], function (WithholdingUtilities) {\n  //  Constructor\n  var IRSwh = {}; //  Static var declarations ------------------------------------\n\n  IRSwh.MC = 0; //  Private var declarations ------------------------------------\n\n  var loadValues = {}; //var medicare = [ [ 0.0, 0.0, 0.0145 ], [ 200000.0, 0.0, 0.0235 ] ] ;\n\n  var medicare = [];\n  var properties_entries = [\"irs.wh.medicare\"]; //  Static method Declarations ------------------------------------\n\n  IRSwh.init = function () {\n    this.reset();\n  };\n\n  IRSwh.reset = function () {\n    //        medicare = loadValues[ properties_entries[ IRSwh.MC ] ] ;\n    medicare = setBrackets(properties_entries[IRSwh.MC], loadValues);\n  };\n\n  IRSwh.set = function (loadJson) {\n    loadValues = loadJson;\n    IRSwh.reset();\n  };\n\n  IRSwh.getIRSLimitLabels = function () {\n    return limit_labels;\n  };\n\n  IRSwh.getWithholding = function (taxEntity, taxable) {\n    var ret = 0.0;\n\n    switch (taxEntity) {\n      case IRSwh.MC:\n        ret = WithholdingUtilities.baseBracketCalc(taxable, medicare);\n        break;\n\n      default:\n    }\n\n    return ret;\n  };\n\n  var setBrackets = function (id, loadValues) {\n    var tier = 0;\n    var ret = [[]];\n    var inValue = null; // get first dimension count\n\n    while ((inValue = loadValues[id + \".\" + tier + \".\" + WithholdingUtilities.property_labels[0]]) != undefined) {\n      tier++;\n    } //if( tier > 0 ) ret = new Array(tier).fill([]) ;\n    //As Mobile is failing with 'Fill' temporarily using below.\n\n\n    if (tier > 0) {\n      ret = new Array(tier);\n\n      for (var x = 0; x < ret.length; x++) {\n        ret[x] = [];\n      }\n    }\n\n    for (var n = 0; n < tier; n++) {\n      ret[n] = new Array(WithholdingUtilities.property_labels.length);\n\n      for (var m = 0; m < ret[n].length; m++) {\n        inValue = loadValues[id + \".\" + n + \".\" + WithholdingUtilities.property_labels[m]];\n        ret[n][m] = inValue == undefined ? 0.0 : inValue;\n      }\n    }\n\n    return ret;\n  };\n\n  return IRSwh;\n});","map":null,"metadata":{},"sourceType":"script"}