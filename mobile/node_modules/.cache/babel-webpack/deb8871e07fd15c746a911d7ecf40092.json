{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/access/access.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@shared-lib/services/utility/utility.service\";\nimport * as i4 from \"@shared-lib/services/platform/platform.service\";\nexport let InsightsGuard = /*#__PURE__*/(() => {\n  class InsightsGuard {\n    constructor(accessService, router, utilityService, platformService) {\n      this.accessService = accessService;\n      this.router = router;\n      this.utilityService = utilityService;\n      this.platformService = platformService;\n      this.platformService.isDesktop().subscribe(data => {\n        this.isDesktop = data;\n      });\n    }\n\n    canActivate() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const {\n          enableBST,\n          enableTPA\n        } = yield this.accessService.checkMyvoyageAccess();\n\n        if (enableBST === 'N') {\n          if (enableTPA === 'Y') {\n            this.router.navigateByUrl('/coverages/all-coverages/tpaclaims');\n          } else if (this.utilityService.getIsWeb()) {\n            const navigateTo = this.isDesktop ? 'elections' : 'plans';\n            this.router.navigateByUrl(`/coverages/all-coverages/${navigateTo}`);\n          } else {\n            this.router.navigateByUrl(`/coverages/coverage-tabs/plans`);\n          }\n        }\n\n        return true;\n      });\n    }\n\n  }\n\n  InsightsGuard.ɵfac = function InsightsGuard_Factory(t) {\n    return new (t || InsightsGuard)(i0.ɵɵinject(i1.AccessService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.SharedUtilityService), i0.ɵɵinject(i4.PlatformService));\n  };\n\n  InsightsGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InsightsGuard,\n    factory: InsightsGuard.ɵfac\n  });\n  return InsightsGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}