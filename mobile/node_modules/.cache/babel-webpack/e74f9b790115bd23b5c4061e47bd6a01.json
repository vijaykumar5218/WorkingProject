{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { NavigationStart } from '@angular/router';\nimport * as errorText from './constants/errorText.json';\nimport { Network } from '@capacitor/network';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@angular/router\";\nexport let ErrorService = /*#__PURE__*/(() => {\n  class ErrorService {\n    constructor(toastController, router, ngZone, alertController) {\n      this.toastController = toastController;\n      this.router = router;\n      this.ngZone = ngZone;\n      this.alertController = alertController;\n      this.errorText = errorText;\n      this.hasShownError = false;\n    }\n\n    initialize(network = Network) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        network.addListener('networkStatusChange', _this.onNetworkError.bind(_this));\n        const currentStatus = yield network.getStatus();\n\n        _this.onNetworkError(currentStatus);\n\n        _this.registerErrorListener();\n      })();\n    }\n\n    onNetworkError(status) {\n      var _this2 = this;\n\n      if (!status.connected) {\n        this.ngZone.run( /*#__PURE__*/_asyncToGenerator(function* () {\n          const alert = yield _this2.alertController.create({\n            header: _this2.errorText.networkErrorTitle,\n            message: _this2.errorText.networkErrorMessage,\n            buttons: [_this2.errorText.dismiss]\n          });\n          alert.present();\n        }));\n      }\n    }\n\n    registerErrorListener() {\n      var _this3 = this;\n\n      this.router.events.subscribe( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (event) {\n          if (event instanceof NavigationStart) {\n            _this3.hasShownError = false;\n          }\n        });\n\n        return function (_x) {\n          return _ref2.apply(this, arguments);\n        };\n      }());\n    }\n\n  }\n\n  ErrorService.ɵfac = function ErrorService_Factory(t) {\n    return new (t || ErrorService)(i0.ɵɵinject(i1.ToastController), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.AlertController));\n  };\n\n  ErrorService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ErrorService,\n    factory: ErrorService.ɵfac,\n    providedIn: 'root'\n  });\n  return ErrorService;\n})();","map":null,"metadata":{},"sourceType":"module"}