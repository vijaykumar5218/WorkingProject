{"ast":null,"code":"define(['../CalcUtilities', './EmployerMatchWrapper', '../../Utilities'], function (CalcUtilities, EmployerMatchWrapper, Utilities) {\n  //  Constructor (Extends EmployerMatchWrapper)\n  var StandardProfitSharing = Utilities.extend(EmployerMatchWrapper, function () {\n    //  Private Variable Declarations ------------------------------------\n    var that = this;\n\n    var _dRateOfSalary;\n\n    var _dFlatAnnualContrib; //  Privileged method Declarations ------------------------------------\n\n\n    this.setRateOfSalary = function (d) {\n      if (_dRateOfSalary != d) {\n        _dRateOfSalary = d;\n      }\n    };\n\n    this.getRateOfSalary = function () {\n      return _dRateOfSalary;\n    };\n\n    this.setFlatAnnualContrib = function (d) {\n      if (_dFlatAnnualContrib != d) {\n        _dFlatAnnualContrib = d;\n      }\n    };\n\n    this.getFlatAnnualContrib = function () {\n      return _dFlatAnnualContrib;\n    };\n\n    this.set = function (dFlatAnnualErContrib, dErRateMatchOfSalary) {\n      if (dErRateMatchOfSalary === undefined) {\n        _set(dFlatAnnualErContrib);\n      } else {\n        this.setFlatAnnualContrib(dFlatAnnualErContrib);\n        this.setRateOfSalary(dErRateMatchOfSalary);\n      }\n    };\n\n    this.getProfitSharing = function (dAnnualSalary, nPayPeriods) {\n      var dReturn = 0;\n      nPayPeriods = nPayPeriods === undefined ? 1 : nPayPeriods;\n      nPayPeriods = nPayPeriods > 0 ? nPayPeriods : 1;\n\n      if (_dFlatAnnualContrib > 0) {\n        dReturn += _dFlatAnnualContrib / nPayPeriods;\n      }\n\n      if (_dRateOfSalary > 0) {\n        // use general rate of salary\n        dReturn += dAnnualSalary / nPayPeriods * _dRateOfSalary;\n      }\n\n      return CalcUtilities.truncate(dReturn, 2);\n    };\n\n    this.getEmployerContrib = function (dModalEeContrib, dModalEeContribAscribed, dAnnualSalary, nPayPeriods, nYearOffset, nPayPeriodOffset) {\n      return this.getProfitSharing(dAnnualSalary, nPayPeriods);\n    };\n\n    this.reset = function () {\n      this.setFlatAnnualContrib(0);\n      this.setRateOfSalary(0);\n    }; //  Private Method Declarations ------------------------------------\n\n\n    (function init() {\n      // two tier employer match\n      _dRateOfSalary = 0;\n      _dFlatAnnualContrib = 0;\n    })();\n\n    function _set(d) {\n      // determine type of parameter\n      if (d > 1) // not a rate\n        that.setFlatAnnualContrib(d);else that.setRateOfSalary(d);\n    }\n  }); //  Public Method Declarations ------------------------------------\n\n  StandardProfitSharing.prototype.modifyEeContrib = function (dModalEeContrib, dAnnualSalary, nPayPeriods) {\n    // no change\n    return dModalEeContrib;\n  };\n\n  return StandardProfitSharing;\n});","map":null,"metadata":{},"sourceType":"script"}