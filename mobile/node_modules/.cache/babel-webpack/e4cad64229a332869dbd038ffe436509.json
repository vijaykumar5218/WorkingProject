{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as pageText from '@shared-lib/components/coverages/plan-tabs/plan-transactions/constants/pageText.json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ionic/angular\";\n\nfunction ChipsComponent_ion_chip_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-chip\");\n    i0.ɵɵelementStart(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-icon\", 2);\n    i0.ɵɵlistener(\"click\", function ChipsComponent_ion_chip_0_Template_ion_icon_click_3_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const el_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.removeChip(el_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const el_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(el_r2.name);\n  }\n}\n\nfunction ChipsComponent_ion_text_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-text\", 3);\n    i0.ɵɵlistener(\"click\", function ChipsComponent_ion_text_1_Template_ion_text_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.clearBtn();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.filterContent.clearFilters);\n  }\n}\n\nexport let ChipsComponent = /*#__PURE__*/(() => {\n  class ChipsComponent {\n    constructor() {\n      this.item = [];\n      this.outPutData = new EventEmitter();\n      this.clearOutPutFn = new EventEmitter();\n      this.filterContent = pageText.default;\n    }\n\n    removeChip(el) {\n      this.outPutData.emit(el);\n    }\n\n    clearBtn() {\n      this.clearOutPutFn.emit();\n    }\n\n  }\n\n  ChipsComponent.ɵfac = function ChipsComponent_Factory(t) {\n    return new (t || ChipsComponent)();\n  };\n\n  ChipsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ChipsComponent,\n    selectors: [[\"app-chips\"]],\n    inputs: {\n      item: \"item\"\n    },\n    outputs: {\n      outPutData: \"outPutData\",\n      clearOutPutFn: \"clearOutPutFn\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[4, \"ngFor\", \"ngForOf\"], [\"class\", \"clear-txt\", 3, \"click\", 4, \"ngIf\"], [\"name\", \"close\", 3, \"click\"], [1, \"clear-txt\", 3, \"click\"]],\n    template: function ChipsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ChipsComponent_ion_chip_0_Template, 4, 1, \"ion-chip\", 0);\n        i0.ɵɵtemplate(1, ChipsComponent_ion_text_1_Template, 2, 1, \"ion-text\", 1);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngForOf\", ctx.item);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.item.length);\n      }\n    },\n    directives: [i1.NgForOf, i1.NgIf, i2.IonChip, i2.IonLabel, i2.IonIcon, i2.IonText],\n    styles: [\"ion-chip[_ngcontent-%COMP%]{border-radius:10px;background-color:var(--secondary-colors-medium-gray-3)}.clear-txt[_ngcontent-%COMP%]{font-weight:600;color:var(--primary-colors-voya-dark-blue);margin:4px 15px;text-decoration:underline;cursor:pointer}\"]\n  });\n  return ChipsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}