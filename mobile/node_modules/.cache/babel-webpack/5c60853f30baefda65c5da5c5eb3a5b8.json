{"ast":null,"code":"import { loginEndPoints, tokenEndPoints } from '@shared-lib/services/benefits/constants/endpoints';\nimport { SavviIABController } from '@mobile/app/modules/shared/service/in-app-browser/controllers/savvi-iab-controller';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@mobile/app/modules/shared/service/authentication/authentication.service\";\nimport * as i2 from \"@mobile/app/modules/shared/service/in-app-browser/in-app-browser.service\";\nimport * as i3 from \"@shared-lib/services/utility/utility.service\";\nimport * as i4 from \"@shared-lib/services/base/base-factory-provider\";\nimport * as i5 from \"@shared-lib/services/benefits/benefits.service\";\nexport let OpenSavviService = /*#__PURE__*/(() => {\n  class OpenSavviService {\n    constructor(authService, inAppBrowser, utilityService, baseService, benefitsService) {\n      this.authService = authService;\n      this.inAppBrowser = inAppBrowser;\n      this.utilityService = utilityService;\n      this.baseService = baseService;\n      this.benefitsService = benefitsService;\n      this.tokenEndPoints = tokenEndPoints;\n      this.loginEndPoints = loginEndPoints;\n      this.environment = this.utilityService.getEnvironment();\n      this.tokenEndPoints = this.utilityService.appendBaseUrlToEndpoints(tokenEndPoints, this.environment.tokenBaseUrl);\n      this.loginEndPoints = this.utilityService.appendBaseUrlToEndpoints(loginEndPoints, this.environment.loginBaseUrl);\n    }\n\n    openSavvi() {\n      new SavviIABController(this.authService, this.baseService, this.inAppBrowser, this.tokenEndPoints.samlAuthToken, this.loginEndPoints.savviSaml, this.benefitsService, this.environment).openInAppBrowser(this.utilityService.getIsWeb());\n    }\n\n  }\n\n  OpenSavviService.ɵfac = function OpenSavviService_Factory(t) {\n    return new (t || OpenSavviService)(i0.ɵɵinject(i1.AuthenticationService), i0.ɵɵinject(i2.InAppBroserService), i0.ɵɵinject(i3.SharedUtilityService), i0.ɵɵinject(i4.BaseService), i0.ɵɵinject(i5.BenefitsService));\n  };\n\n  OpenSavviService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OpenSavviService,\n    factory: OpenSavviService.ɵfac,\n    providedIn: 'root'\n  });\n  return OpenSavviService;\n})();","map":null,"metadata":{},"sourceType":"module"}