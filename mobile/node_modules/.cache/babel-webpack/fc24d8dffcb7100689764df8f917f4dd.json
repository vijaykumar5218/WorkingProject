{"ast":null,"code":"define([], function () {\n  var WithholdingUtilities = {};\n  /**  bracket withholding calculation\n  */\n\n  WithholdingUtilities.baseBracketCalc = function (taxable, bracket) {\n    var portion,\n        remaining,\n        workingTax = 0.0;\n    var arraySize = bracket.length;\n    remaining = taxable;\n\n    for (var n = arraySize - 1; n > -1 && remaining > 0.0; n--) {\n      portion = bracket[n][WithholdingUtilities.THRESHOLD] < remaining ? remaining - bracket[n][WithholdingUtilities.THRESHOLD] : 0.0;\n      workingTax += bracket[n][WithholdingUtilities.RATE] * portion;\n      remaining -= portion;\n    }\n\n    return workingTax;\n  };\n  /**  standard bracket calculation (most circumstances)\n   */\n\n\n  WithholdingUtilities.standardBracketCalc = function (taxable, bracket) {\n    var arraySize = bracket.length;\n    var workingTax = 0.0;\n\n    for (var n = arraySize - 1; n > -1; n--) {\n      if (taxable > bracket[n][WithholdingUtilities.THRESHOLD]) {\n        workingTax = bracket[n][WithholdingUtilities.ADDITIVE] + bracket[n][WithholdingUtilities.RATE] * (taxable - bracket[n][WithholdingUtilities.THRESHOLD]);\n        break;\n      }\n    }\n\n    return workingTax;\n  }; //  statics ------------------------------------\n\n\n  WithholdingUtilities.THRESHOLD = 0;\n  WithholdingUtilities.ADDITIVE = 1;\n  WithholdingUtilities.SUBTRACTIVE = 2;\n  WithholdingUtilities.RATE = 3;\n  WithholdingUtilities.property_labels = [\"threshold\", \"additive\", \"subtractive\", \"rate\"];\n  return WithholdingUtilities;\n});","map":null,"metadata":{},"sourceType":"script"}