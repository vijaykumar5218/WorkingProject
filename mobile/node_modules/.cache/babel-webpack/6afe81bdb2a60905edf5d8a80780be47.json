{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { Router } from '@angular/router';\nimport accountText from '@shared-lib/services/account-info/constants/accountText.json';\nimport { AccountService } from '@shared-lib/services/account/account.service';\nimport { PopupInputDialogComponent } from '@shared-lib/components/popup-input-dialog/popup-input-dialog.component';\nimport { Subscription } from 'rxjs';\nimport { PopupInputType } from '@shared-lib/components/popup-input-dialog/constants/popup-input-type.enum';\nimport { AlertComponent } from '@shared-lib/components/alert/alert.component';\nimport * as editDisplayName from '@shared-lib/services/edit-display-name/constants/displayText.json';\nimport * as editEmail from '../edit-email/constants/displayText.json';\nimport * as editPhone from '../edit-phone/constants/displayText.json';\nimport { NotificationsSettingService } from '@shared-lib/services/notification-setting/notification-setting.service';\nimport { AccountInfoService } from '@shared-lib/services/account-info/account-info.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@shared-lib/services/utility/utility.service\";\nimport * as i2 from \"@shared-lib/services/platform/platform.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@shared-lib/services/access/access.service\";\nimport * as i5 from \"@shared-lib/services/edit-display-name/edit-display-name.service\";\nimport * as i6 from \"@angular/common\";\n\nfunction AccountInfoMenuComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.displayText == null ? null : ctx_r0.displayText.emailErrorMsg, \"\");\n  }\n}\n\nfunction AccountInfoMenuComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"img\", 18);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction AccountInfoMenuComponent_div_22_img_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 18);\n  }\n}\n\nfunction AccountInfoMenuComponent_div_22_img_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 22);\n  }\n}\n\nfunction AccountInfoMenuComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtemplate(1, AccountInfoMenuComponent_div_22_img_1_Template, 1, 0, \"img\", 20);\n    i0.ɵɵtemplate(2, AccountInfoMenuComponent_div_22_img_2_Template, 1, 0, \"img\", 21);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.isDesktop);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.isDesktop);\n  }\n}\n\nexport let AccountInfoMenuComponent = /*#__PURE__*/(() => {\n  class AccountInfoMenuComponent {\n    constructor(utilityService, platformService, modalController, accessService, editDisplayNameService, injector) {\n      this.utilityService = utilityService;\n      this.platformService = platformService;\n      this.modalController = modalController;\n      this.accessService = accessService;\n      this.editDisplayNameService = editDisplayNameService;\n      this.injector = injector;\n      this.displayText = accountText;\n      this.subscription = new Subscription();\n      this.editNamePopupText = JSON.parse(JSON.stringify(editDisplayName)).default;\n      this.editEmailPopupText = JSON.parse(JSON.stringify(editEmail)).default;\n      this.editPhonePopupText = JSON.parse(JSON.stringify(editPhone)).default;\n      this.accountService = injector.get(AccountService);\n      this.router = injector.get(Router);\n      this.notificationService = injector.get(NotificationsSettingService);\n      this.accountInfoService = injector.get(AccountInfoService);\n      this.isWeb = this.utilityService.getIsWeb();\n      this.platformService.isDesktop().subscribe(data => {\n        this.isDesktop = data;\n      });\n    }\n\n    ngOnInit() {\n      this.subscription.add(this.accountService.getParticipant().subscribe(data => {\n        this.participantData = data;\n      }));\n      this.subscription.add(this.notificationService.getNotificationSettings().subscribe(prefSettings => {\n        this.prefSettings = prefSettings;\n        this.emailContactId = prefSettings.primaryEmail.partyContactId;\n        this.email = prefSettings.primaryEmail.email;\n        this.phone = this.utilityService.formatPhone(prefSettings.mobilePhone.phoneNumber);\n        this.phoneContactId = prefSettings.mobilePhone.partyContactId;\n      }));\n    }\n\n    openPwebProfile() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const myVoyaAccess = yield _this.accessService.checkMyvoyageAccess();\n\n        _this.accountService.openPwebAccountLink(decodeURIComponent(myVoyaAccess.myProfileURL));\n      })();\n    }\n\n    editProperty() {\n      const rootPath = this.isWeb && !this.isDesktop ? 'more' : 'settings';\n\n      if (this.isWeb && this.isDesktop) {\n        switch (this.label) {\n          case this.displayText.name:\n            this.edit(this.displayText.nameTitle, this.displayText.name, this.participantData.displayName, this.displayText.name, PopupInputType.text, 'editNamePopupText');\n            break;\n\n          case this.displayText.email:\n            this.edit(this.displayText.emailTitle, this.displayText.email, this.email, this.displayText.email, PopupInputType.email, 'editEmailPopupText');\n            break;\n\n          case this.displayText.phone:\n            this.edit(this.displayText.phoneTitle, this.displayText.phoneSubTitle, this.phone, this.displayText.phone, PopupInputType.phone, 'editPhonePopupText');\n            break;\n\n          case this.displayText.loginInfo:\n            this.openPwebProfile();\n            break;\n        }\n      } else {\n        switch (this.label) {\n          case this.displayText.name:\n            this.router.navigateByUrl(`/${rootPath}/account-and-personal-info/edit-display-name`);\n            break;\n\n          case this.displayText.email:\n            this.router.navigateByUrl(`/${rootPath}/account-and-personal-info/edit-email`);\n            break;\n\n          case this.displayText.phone:\n            this.router.navigateByUrl(`/${rootPath}/account-and-personal-info/edit-phone`);\n            break;\n\n          case this.displayText.loginInfo:\n            this.openPwebProfile();\n            break;\n        }\n      }\n    }\n\n    edit(title, inputTitle, defaultValue, accountType, inputType, popupTextKey) {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        const modal = yield _this2.modalController.create({\n          component: PopupInputDialogComponent,\n          cssClass: 'modal-not-fullscreen',\n          componentProps: {\n            title: title,\n            inputTitle: inputTitle,\n            value: defaultValue,\n            inputType: inputType,\n            validator: value => {\n              return _this2.validation(accountType, value);\n            },\n            saveFunction: function () {\n              var _ref = _asyncToGenerator(function* (value) {\n                return new Promise(res => {\n                  _this2.saveData(value, accountType, popupTextKey);\n\n                  res(true);\n                });\n              });\n\n              return function saveFunction(_x) {\n                return _ref.apply(this, arguments);\n              };\n            }()\n          }\n        });\n        modal.onDidDismiss().then(data => {\n          _this2.modalDismissed(data, undefined, undefined);\n        });\n        return modal.present();\n      })();\n    }\n\n    validation(accountType, value) {\n      if (accountType === this.displayText.email) {\n        const emailVaild = this.utilityService.validateEmail(value);\n\n        if (!emailVaild) {\n          return this.displayText.invalidEmail;\n        } else {\n          return null;\n        }\n      } else if (accountType === this.displayText.phone) {\n        const phoneVaild = this.utilityService.validatePhone(value);\n\n        if (!phoneVaild) {\n          return this.displayText.invalidPhone;\n        } else {\n          return null;\n        }\n      } else if (accountType === this.displayText.name) {\n        if (value.trim().length < 1) {\n          return this.displayText.invalidDisplayName;\n        } else {\n          return null;\n        }\n      } else {\n        return null;\n      }\n    }\n\n    saveData(value, accountType, popupTextKey) {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        const modal = yield _this3.modalController.create({\n          component: AlertComponent,\n          cssClass: 'modal-not-fullscreen',\n          componentProps: {\n            titleMessage: _this3[popupTextKey].alert.message,\n            imageUrl: _this3[popupTextKey].alert.imageUrl,\n            saveFunction: function () {\n              var _ref2 = _asyncToGenerator(function* () {\n                if (accountType === _this3.displayText.name) {\n                  return _this3.saveDisplayName(value);\n                } else if (accountType === _this3.displayText.email) {\n                  return _this3.saveEmailOrPhone(value, 'saveEmail', _this3.emailContactId);\n                } else if (accountType === _this3.displayText.phone) {\n                  value = value?.replace(/[-\\s]/g, '');\n                  return _this3.saveEmailOrPhone(value, 'savePhone', _this3.phoneContactId);\n                }\n              });\n\n              return function saveFunction() {\n                return _ref2.apply(this, arguments);\n              };\n            }()\n          }\n        });\n        modal.onDidDismiss().then(data => {\n          _this3.modalDismissed(data, accountType, value);\n        });\n        return modal.present();\n      })();\n    }\n\n    saveDisplayName(value) {\n      return new Promise(res => {\n        this.editDisplayNameService.saveDisplayName(value).then(resp => {\n          if (resp.displayName && resp.displayName === value) {\n            res(true);\n          } else {\n            res(false);\n          }\n        });\n      });\n    }\n\n    saveEmailOrPhone(value, functionName, contactId) {\n      return new Promise(res => {\n        this.accountInfoService[functionName](value, contactId).then(resp => {\n          if (resp) {\n            res(true);\n          } else {\n            res(false);\n          }\n        });\n      });\n    }\n\n    modalDismissed(data, accountType, value) {\n      if (data.data.saved || data.saved) {\n        if (accountType === this.displayText.email) {\n          this.prefSettings.primaryEmail.email = value;\n          this.notificationService.setNotificationSettings(this.prefSettings);\n        } else if (accountType === this.displayText.phone) {\n          this.prefSettings.mobilePhone.phoneNumber = value.replace(/-/g, '');\n          this.notificationService.setNotificationSettings(this.prefSettings);\n        } else if (accountType === this.displayText.name) {\n          this.participantData.displayName = value;\n          this.accountService.setParticipant(this.participantData);\n        }\n      }\n    }\n\n    ngOnDestroy() {\n      this.subscription.unsubscribe();\n    }\n\n  }\n\n  AccountInfoMenuComponent.ɵfac = function AccountInfoMenuComponent_Factory(t) {\n    return new (t || AccountInfoMenuComponent)(i0.ɵɵdirectiveInject(i1.SharedUtilityService), i0.ɵɵdirectiveInject(i2.PlatformService), i0.ɵɵdirectiveInject(i3.ModalController), i0.ɵɵdirectiveInject(i4.AccessService), i0.ɵɵdirectiveInject(i5.EditDisplayNameService), i0.ɵɵdirectiveInject(i0.Injector));\n  };\n\n  AccountInfoMenuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccountInfoMenuComponent,\n    selectors: [[\"app-account-info-menu\"]],\n    inputs: {\n      label: \"label\",\n      value: \"value\",\n      recoveryType: \"recoveryType\",\n      emailError: \"emailError\"\n    },\n    decls: 23,\n    vars: 8,\n    consts: [[1, \"ion-no-margin\", \"ion-no-padding\"], [3, \"ngClass\"], [\"inset\", \"true\", 1, \"ion-no-padding\"], [1, \"menu-item\", \"menu-with-border\", 3, \"ngClass\"], [1, \"menu-inner\", 3, \"id\", \"click\"], [1, \"font-16\", \"w-100\"], [1, \"account-values\"], [1, \"account-label\"], [1, \"account-value\"], [1, \"error-value\"], [1, \"ion-no-padding\"], [1, \"account-data\", \"font-w-600\", \"recovery-value\"], [\"class\", \"error-text\", 4, \"ngIf\"], [1, \"ionic-icon\"], [\"class\", \"chevron_right\", 4, \"ngIf\"], [\"class\", \"pencil-circle\", 4, \"ngIf\"], [1, \"error-text\"], [1, \"chevron_right\"], [\"alt\", \"edit\", \"src\", \"assets/icon/chevron_right.svg\"], [1, \"pencil-circle\"], [\"alt\", \"edit\", \"src\", \"assets/icon/chevron_right.svg\", 4, \"ngIf\"], [\"alt\", \"edit\", \"src\", \"assets/icon/pencil-circle.svg\", 4, \"ngIf\"], [\"alt\", \"edit\", \"src\", \"assets/icon/pencil-circle.svg\"]],\n    template: function AccountInfoMenuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-grid\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"ion-item\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵlistener(\"click\", function AccountInfoMenuComponent_Template_div_click_4_listener() {\n          return ctx.editProperty();\n        });\n        i0.ɵɵelementStart(5, \"ion-row\", 5);\n        i0.ɵɵelementStart(6, \"ion-col\", 6);\n        i0.ɵɵelementStart(7, \"ion-row\");\n        i0.ɵɵelementStart(8, \"ion-col\");\n        i0.ɵɵelementStart(9, \"ion-text\", 7);\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"ion-col\", 8);\n        i0.ɵɵelementStart(12, \"ion-text\", 9);\n        i0.ɵɵtext(13);\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"ion-row\");\n        i0.ɵɵelementStart(16, \"ion-col\", 10);\n        i0.ɵɵelementStart(17, \"ion-text\", 11);\n        i0.ɵɵtemplate(18, AccountInfoMenuComponent_span_18_Template, 4, 1, \"span\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"ion-row\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"ion-col\", 13);\n        i0.ɵɵtemplate(21, AccountInfoMenuComponent_div_21_Template, 2, 0, \"div\", 14);\n        i0.ɵɵtemplate(22, AccountInfoMenuComponent_div_22_Template, 3, 2, \"div\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", ctx.isWeb ? \"accountInfoWeb\" : \"accountInfoMobile\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.emailError && ctx.label === (ctx.displayText == null ? null : ctx.displayText.email) ? \"menu-item-error\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate(\"id\", ctx.label);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.label);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.value);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.emailError && ctx.label === (ctx.displayText == null ? null : ctx.displayText.email));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isWeb);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isWeb);\n      }\n    },\n    directives: [i3.IonGrid, i6.NgClass, i3.IonItem, i3.IonRow, i3.IonCol, i3.IonText, i6.NgIf],\n    styles: [\"[_nghost-%COMP%]{background-color:var(--primary-colors-voya-white)}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .account-data[_ngcontent-%COMP%]{margin:13px 0;line-height:16px}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .account-label[_ngcontent-%COMP%]{margin:10px 0}@media screen and (max-width: 920px){[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .account-label[_ngcontent-%COMP%]{line-height:2}}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .account-value[_ngcontent-%COMP%]{margin:auto;text-align:end;font-size:16px;font-weight:bold}@media screen and (max-width: 920px){[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .account-value[_ngcontent-%COMP%]   p.error-value[_ngcontent-%COMP%]{text-align:left;text-align:initial}}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{padding-top:0;padding-bottom:0;--inner-padding-end: 0px;--background: var(--ion-color-primary-contrast);margin:0}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .recovery-value[_ngcontent-%COMP%]{margin-top:0}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .recovery-label[_ngcontent-%COMP%]{margin-bottom:0}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]{--detail-icon-color: var(--ion-color-button);--detail-icon-opacity: 1;font-size:16px;color:var(--toggle-txt-color);width:100%}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item.menu-item-error[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:var(--secondary-colors-error-red)}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item.menu-item-error[_ngcontent-%COMP%]   span.error-text[_ngcontent-%COMP%]{font-weight:normal}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]   .menu-inner[_ngcontent-%COMP%]{width:100%}@media screen and (max-width: 920px){[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]   .menu-inner[_ngcontent-%COMP%]{padding:20px 0}}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-no-border[_ngcontent-%COMP%]{border-bottom:none;height:68px!important}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]{min-width:100%}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]   ion-col.ionic-icon[_ngcontent-%COMP%]{max-width:35px;text-align:end;margin:auto}@media screen and (max-width: 920px){[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]   ion-col.account-values[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]{display:grid}[_nghost-%COMP%]   div.accountInfoWeb[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]   ion-col.account-values[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .account-value[_ngcontent-%COMP%]{text-align:start}}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]{padding:0 20px}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .account-data[_ngcontent-%COMP%]{margin:13px 0;line-height:16px}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .account-label[_ngcontent-%COMP%]{line-height:2;margin:10px 0}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .account-value[_ngcontent-%COMP%]{margin:auto;text-align:end;font-size:16px;font-weight:bold}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .account-value[_ngcontent-%COMP%]   p.error-value[_ngcontent-%COMP%]{text-align:left;text-align:initial}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]{padding-top:0;padding-bottom:0;--inner-padding-end: 0px;--background: var(--ion-color-primary-contrast);margin:0}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .recovery-value[_ngcontent-%COMP%]{margin-top:0}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .recovery-label[_ngcontent-%COMP%]{margin-bottom:0}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]{--detail-icon-color: var(--ion-color-button);--detail-icon-opacity: 1;font-size:16px;color:var(--toggle-txt-color);width:100%}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item.menu-item-error[_ngcontent-%COMP%]   span[_ngcontent-%COMP%]{color:var(--secondary-colors-error-red)}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item.menu-item-error[_ngcontent-%COMP%]   span.error-text[_ngcontent-%COMP%]{font-weight:normal}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-item[_ngcontent-%COMP%]   .menu-inner[_ngcontent-%COMP%]{width:100%;padding:20px 0}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   ion-item[_ngcontent-%COMP%]   .menu-no-border[_ngcontent-%COMP%]{border-bottom:none;height:68px!important}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]{min-width:100%}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]   ion-col.ionic-icon[_ngcontent-%COMP%]{max-width:35px;text-align:end;margin:auto}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]   ion-col.account-values[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]{display:grid}[_nghost-%COMP%]   div.accountInfoMobile[_ngcontent-%COMP%]   .w-100[_ngcontent-%COMP%]   ion-col.account-values[_ngcontent-%COMP%]   ion-row[_ngcontent-%COMP%]   .account-value[_ngcontent-%COMP%]{text-align:start}\"]\n  });\n  return AccountInfoMenuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}