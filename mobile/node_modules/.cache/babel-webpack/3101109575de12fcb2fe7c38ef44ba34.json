{"ast":null,"code":"define(['../CalcUtilities', './CustomERMatch', '../../Utilities'], function (CalcUtilities, CustomERMatch, Utilities) {\n  //  Constructor (Extends CustomERMatch)\n  var MODC_ERMatch = Utilities.extend(CustomERMatch, function () {\n    //  Public Variable Declarations  -------------------------------\n    this.aTiers = [0, 300, 360, 420]; //  Privileged Method Declarations  -------------------------------\n\n    this.getEmployerContrib = function (dModalEeContrib, dAnnualEeContribAscribed, dAnnualSalary, nPayPeriods) {\n      var dReturn = 0;\n      var dMatchingContrib = 0;\n      nPayPeriods = nPayPeriods > 0 ? nPayPeriods : 1;\n      dMatchingContrib = _getEmployerContrib(dModalEeContrib + dAnnualEeContribAscribed / nPayPeriods, nPayPeriods);\n      dMatchingContrib -= _getEmployerContrib(dAnnualEeContribAscribed / nPayPeriods, nPayPeriods);\n      dReturn = Math.max(dMatchingContrib, 0);\n      return CalcUtilities.truncate(dReturn, 2);\n    };\n\n    this.reset = function () {}; //  Private Method Declarations  -------------------------------\n\n\n    function _getEmployerContrib(dContrib, nPayPeriods) {\n      var dReturn = 0;\n\n      for (var n = aTiers.length - 1; n > -1; n--) {\n        if (aTiers[n] <= dContrib * nPayPeriods) {\n          dReturn = aTiers[n] / nPayPeriods;\n          break;\n        }\n      }\n\n      return CalcUtilities.truncate(dReturn, 2);\n    }\n  }); //  Public Method Declarations  -------------------------------\n\n  MODC_ERMatch.prototype.modifyEeContrib = function (dModalEeContrib, dAnnualSalary, nPayPeriods) {\n    var dReturn = CalcUtilities.roundToNearest(0.5, dModalEeContrib);\n    return CalcUtilities.truncate(dReturn, 2);\n  };\n\n  return MODC_ERMatch;\n});","map":null,"metadata":{},"sourceType":"script"}