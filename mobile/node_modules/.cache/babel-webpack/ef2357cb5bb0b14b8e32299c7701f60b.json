{"ast":null,"code":"import _asyncToGenerator from \"/Users/vijay.a/Documents/GitHub/MYVOYAGE/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { WebPlugin } from '@capacitor/core';\nexport let BadgeWeb = /*#__PURE__*/(() => {\n  class BadgeWeb extends WebPlugin {\n    constructor() {\n      super();\n      this.restore();\n    }\n\n    checkPermissions() {\n      return _asyncToGenerator(function* () {\n        return {\n          display: 'granted'\n        };\n      })();\n    }\n\n    requestPermissions() {\n      return _asyncToGenerator(function* () {\n        return {\n          display: 'granted'\n        };\n      })();\n    }\n\n    get() {\n      return _asyncToGenerator(function* () {\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\n        const count = value ? parseInt(value, 10) : 0;\n        return {\n          count\n        };\n      })();\n    }\n\n    set(options) {\n      return _asyncToGenerator(function* () {\n        const count = options.count;\n\n        if (count === 0) {\n          yield navigator.clearAppBadge();\n        } else {\n          yield navigator.setAppBadge(count);\n        }\n\n        const value = count.toString();\n        localStorage.setItem(BadgeWeb.STORAGE_KEY, value);\n      })();\n    }\n\n    increase() {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const {\n          count\n        } = yield _this.get();\n        yield _this.set({\n          count: count + 1\n        });\n      })();\n    }\n\n    decrease() {\n      var _this2 = this;\n\n      return _asyncToGenerator(function* () {\n        const {\n          count\n        } = yield _this2.get();\n\n        if (count < 1) {\n          return;\n        }\n\n        yield _this2.set({\n          count: count - 1\n        });\n      })();\n    }\n\n    clear() {\n      var _this3 = this;\n\n      return _asyncToGenerator(function* () {\n        yield _this3.set({\n          count: 0\n        });\n      })();\n    }\n\n    isSupported() {\n      return _asyncToGenerator(function* () {\n        const result = {\n          isSupported: 'setAppBadge' in navigator\n        };\n        return result;\n      })();\n    }\n\n    restore() {\n      return _asyncToGenerator(function* () {\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\n\n        if (!value) {\n          return;\n        }\n\n        const count = parseInt(value, 10);\n        yield navigator.setAppBadge(count);\n      })();\n    }\n\n  }\n\n  BadgeWeb.STORAGE_KEY = 'capacitor.badge'; //# sourceMappingURL=web.js.map\n\n  return BadgeWeb;\n})();","map":null,"metadata":{},"sourceType":"module"}