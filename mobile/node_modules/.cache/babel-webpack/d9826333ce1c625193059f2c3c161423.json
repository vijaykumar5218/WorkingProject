{"ast":null,"code":"define(['../AccountAccum'], function (AccountAccum) {\n  //  Constructor\n  var DoubleScratchPad = function () {\n    //  Private Variable Declarations -------------------------------------\n    var _ad = null;\n    var _initialCapacity = 10; //  Privileged Method Declarations ------------------------------------\n\n    this.setInitialCapacity = function (n) {\n      _initialCapacity = n;\n    };\n\n    this.getInitialCapacity = function () {\n      return _initialCapacity;\n    };\n\n    this.get = function (index) {\n      var d = 0;\n\n      if (within(index)) {\n        d = _ad[index];\n      }\n\n      return d;\n    };\n\n    this.set = function (index, d) {\n      if (!within(index)) create(index);\n      _ad[index] = d;\n    };\n\n    this.touch = function (index, d) {\n      if (!within(index)) create(index);\n      _ad[index] += d;\n    };\n\n    this.zero = function () {\n      var count = getCount();\n\n      for (var n = 0; n < count; n++) {\n        _ad[n] = 0;\n      }\n    };\n\n    this.close = function () {\n      _ad = null;\n    }; //  Private Method Declarations ------------------------------------\n\n\n    function getCount() {\n      var n = 0;\n      if (_ad !== null) n = _ad.length;\n      return n;\n    }\n\n    function create(newIndex) {\n      if (_ad === null) {\n        _ad = [];\n\n        for (var i = 0; i < _initialCapacity; i++) {\n          _ad[i] = 0;\n        }\n      }\n\n      if (_ad.length <= newIndex) {\n        // create new array\n        var nad = []; //\n\n        for (var n = 0; n < _ad.length; n++) {\n          nad[n] = _ad[n];\n        }\n\n        _ad = nad;\n      }\n    }\n\n    function within(index) {\n      return index > -1 && index < getCount();\n    }\n  };\n\n  DoubleScratchPad.newInstance = function () {\n    return new DoubleScratchPad();\n  };\n\n  return DoubleScratchPad;\n});","map":null,"metadata":{},"sourceType":"script"}