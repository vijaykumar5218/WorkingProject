{"version":3,"file":"mobile_src_app_modules_features_home_home_module_ts-shared-lib_components_alert_alert_compone-ddf55c-es2015.js","mappings":"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","sources":["./mobile/src/app/modules/features/home/home-routing.module.ts","./mobile/src/app/modules/features/home/home.module.ts","./mobile/src/app/modules/features/home/home.page.ts","./mobile/src/app/modules/features/landing/preferences-selection/preferences-selection-routing.module.ts","./mobile/src/app/modules/features/landing/preferences-selection/preferences-selection.module.ts","./mobile/src/app/modules/features/landing/preferences-selection/preferences-selection.page.ts","./shared-lib/components/alert/alert.component.ts","./shared-lib/components/benefits-selection/benefits-selection.module.ts","./shared-lib/components/benefits-selection/modal/before-starting/before-starting.component.ts","./shared-lib/components/benefits-selection/modal/component/benefits-banner/benefits-banner.component.ts","./shared-lib/components/benefits-selection/modal/nudge/nudge.component.ts","./shared-lib/components/coverages/consent-required/medical-consent/medical-consent.page.ts","./shared-lib/components/coverages/tpastream-connect/tpastream-connect.module.ts","./shared-lib/services/settings/constants/endpoints.ts","./shared-lib/services/settings/settings.service.ts","./mobile/src/app/modules/features/home/home.page.html","./mobile/src/app/modules/features/landing/preferences-selection/preferences-selection.page.html","./shared-lib/components/alert/alert.component.html","./shared-lib/components/benefits-selection/modal/before-starting/before-starting.component.html","./shared-lib/components/benefits-selection/modal/component/benefits-banner/benefits-banner.component.html","./shared-lib/components/benefits-selection/modal/nudge/nudge.component.html","./shared-lib/components/coverages/consent-required/medical-consent/medical-consent.page.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {HomePage} from './home.page';\nimport {InsightsComponent} from '@shared-lib/components/coverages/insights/insights.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomePage,\n  },\n  {\n    path: 'insight',\n    component: InsightsComponent,\n  },\n  {\n    path: 'financial-summary',\n    loadChildren: () =>\n      import('./financial-summary/financial-summary.module').then(\n        m => m.FinancialSummaryPageModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class HomePageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {HomePageRoutingModule} from './home-routing.module';\nimport {HomePage} from './home.page';\nimport {JourneysModule} from '@shared-lib/modules/journeys/journeys.module';\nimport {BenefitsSelectModule} from '../../../../../../shared-lib/components/benefits-selection/benefits-selection.module';\nimport {StatusModule} from '@shared-lib/modules/journeys/components/status/status.module';\nimport {NetWorthModule} from '@shared-lib/components/net-worth/net-worth.module';\nimport {MXWidgetModule} from '@shared-lib/components/mx-widget/mx-widget.module';\nimport {MedicalSpendingModule} from '@shared-lib/components/home/medical-spending/medical-spending.module';\nimport {MXErrorComponentModule} from '@shared-lib/components/mx-error/mxerror.module';\nimport {PreferenceSelectionModule} from '../landing/preferences-selection/preferences-selection.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    MXWidgetModule,\n    HomePageRoutingModule,\n    BenefitsSelectModule,\n    StatusModule,\n    NetWorthModule,\n    JourneysModule,\n    MedicalSpendingModule,\n    MXErrorComponentModule,\n    PreferenceSelectionModule\n  ],\n  declarations: [HomePage],\n})\nexport class HomePageModule {}\n","import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {Observable, Subscription} from 'rxjs';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport {HeaderFooterTypeService} from '@shared-lib/services/header-footer-type/headerFooterType.service';\nimport {JourneyResponse} from '@shared-lib/services/journey/models/journey.model';\nimport {JourneyService} from '@shared-lib/services/journey/journey.service';\nimport {HomeContent} from '@shared-lib/components/home/models/home-content.model';\nimport * as homeContent from '@shared-lib/constants/home/home-content.json';\nimport {OrangeMoneyService} from '@shared-lib/modules/orange-money/services/orange-money.service';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {AccountService} from '@shared-lib/services/account/account.service';\nimport {BenefitEnrollment} from '@shared-lib/services/benefits/models/benefits.model';\nimport {Participant} from '@shared-lib/services/account/models/accountres.model';\nimport {ModalController, ViewWillEnter, ViewWillLeave} from '@ionic/angular';\nimport {MXWidgetComponent} from '@shared-lib/components/mx-widget/mx-widget.component';\nimport {NetWorthComponent} from '@shared-lib/components/net-worth/net-worth.component';\nimport {WidgetType} from '@shared-lib/services/mx-service/models/widget-type.enum';\nimport {ActionOptions} from '@shared-lib/models/ActionOptions.model';\nimport { PreferenceSelectionPage} from '../landing/preferences-selection/preferences-selection.page'\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.page.html',\n  styleUrls: ['./home.page.scss'],\n})\nexport class HomePage\n  implements OnInit, OnDestroy, ViewWillEnter, ViewWillLeave {\n  readonly widgetType = WidgetType;\n  journeyResponse$: Observable<JourneyResponse>;\n  hasMXError = false;\n  firstLoad = true;\n  firstName = '';\n  actionOption: ActionOptions = {\n    headername: 'Home',\n    btnright: true,\n    displayLogo: true,\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n  @ViewChild('homeFinstrong') finstrongWidget: MXWidgetComponent;\n  @ViewChild(NetWorthComponent) netWorthWidget: NetWorthComponent;\n\n  private participantSubscription: Subscription;\n  benefitsEnrollment$: Observable<BenefitEnrollment>;\n\n  content: HomeContent = (homeContent as any).default;\n\n  constructor(\n    private headerFooterType: HeaderFooterTypeService,\n    private journeyService: JourneyService,\n    private orangeMoneyService: OrangeMoneyService,\n    private benefitsService: BenefitsService,\n    private accountService: AccountService,\n    private modalController:ModalController\n  ) {}\n\n  async ngOnInit() {\n    this.openPreference();\n    this.orangeMoneyService.getOrangeData();\n    this.openBenefitSelectionModal();\n    this.participantSubscription = this.accountService\n      .getParticipant()\n      .subscribe(async (data: Participant) => {\n        this.firstName = this.accountService.getDisplayNameOrFirst(data);\n      });\n    this.benefitsEnrollment$ = await this.benefitsService.getBenefitsEnrollment();\n  }\n\n  async ionViewWillEnter() {\n    this.journeyResponse$ = this.journeyService.fetchJourneys();\n\n    this.headerFooterType.publishType(\n      {\n        type: HeaderType.navbar,\n        actionOption: this.actionOption,\n      },\n      {type: FooterType.tabsnav}\n    );\n    this.benefitsService.setBenefitSummaryBackButton('settings');\n\n    if (!this.firstLoad) {\n      this.finstrongWidget.refreshWidget();\n      this.netWorthWidget.widget.refreshWidget();\n    }\n    this.firstLoad = false;\n  }\n\n  openBenefitSelectionModal() {\n    this.benefitsService.openBenefitsSelectionModalIfEnabled();\n  }\n\n  ionViewWillLeave() {\n    this.journeyResponse$ = undefined;\n  }\n\n  ngOnDestroy(): void {\n    this.participantSubscription.unsubscribe();\n  }\n  async openPreference(){\n    const modal = await this.modalController.create({\n      component: PreferenceSelectionPage,\n      componentProps: {fullscreen :true},\n      cssClass:'modal-fullscreen',\n      swipeToClose: false,\n    });\n   modal.present();\n  }  \n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {PreferenceSelectionPage} from './preferences-selection.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PreferenceSelectionPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PreferenceSelectionRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {IonicModule} from '@ionic/angular';\n\nimport {PreferenceSelectionRoutingModule} from './preferences-selection-routing.module';\n\nimport {PreferenceSelectionPage} from './preferences-selection.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PreferenceSelectionRoutingModule,\n  ],\n  declarations: [PreferenceSelectionPage],\n})\nexport class PreferenceSelectionModule {}\n","import {Component, HostListener, OnInit} from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport {SettingsService} from '@shared-lib/services/settings/settings.service';\nimport {PreferencesContent} from '@shared-lib/services/settings/models/settings.model';\n\n@Component({\n  selector: 'app-preference-selection',\n  templateUrl: './preferences-selection.page.html',\n  styleUrls: ['preferences-selection.page.scss'],\n})\nexport class PreferenceSelectionPage implements OnInit{\n  pageText: PreferencesContent;\n  @HostListener('window:popstate', ['$event'])\n  onPopState() {\n    this.closeDialog();\n  }\n  constructor(private settingService: SettingsService,\n    private modalController:ModalController){}\n\n  async ngOnInit() {\n    this.pageText = JSON.parse((await this.settingService.getPreferenceNudge()).PreferenceNudge);\n  }\n\n  closeDialog() {\n    this.modalController.dismiss();\n  }\n}","import {ModalController} from '@ionic/angular';\nimport {Component, Input} from '@angular/core';\nimport * as pageText from './constants/pageText.json';\n\ninterface SaveFunction {\n  (): Promise<boolean>;\n}\n\n@Component({\n  selector: 'app-alert',\n  templateUrl: './alert.component.html',\n  styleUrls: ['./alert.component.scss'],\n})\nexport class AlertComponent {\n  pageText = JSON.parse(JSON.stringify(pageText)).default;\n\n  @Input() public titleMessage: string;\n  @Input() public message: string;\n  @Input() public imageUrl: string = null;\n  @Input() public yesButtonTxt = this.pageText.buttons.yes;\n  @Input() public noButtonTxt = this.pageText.buttons.no;\n\n  public saveFunction: SaveFunction;\n  saving: boolean;\n  error: boolean;\n\n  constructor(private modalController: ModalController) {}\n\n  closeDialog(saved = false) {\n    this.modalController.dismiss({\n      saved: saved,\n    });\n  }\n\n  async closeDialogClicked(save: boolean) {\n    this.error = false;\n    if (save) {\n      this.saving = true;\n      if (this.saveFunction) {\n        const result = await this.saveFunction();\n        this.saving = false;\n        if (result) {\n          this.closeDialog(true);\n        } else {\n          this.error = true;\n        }\n      } else {\n        this.closeDialog();\n      }\n    } else {\n      this.closeDialog();\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {FormsModule} from '@angular/forms';\nimport {BenefitsBannerComponent} from './modal/component/benefits-banner/benefits-banner.component';\nimport {NudgeComponent} from './modal/nudge/nudge.component';\nimport {BeforeStartingComponent} from './modal/before-starting/before-starting.component';\nimport {BenefitsSelectionModalComponent} from './modal/modal.component';\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule],\n  declarations: [\n    BenefitsBannerComponent,\n    BenefitsSelectionModalComponent,\n    NudgeComponent,\n    BeforeStartingComponent,\n  ],\n  exports: [BenefitsBannerComponent],\n})\nexport class BenefitsSelectModule {}\n","import {Component, EventEmitter, Input, Output} from '@angular/core';\nimport {BeforeStartingModalContent} from '@shared-lib/services/benefits/models/benefits.model';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'benefits-selection-modal-before-starting',\n  templateUrl: './before-starting.component.html',\n  styleUrls: ['./before-starting.component.scss'],\n})\nexport class BeforeStartingComponent {\n  @Input() modalContent: BeforeStartingModalContent;\n  @Output() closeModal = new EventEmitter<void>();\n\n  constructor(private router: Router) {}\n\n  openSavvi() {\n    this.router.navigate(['savvi/enrollment-guidance']);\n    this.closeModal.emit();\n  }\n}\n","import {Component} from '@angular/core';\nimport {\n  BenefitEnrollment,\n  BenefitsHomeContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {Subscription} from 'rxjs';\nimport {EventTrackingService} from '@shared-lib/services/event-tracker/event-tracking.service';\n\n@Component({\n  selector: 'app-benefits-banner',\n  templateUrl: './benefits-banner.component.html',\n  styleUrls: ['./benefits-banner.component.scss'],\n})\nexport class BenefitsBannerComponent {\n  enrollmentBannerContent: BenefitsHomeContent;\n  isWeb: boolean;\n  benefitsEnrollment: BenefitEnrollment;\n  private subscription: Subscription = new Subscription();\n  displayBanner = true;\n\n  constructor(\n    private benefitsService: BenefitsService,\n    private sharedUtilityService: SharedUtilityService,\n    private eventTrackingService: EventTrackingService\n  ) {}\n\n  async ngOnInit() {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n    this.subscription.add(\n      (await this.benefitsService.getBenefitsEnrollment()).subscribe(data => {\n        this.benefitsEnrollment = data;\n      })\n    );\n    this.enrollmentBannerContent = await this.benefitsService.getBenefitsSelectionHomeContent();\n  }\n\n  openGuidelines() {\n    this.eventTrackingService.eventTracking({\n      eventName: 'CTAClick',\n      passThruAttributes: [\n        {\n          attributeName: 'subType',\n          attributeValue: 'open_enrollment_banner',\n        },\n        {\n          attributeName: 'Enrollment_user_status',\n          attributeValue: this.benefitsEnrollment.status,\n        },\n      ],\n    });\n    this.benefitsService.openGuidelines();\n  }\n\n  closeBenefitsBanner() {\n    this.displayBanner = false;\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","import {Component, Output, EventEmitter, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ModalController} from '@ionic/angular';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  BenefitEnrollment,\n  NudgeContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {Observable} from 'rxjs';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'benefits-selection-modal-nudge',\n  templateUrl: './nudge.component.html',\n  styleUrls: ['./nudge.component.scss'],\n})\nexport class NudgeComponent {\n  @Output() selectBenefits = new EventEmitter<void>();\n  @Input() content: NudgeContent;\n  @Input() nudgeContent: NudgeContent;\n  benefitsEnrollment$: Observable<BenefitEnrollment>;\n  isWeb: boolean;\n  constructor(\n    private modalController: ModalController,\n    private router: Router,\n    private benefitsService: BenefitsService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  async ngOnInit() {\n    this.benefitsEnrollment$ = await this.benefitsService.getBenefitsEnrollment();\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  goToSummaryDetails() {\n    if (this.isWeb) {\n      this.utilityService.setFullScreenModal(false);\n      this.modalController.dismiss();\n      this.router.navigateByUrl('/coverages/all-coverages/elections');\n    } else {\n      this.modalController.dismiss();\n      this.router.navigateByUrl('/settings/summary');\n      this.benefitsService.setBenefitSummaryBackButton('home');\n    }\n  }\n\n  emitSelect() {\n    this.selectBenefits.emit();\n  }\n}\n","import {Location} from '@angular/common';\nimport {Component, Input} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {LoadingController, ModalController} from '@ionic/angular';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {ConsentService} from '@shared-lib/services/consent/consent.service';\nimport {ConsentType} from '@shared-lib/services/consent/constants/consentType.enum';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport * as pageText from './constants/text-data.json';\n\n@Component({\n  selector: 'app-medical-consent',\n  templateUrl: './medical-consent.page.html',\n  styleUrls: ['./medical-consent.page.scss'],\n})\nexport class MedicalConsentPage {\n  @Input() back: boolean;\n  @Input() completion: () => void;\n  pageText: Record<string, string> = pageText;\n  contentData: [\n    {\n      disclosure_description_1: string;\n      disclosure_description_2: string;\n      disclosure_title: string;\n    }\n  ];\n  radioSelection = 'YES';\n  hasScrolledToBottom = false;\n  isWeb: boolean;\n\n  constructor(\n    private modalController: ModalController,\n    private consentService: ConsentService,\n    private loadingController: LoadingController,\n    private router: Router,\n    private benefitsService: BenefitsService,\n    private sharedUtilityService: SharedUtilityService,\n    private location: Location\n  ) {}\n\n  ngOnInit() {\n    this.isWeb = this.sharedUtilityService.getIsWeb();\n  }\n\n  async saveConsent() {\n    const loading = await this.loadingController.create({\n      translucent: true,\n    });\n    loading.present();\n\n    if (this.radioSelection === 'YES') {\n      await this.consentService.setConsent(ConsentType.MEDICAL, true);\n      this.consentService.getMedicalConsent(true);\n      if (this.completion) {\n        this.completion();\n      }\n    } else {\n      if (!this.back) {\n        if (this.isWeb) {\n          this.router.navigateByUrl('/coverages/all-coverages/plans');\n        } else {\n          this.router.navigateByUrl('/coverages/coverage-tabs/plans');\n          this.benefitsService.publishSelectedTab('plans');\n        }\n      } else {\n        this.location.back();\n      }\n    }\n    loading.dismiss();\n    this.modalController.dismiss();\n  }\n\n  async onScroll(event: any) {\n    if (this.hasScrolledToBottom) {\n      return;\n    }\n\n    const scrollElement = await event.target.getScrollElement();\n    const scrollHeight =\n      scrollElement.scrollHeight - scrollElement.clientHeight;\n    const currentScrollDepth = scrollElement.scrollTop;\n    const triggerDepth = (scrollHeight / 100) * 95;\n    if (currentScrollDepth > triggerDepth) {\n      this.hasScrolledToBottom = true;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {TPAStreamConnectPage} from './tpastream-connect.page';\nimport {ModalHeaderComponentModule} from '../../modal-header/modal-header.module';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, FormsModule, ModalHeaderComponentModule],\n  declarations: [TPAStreamConnectPage],\n  exports: [TPAStreamConnectPage],\n})\nexport class TPAStreamConnectPageModule {}\n","export const endpoints = {\n  settingsDisplayFlags: 'myvoyage/settings/displayflags',\n  getPreferenceNudge: 'myvoyage/ws/ers/content/section/myvoyage/home'\n};\n","import {Injectable} from '@angular/core';\nimport {SettingPreferences, SettingsDisplayFlags} from './models/settings.model';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {endpoints} from './constants/endpoints';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SettingsService {\n  private endpoints;\n  private displayFlag: SettingsDisplayFlags;\n  private preferencesContentPromise: Promise<SettingPreferences>\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.endpoints = this.utilityService.appendBaseUrlToEndpoints(endpoints);\n  }\n\n  async getSettingsDisplayFlags(\n    refresh = false\n  ): Promise<SettingsDisplayFlags> {\n    try {\n      if (!this.displayFlag || refresh) {\n        this.displayFlag = await this.baseService.get(\n          this.endpoints.settingsDisplayFlags\n        );\n      }\n    } catch (e) {\n      console.log(e);\n      this.displayFlag = {\n        displayContactLink: false,\n        suppressAppointment: false,\n      };\n    }\n    return this.displayFlag;\n  }\n  getPreferenceNudge():Promise<SettingPreferences>{\n    if (!this.preferencesContentPromise) {\n      this.preferencesContentPromise = this.baseService.get(\n        this.endpoints.getPreferenceNudge,\n      );\n    }\n    return this.preferencesContentPromise;\n  }\n}\n","export default \"<ion-grid class=\\\"p-0\\\">\\n  <ion-row class=\\\"full-width\\\">\\n    <app-mxerror></app-mxerror>\\n    <ion-col class=\\\"p-0\\\" size=\\\"12\\\" id=\\\"background-container\\\">\\n      <div id=\\\"welcome-header\\\">\\n        <h2>\\n          {{content.hi}} {{firstName}}!\\n        </h2>\\n        <app-medical-spending class=\\\"networth-web-view\\\"></app-medical-spending>\\n      </div>\\n      <ng-container *ngIf=\\\"benefitsEnrollment$ | async as benefitsEnrollment\\\">\\n        <app-benefits-banner\\n          *ngIf=\\\"benefitsEnrollment?.enrollmentWindowEnabled && benefitsEnrollment?.status != 'COMPLETED'\\\"\\n        ></app-benefits-banner\\n      ></ng-container>\\n      <app-net-worth tagName=\\\"mx-net-worth-home\\\"></app-net-worth>\\n      <app-medical-spending\\n        class=\\\"networth-mobile-view\\\"\\n        [forMobilePlansPage]=\\\"true\\\"\\n      ></app-medical-spending>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0\\\">\\n    <ion-col class=\\\"p-0\\\" size=\\\"12\\\">\\n      <div id=\\\"inner-container\\\">\\n        <ng-container *ngIf=\\\"journeyResponse$ | async as journeys\\\">\\n          <journeys-list\\n            *ngIf=\\\"journeys?.recommended?.length > 0\\\"\\n            headerText=\\\"{{journeys?.recommended.length > 1 ? content.journeyHeader : content.journeyHeader.slice(0, content.journeyHeader.length - 1) }}\\\"\\n            [journeys]=\\\"journeys.recommended\\\"\\n            idPrefix=\\\"recommended\\\"\\n          ></journeys-list>\\n        </ng-container>\\n      </div>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0 finstrong-header\\\">\\n    <ion-col class=\\\"p-0\\\">\\n      <ion-label class=\\\"card-header\\\">{{content.finstrongHeader}}</ion-label>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row class=\\\"p-0 finstrong-section\\\">\\n    <ion-col class=\\\"p-0\\\">\\n      <ion-card class=\\\"finstrong-card\\\">\\n        <app-mx-widget\\n          [widgetType]=\\\"widgetType.FINSTRONG_MINI\\\"\\n          [height]=\\\"'400px'\\\"\\n          [tagName]=\\\"'mx-finstrong-mini'\\\"\\n          #homeFinstrong\\n        ></app-mx-widget>\\n        <ion-button\\n          id=\\\"view-finstrong\\\"\\n          class=\\\"font-18\\\"\\n          name=\\\"sign-out\\\"\\n          shape=\\\"round\\\"\\n          expand=\\\"block\\\"\\n          color=\\\"btncolor\\\"\\n          fill=\\\"outline\\\"\\n          routerLink=\\\"/home/financial-summary\\\"\\n        >\\n          {{content.completeFinancialSummary}}\\n        </ion-button>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-grid>\\n  <ion-row>\\n    <ion-col>\\n      <span\\n      class=\\\"x-button\\\"\\n      id=\\\"close-btn\\\"\\n      ><img src=\\\"assets/icon/exit.svg\\\" alt=\\\"Close dialog\\\"\\n      (click)=\\\"closeDialog()\\\"/></span>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"header\\\">{{pageText.header}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"sub-header\\\">{{pageText.subHeader}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col class=\\\"image\\\">\\n      <img src=\\\"assets/icon/preferenceSelectionImage.svg\\\" alt=\\\"\\\" />\\n    </ion-col>\\n  </ion-row>\\n  <ng-container *ngFor=\\\"let text of pageText.preferenceOptions\\\">\\n    <ion-row class=\\\"toggle-row\\\">\\n      <ion-col>\\n        <ion-text class=\\\"preference-selection-text\\\"\\n          >{{text}}</ion-text\\n        >\\n      </ion-col>\\n      <ion-col class=\\\"toggle-col\\\">\\n        <ion-toggle\\n          id=\\\"notification-toggle\\\"\\n          class=\\\"preference-toggle\\\"\\n        ></ion-toggle>\\n      </ion-col>\\n    </ion-row>\\n  </ng-container>\\n  <ion-row class=\\\"save-button-row\\\">\\n    <ion-col>\\n      <ion-button\\n      color=\\\"btncolor\\\"\\n      shape=\\\"round\\\"\\n      expand=\\\"block\\\"\\n      automation=\\\"preferenceSaveButton\\\"\\n      >{{pageText.saveButton }}</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-button\\n      class=\\\"secondary\\\"\\n      color=\\\"white\\\"\\n      shape=\\\"round\\\"\\n      expand=\\\"block\\\"\\n      id=\\\"preferenceNotNowButton\\\"\\n      >{{pageText.notnowButton }}</ion-button>\\n    </ion-col>\\n  </ion-row>\\n  <ion-row>\\n    <ion-col>\\n      <ion-text class=\\\"legal-text\\\">{{pageText.legalText}}</ion-text>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-card class=\\\"alert-dialog\\\">\\n  <ion-card-header>\\n    <ion-card-title>\\n      <span\\n        class=\\\"x-button\\\"\\n        tabindex=\\\"0\\\"\\n        (click)=\\\"closeDialogClicked(false)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(false)\\\"\\n        id=\\\"close-btn\\\"\\n        ><img src=\\\"assets/icon/exit.svg\\\" alt=\\\"Close dialog\\\"/></span\\n    ></ion-card-title>\\n  </ion-card-header>\\n  <ion-card-content>\\n    <img\\n      [hidden]=\\\"!imageUrl\\\"\\n      class=\\\"image-center\\\"\\n      [src]=\\\"imageUrl\\\"\\n      alt=\\\"warning\\\"\\n    />\\n    <div [hidden]=\\\"imageUrl\\\" class=\\\"spacer\\\"></div>\\n    <p class=\\\"title-message\\\">{{ titleMessage }}</p>\\n    <p class=\\\"message\\\">{{ message }}</p>\\n    <div class=\\\"error\\\" [hidden]=\\\"!error\\\">\\n      An error occurred while saving. Please try again.\\n    </div>\\n    <div>\\n      <ion-button\\n        (click)=\\\"closeDialogClicked(true)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(true)\\\"\\n        class=\\\"font-18 save-button\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        [attr.disabled]=\\\"saving\\\"\\n        id=\\\"yes-btn\\\"\\n      >\\n        <ion-spinner [hidden]=\\\"!saving\\\" class=\\\"save-spinner\\\"></ion-spinner>\\n        {{ yesButtonTxt }}\\n      </ion-button>\\n      <ion-button\\n        (click)=\\\"closeDialogClicked(false)\\\"\\n        (keyup.enter)=\\\"closeDialogClicked(false)\\\"\\n        class=\\\"cancel-button\\\"\\n        [attr.disabled]=\\\"saving\\\"\\n        id=\\\"no-btn\\\"\\n      >\\n        {{ noButtonTxt }}\\n      </ion-button>\\n    </div>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<div class=\\\"model-content\\\">\\n  <p class=\\\"header\\\">{{ modalContent?.header }}</p>\\n  <section>\\n    <ul *ngFor=\\\"let content of modalContent?.descList\\\">\\n      <li>{{ content }}</li>\\n    </ul>\\n    <ion-text class=\\\"descNote\\\">{{ modalContent?.descNote }}</ion-text>\\n  </section>\\n  <br />\\n  <ion-text>{{ modalContent?.usefulInfoHeader }}</ion-text>\\n  <section>\\n    <ul *ngFor=\\\"let content of modalContent?.usefulInfoDescList\\\">\\n      <li>{{ content }}</li>\\n    </ul>\\n  </section>\\n  <br />\\n  <ion-button (click)=\\\"openSavvi()\\\" id=\\\"open-savvi\\\">{{\\n    modalContent?.buttonLabel\\n  }}</ion-button>\\n</div>\\n\";","export default \"<div\\n  [ngClass]=\\\"isWeb ? 'webBanner' : 'mobileBanner'\\\"\\n  *ngIf=\\\"benefitsEnrollment\\\"\\n>\\n  <ng-container *ngIf=\\\"benefitsEnrollment?.status != 'IN_PROGRESS'\\\">\\n    <ion-row id=\\\"openGuidelines1\\\" *ngIf=\\\"displayBanner\\\">\\n      <ion-card>\\n        <div class=\\\"banner-content\\\">\\n          <ion-row class=\\\"banner-row-content\\\">\\n            <ion-col (click)=\\\"openGuidelines()\\\" class=\\\"calender-block\\\">\\n              <img\\n                [src]=\\\"enrollmentBannerContent?.banner.icon\\\"\\n                [alt]=\\\"enrollmentBannerContent?.banner.altText\\\"\\n                class=\\\"calender-svg\\\"\\n              />\\n            </ion-col>\\n            <ion-col\\n              (click)=\\\"openGuidelines()\\\"\\n              class=\\\"enrollment-banner-content\\\"\\n            >\\n              <ion-row class=\\\"time-to-select-row\\\">\\n                <ion-col>\\n                  <ion-text class=\\\"time-to-select\\\">\\n                    {{ enrollmentBannerContent?.banner.header }}\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text class=\\\"enrollment-banner-content-text\\\">\\n                    {{ enrollmentBannerContent?.banner.content }}\\n                  </ion-text>\\n                </ion-col>\\n                <ion-col class=\\\"mobile-calender-block\\\">\\n                  <img\\n                    [src]=\\\"enrollmentBannerContent?.banner.icon\\\"\\n                    [alt]=\\\"enrollmentBannerContent?.banner.altText\\\"\\n                    class=\\\"calender-svg\\\"\\n                  />\\n                </ion-col>\\n              </ion-row>\\n            </ion-col>\\n\\n            <ion-col class=\\\"exit-block\\\">\\n              <img\\n                src=\\\"assets/icon/exitWhite.svg\\\"\\n                alt=\\\"exit\\\"\\n                class=\\\"exit-icon\\\"\\n                (click)=\\\"closeBenefitsBanner()\\\"\\n                id=\\\"close-banner1\\\"\\n              />\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </ion-card>\\n    </ion-row>\\n  </ng-container>\\n\\n  <ng-container *ngIf=\\\"benefitsEnrollment?.status == 'IN_PROGRESS'\\\">\\n    <ion-row id=\\\"openGuidelines2\\\" *ngIf=\\\"displayBanner\\\">\\n      <ion-card>\\n        <div class=\\\"banner-content\\\">\\n          <ion-row class=\\\"banner-row-content\\\">\\n            <ion-col (click)=\\\"openGuidelines()\\\" class=\\\"calender-block\\\">\\n              <img\\n                [src]=\\\"enrollmentBannerContent?.bannerInProgress.icon\\\"\\n                [alt]=\\\"enrollmentBannerContent?.bannerInProgress.altText\\\"\\n                class=\\\"calender-img\\\"\\n              />\\n            </ion-col>\\n\\n            <ion-col\\n              (click)=\\\"openGuidelines()\\\"\\n              class=\\\"enrollment-banner-content\\\"\\n            >\\n              <ion-row class=\\\"time-to-select-row\\\">\\n                <ion-col>\\n                  <ion-text class=\\\"time-to-select\\\">\\n                    {{ enrollmentBannerContent?.bannerInProgress.header }}\\n                  </ion-text>\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n                <ion-col>\\n                  <ion-text class=\\\"enrollment-banner-content-text\\\">\\n                    {{ enrollmentBannerContent?.bannerInProgress.content }}\\n                  </ion-text>\\n                </ion-col>\\n                <ion-col class=\\\"mobile-calender-block\\\">\\n                  <img\\n                    [src]=\\\"enrollmentBannerContent?.bannerInProgress.icon\\\"\\n                    [alt]=\\\"enrollmentBannerContent?.bannerInProgress.altText\\\"\\n                    class=\\\"calender-img\\\"\\n                  />\\n                </ion-col>\\n              </ion-row>\\n            </ion-col>\\n\\n            <ion-col class=\\\"exit-block\\\">\\n              <img\\n                src=\\\"assets/icon/exitWhite.svg\\\"\\n                alt=\\\"exit\\\"\\n                class=\\\"exit-icon\\\"\\n                (click)=\\\"closeBenefitsBanner()\\\"\\n                id=\\\"close-banner2\\\"\\n              />\\n            </ion-col>\\n          </ion-row>\\n        </div>\\n      </ion-card>\\n    </ion-row>\\n  </ng-container>\\n</div>\\n\";","export default \"<img src=\\\"{{ content?.icon }}\\\" [alt]=\\\"content?.altText || ''\\\" />\\n<ion-row *ngIf=\\\"benefitsEnrollment$ | async as benefitsEnrollment\\\">\\n  <ion-col>\\n    <div *ngIf=\\\"benefitsEnrollment?.status != 'IN_PROGRESS'\\\">\\n      <ion-text class=\\\"lets-do-this\\\">\\n        {{ content?.header }}\\n      </ion-text>\\n\\n      <ion-text class=\\\"time-to-select\\\">\\n        {{ content?.desc1 }}\\n      </ion-text>\\n\\n      <ion-text>\\n        {{ content?.desc2 }}\\n      </ion-text>\\n    </div>\\n\\n    <div *ngIf=\\\"benefitsEnrollment?.status == 'IN_PROGRESS'\\\">\\n      <ion-text class=\\\"lets-do-this\\\">\\n        {{ nudgeContent?.header }}\\n      </ion-text>\\n\\n      <ion-text class=\\\"time-to-select\\\">\\n        {{ nudgeContent?.desc }}\\n      </ion-text>\\n    </div>\\n  </ion-col>\\n</ion-row>\\n\\n<ion-button id=\\\"open-nudge\\\" (click)=\\\"emitSelect()\\\">{{\\n  content?.buttonText\\n}}</ion-button>\\n\\n<a\\n  id=\\\"open-summary-details\\\"\\n  href=\\\"javascript:void(0)\\\"\\n  (click)=\\\"goToSummaryDetails()\\\"\\n>\\n  {{ content?.linkText }}\\n</a>\\n\";","export default \"<app-modal-header [headerText]=\\\"pageText.authToDisclose\\\"></app-modal-header>\\n<ion-content [scrollEvents]=\\\"true\\\" (ionScroll)=\\\"onScroll($event)\\\">\\n  <div\\n    class=\\\"main-content\\\"\\n    [ngClass]=\\\"isWeb? 'web-main-content':'mobile-main-content'\\\"\\n  >\\n    <div *ngFor=\\\"let part of contentData; let i = index\\\">\\n      <h6>{{part?.disclosure_title}}</h6>\\n      <p [innerHTML]=\\\"part?.disclosure_description_1\\\"></p>\\n      <p [innerHTML]=\\\"part?.disclosure_description_2\\\"></p>\\n    </div>\\n  </div>\\n  <div class=\\\"options\\\" [ngClass]=\\\"isWeb? 'web-options':'mobile-options'\\\">\\n    <ion-row class=\\\"header\\\">{{pageText.doYouAuth}}</ion-row>\\n    <ion-row>\\n      <ion-radio-group mode=\\\"md\\\" [(ngModel)]=\\\"radioSelection\\\">\\n        <ion-row>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-radio\\n                value=\\\"NO\\\"\\n                [attr.disabled]=\\\"hasScrolledToBottom ? null : ''\\\"\\n              ></ion-radio>\\n              <ion-label>{{pageText.no}}</ion-label>\\n            </ion-item>\\n          </ion-col>\\n          <ion-col>\\n            <ion-item lines=\\\"none\\\">\\n              <ion-radio\\n                value=\\\"YES\\\"\\n                [attr.disabled]=\\\"hasScrolledToBottom ? null : ''\\\"\\n              ></ion-radio>\\n              <ion-label>{{pageText.yes}}</ion-label>\\n            </ion-item>\\n          </ion-col>\\n        </ion-row>\\n      </ion-radio-group>\\n    </ion-row>\\n    <ion-row>\\n      <ion-button\\n        id=\\\"save-button\\\"\\n        (click)=\\\"saveConsent()\\\"\\n        class=\\\"font-18 save-button\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n        [attr.disabled]=\\\"hasScrolledToBottom ? null : ''\\\"\\n      >\\n        {{pageText.submit}}\\n      </ion-button>\\n    </ion-row>\\n  </div>\\n</ion-content>\\n\";"],"names":[],"sourceRoot":"webpack:///"}