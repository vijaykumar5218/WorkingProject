{"version":3,"file":"mobile_src_app_modules_features_coverages_coverage-tabs_coverage-tabs_module_ts-es2015.js","mappings":"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","sources":["./mobile/src/app/modules/features/coverages/coverage-tabs/coverage-tabs-routing.module.ts","./mobile/src/app/modules/features/coverages/coverage-tabs/coverage-tabs.module.ts","./mobile/src/app/modules/features/coverages/coverage-tabs/coverage-tabs.page.ts","./shared-lib/components/coverages/insights/components/screening-nudge/screening-nudge.component.ts","./shared-lib/components/coverages/insights/insights-routing.module.ts","./shared-lib/components/coverages/insights/insights.component.module.ts","./shared-lib/components/coverages/tpaclaims/tpaclaims.component-routing.module.ts","./shared-lib/components/coverages/tpaclaims/tpaclaims.component.module.ts","./shared-lib/components/coverages/tpaclaims/tpaclaims.component.ts","./shared-lib/components/coverages/tpaclaims/tpaproviders/tpaproviders.component.module.ts","./shared-lib/components/coverages/tpaclaims/tpaproviders/tpaproviders.component.ts","./shared-lib/components/coverages/tpaclaims/tpawarning/tpawarning.component.ts","./shared-lib/components/got-consent/got-consent.component.ts","./shared-lib/components/got-consent/got-consent.module.ts","./shared-lib/services/tpa-stream/models/tpa.model.ts","./mobile/src/app/modules/features/coverages/coverage-tabs/coverage-tabs.page.html","./shared-lib/components/coverages/insights/components/screening-nudge/screening-nudge.component.html","./shared-lib/components/coverages/tpaclaims/tpaclaims.component.html","./shared-lib/components/coverages/tpaclaims/tpaproviders/tpaproviders.component.html","./shared-lib/components/coverages/tpaclaims/tpawarning/tpawarning.component.html","./shared-lib/components/got-consent/got-consent.component.html"],"sourcesContent":["import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {InsightsComponent} from '@shared-lib/components/coverages/insights/insights.component';\nimport {CoverageTabsPage} from './coverage-tabs.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CoverageTabsPage,\n\n    children: [\n      {\n        path: 'insights',\n        component: InsightsComponent,\n      },\n      {\n        path: 'tpaclaims',\n        loadChildren: () =>\n          import(\n            '@shared-lib/components/coverages/tpaclaims/tpaclaims.component.module'\n          ).then(m => m.TPAClaimsComponentModule),\n      },\n      {\n        path: 'claims',\n        loadChildren: () =>\n          import(\n            '@shared-lib/components/coverages/plan-tabs/plan-transactions/plan-transactions.module'\n          ).then(m => m.PlanTransactionsModule),\n      },\n      {\n        path: 'plans',\n        loadChildren: () =>\n          import('@shared-lib/components/coverages/plans/plans.module').then(\n            m => m.PlansPageModule\n          ),\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class CoverageTabsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {CoverageTabsPageRoutingModule} from './coverage-tabs-routing.module';\nimport {CoverageTabsPage} from './coverage-tabs.page';\nimport {NoBenefitsComponentModule} from '@shared-lib/components/coverages/benefit-elections/no-benefits/no-benefits.module';\nimport {InfoModalComponent} from '@shared-lib/components/coverages/insights/info-modal/info-modal.component';\nimport {InsightsComponentModule} from '@shared-lib/components/coverages/insights/insights.component.module';\nimport {TPAClaimsComponentModule} from '@shared-lib/components/coverages/tpaclaims/tpaclaims.component.module';\nimport {ConsentRequiredComponentModule} from '@shared-lib/components/coverages/consent-required/consent-required.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    CoverageTabsPageRoutingModule,\n    NoBenefitsComponentModule,\n    ConsentRequiredComponentModule,\n    InsightsComponentModule,\n    TPAClaimsComponentModule,\n  ],\n  declarations: [CoverageTabsPage, InfoModalComponent],\n  exports: [InfoModalComponent],\n  providers: [],\n})\nexport class CoverageTabsPageModule {}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FooterTypeService} from '@shared-lib/modules/footer/services/footer-type/footer-type.service';\nimport {FooterType} from '@shared-lib/modules/footer/constants/footerType.enum';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\nimport {HeaderTypeService} from '@shared-lib/services/header-type/header-type.service';\nimport {SubHeaderTab} from 'shared-lib/models/tab-sub-header.model';\nimport * as pageText from '@shared-lib/components/coverages/constants/text-data.json';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {AccessService} from '@shared-lib/services/access/access.service';\nimport {ActionOptions} from '@shared-lib/models/ActionOptions.model';\n\n@Component({\n  selector: 'app-coverage-tabs',\n  templateUrl: './coverage-tabs.page.html',\n  styleUrls: ['./coverage-tabs.page.scss'],\n})\nexport class CoverageTabsPage implements OnInit, OnDestroy {\n  tabs: SubHeaderTab[] = [];\n  pageText: Record<string, string> = pageText;\n  actionOption: ActionOptions = {\n    headername: this.pageText.headerLable,\n    btnright: true,\n    buttonRight: {\n      name: '',\n      link: this.pageText.rightLink,\n    },\n  };\n  selectedTab = 'insights';\n\n  private selectedTabSubscription;\n\n  constructor(\n    private headerType: HeaderTypeService,\n    private footerType: FooterTypeService,\n    private router: Router,\n    private benefitsService: BenefitsService,\n    private accessService: AccessService\n  ) {}\n\n  ngOnInit() {\n    this.managingTabs();\n  }\n\n  ionViewWillEnter() {\n    this.footerType.publish({\n      type: FooterType.tabsnav,\n      selectedTab: 'coverages',\n    });\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n\n    this.selectedTabSubscription = this.benefitsService\n      .getSelectedTab$()\n      .subscribe(tab => {\n        this.selectedTab = tab;\n      });\n  }\n\n  handleClick(selectedTab: SubHeaderTab) {\n    this.selectedTab = selectedTab.link;\n  }\n\n  ngOnDestroy(): void {\n    this.selectedTabSubscription.unsubscribe();\n  }\n\n  async managingTabs() {\n    const {\n      enableBST,\n      enableTPA,\n    } = await this.accessService.checkMyvoyageAccess();\n\n    if (enableTPA === 'Y') {\n      this.selectedTab = 'insights';\n      this.tabs.push({\n        label: this.pageText.insights,\n        link: 'insights',\n      });\n\n      this.tabs.push({\n        label: this.pageText.myClaims,\n        link: 'tpaclaims',\n      });\n    } else if (enableBST === 'Y') {\n      this.selectedTab = 'insights';\n      this.tabs.push({\n        label: this.pageText.insights,\n        link: 'insights',\n      });\n      this.tabs.push({\n        label: this.pageText.myClaims,\n        link: 'claims',\n      });\n    } else {\n      this.selectedTab = 'plans';\n    }\n\n    this.tabs.push({\n      label: this.pageText.plans,\n      link: 'plans',\n    });\n    this.routeToSelectedTab();\n  }\n\n  routeToSelectedTab() {\n    if (this.selectedTab == 'tpaclaims') {\n      this.router.navigateByUrl('/coverages/coverage-tabs/tpaclaims');\n    } else if (this.selectedTab == 'claims') {\n      this.router.navigateByUrl('/coverages/coverage-tabs/claims');\n    } else if (this.selectedTab == 'insights') {\n      this.router.navigateByUrl('/coverages/coverage-tabs/insights');\n    } else {\n      this.router.navigateByUrl('/coverages/coverage-tabs/plans');\n    }\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {BenefitsService} from '../../../../../services/benefits/benefits.service';\nimport {PrevCareContent} from '../../../../../services/benefits/models/noBenefit.model';\nimport {SharedUtilityService} from '../../../../../services/utility/utility.service';\n\n@Component({\n  selector: 'app-screening-nudge',\n  templateUrl: './screening-nudge.component.html',\n  styleUrls: ['./screening-nudge.component.scss'],\n})\nexport class ScreeningNudgeComponent implements OnInit {\n  @Input() prevCareKey: string;\n  content: PrevCareContent;\n  isWeb = false;\n\n  constructor(\n    private benefitsService: BenefitsService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.benefitsService.getNoBenefitContents().then(benContent => {\n      const contentJson = benContent[this.prevCareKey];\n      if (contentJson) {\n        this.content = JSON.parse(contentJson);\n      }\n    });\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {InsightsComponent} from './insights.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InsightsComponent,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InsightsPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {InsightsComponent} from './insights.component';\nimport {ConsentRequiredComponentModule} from '@shared-lib/components/coverages/consent-required/consent-required.module';\nimport {InsightsPageRoutingModule} from './insights-routing.module';\nimport {MedDisclaimerModule} from '../med-disclaimer/med-disclaimer.module';\nimport {LoadingComponentModule} from '@shared-lib/components/loading/loading.module';\nimport {ScreeningNudgeComponent} from './components/screening-nudge/screening-nudge.component';\nimport {HSAStoreNudgeComponentModule} from '@shared-lib/components/hsastore-nudge/hsastore-nudge.module';\nimport {GotConsentComponentModule} from '@shared-lib/components/got-consent/got-consent.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConsentRequiredComponentModule,\n    InsightsPageRoutingModule,\n    MedDisclaimerModule,\n    LoadingComponentModule,\n    HSAStoreNudgeComponentModule,\n    GotConsentComponentModule,\n  ],\n  declarations: [InsightsComponent, ScreeningNudgeComponent],\n  exports: [InsightsComponent],\n})\nexport class InsightsComponentModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\nimport {TPAClaimsComponent} from '@shared-lib/components/coverages/tpaclaims/tpaclaims.component';\nimport {TPAProvidersComponent} from './tpaproviders/tpaproviders.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: TPAClaimsComponent,\n    children: [\n      {\n        path: 'tpaproviders',\n        component: TPAProvidersComponent,\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class TPAClaimsComponentRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {ConsentRequiredComponentModule} from '@shared-lib/components/coverages/consent-required/consent-required.module';\nimport {TPAClaimsComponent} from './tpaclaims.component';\nimport {PlanTransactionsComponentModule} from '../plan-tabs/plan-transactions/plan-transactions-component.module';\nimport {TPAClaimsComponentRoutingModule} from './tpaclaims.component-routing.module';\nimport {TPAProvidersComponentModule} from './tpaproviders/tpaproviders.component.module';\nimport {LoadingComponentModule} from '@shared-lib/components/loading/loading.module';\nimport {TPAWarningComponent} from './tpawarning/tpawarning.component';\nimport {TPAStreamConnectPageModule} from '../tpastream-connect/tpastream-connect.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ConsentRequiredComponentModule,\n    PlanTransactionsComponentModule,\n    TPAClaimsComponentRoutingModule,\n    TPAProvidersComponentModule,\n    LoadingComponentModule,\n    TPAStreamConnectPageModule,\n  ],\n  declarations: [TPAClaimsComponent, TPAWarningComponent],\n  exports: [TPAClaimsComponent],\n})\nexport class TPAClaimsComponentModule {}\n","import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {TPAStreamService} from '../../../services/tpa-stream/tpastream.service';\nimport {\n  TPAClaimsData,\n  TPAWarning,\n  TPAWarningType,\n} from '../../../services/tpa-stream/models/tpa.model';\nimport {NameCategory} from '../models/chart.model';\nimport {Subscription} from 'rxjs';\nimport {NavigationEnd, Router} from '@angular/router';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {ViewWillEnter} from '@ionic/angular';\nimport {delay, filter} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-tpaclaims',\n  templateUrl: './tpaclaims.component.html',\n  styleUrls: ['./tpaclaims.component.scss'],\n})\nexport class TPAClaimsComponent implements OnInit, OnDestroy, ViewWillEnter {\n  isWeb = false;\n  loading = true;\n  tpaData: TPAClaimsData;\n  notConnected = true;\n  claims: NameCategory[];\n  warnings: TPAWarning[] = [];\n  subscription: Subscription;\n  @ViewChild('topmostElement', {read: ElementRef}) topmostElement: ElementRef;\n\n  constructor(\n    private tpaStreamService: TPAStreamService,\n    private router: Router,\n    private utilityService: SharedUtilityService\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  async ngOnInit() {\n    this.subscription = this.tpaStreamService\n      .getTPAData()\n      .subscribe((tpaData: TPAClaimsData) => {\n        this.tpaData = tpaData;\n        this.checkForErrors();\n        setTimeout(() => {\n          this.loading = false;\n        }, 250);\n      });\n    this.subscription.add(\n      this.tpaStreamService.tpaDataReload$.subscribe(() => {\n        this.loading = true;\n      })\n    );\n  }\n\n  ionViewWillEnter(): void {\n    this.scrollToTop();\n  }\n\n  scrollToTop() {\n    if (this.isWeb) {\n      const routerSubscription = this.router.events\n        .pipe(\n          filter(event => event instanceof NavigationEnd),\n          delay(100)\n        )\n        .subscribe(() => {\n          this.utilityService.scrollToTop(this.topmostElement);\n        });\n      this.subscription.add(routerSubscription);\n    }\n  }\n\n  checkForErrors() {\n    this.warnings = [];\n    this.tpaData.carriers.forEach(car => {\n      if (car.crawlCount < 1) {\n        this.warnings.push({\n          carrier: car.carrierName,\n          warningType: TPAWarningType.IN_PROCCESS,\n        });\n      } else if (car.loginProblem != 'valid') {\n        this.warnings.push({\n          carrier: car.carrierName,\n          errorMessage: car.loginMessage,\n          warningType: TPAWarningType.CONNECTION_ERROR,\n        });\n      }\n    });\n  }\n\n  manageProviders() {\n    if (this.isWeb) {\n      this.router.navigateByUrl('coverages/all-coverages/tpaclaims/providers');\n    } else {\n      this.router.navigateByUrl('coverages/coverage-tabs/tpaproviders');\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {TPAProvidersComponent} from './tpaproviders.component';\nimport {LoadingComponentModule} from '@shared-lib/components/loading/loading.module';\n\n@NgModule({\n  imports: [CommonModule, FormsModule, IonicModule, LoadingComponentModule],\n  declarations: [TPAProvidersComponent],\n  exports: [TPAProvidersComponent],\n})\nexport class TPAProvidersComponentModule {}\n","import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ModalController} from '@ionic/angular';\nimport {AlertComponent} from '@shared-lib/components/alert/alert.component';\nimport {TPAStreamService} from '@shared-lib/services/tpa-stream/tpastream.service';\nimport {\n  TPAClaimsData,\n  TPACarrier,\n} from '@shared-lib/services/tpa-stream/models/tpa.model';\nimport * as pageText from './constants/text-data.json';\nimport {Subscription} from 'rxjs';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'app-tpaproviders',\n  templateUrl: './tpaproviders.component.html',\n  styleUrls: ['./tpaproviders.component.scss'],\n})\nexport class TPAProvidersComponent implements OnInit, OnDestroy {\n  isWeb = false;\n  pageText: Record<string, string> = pageText;\n  editing = false;\n  carriers: TPACarrier[];\n  memberId: number;\n  private subscription: Subscription;\n\n  constructor(\n    private modalController: ModalController,\n    private router: Router,\n    private tpaStreamService: TPAStreamService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.isWeb = this.utilityService.getIsWeb();\n  }\n\n  ngOnInit() {\n    this.loadData();\n  }\n\n  loadData() {\n    this.subscription = this.tpaStreamService\n      .getTPAData()\n      .subscribe((tpaData: TPAClaimsData) => {\n        this.memberId = tpaData.memberId;\n        this.carriers = tpaData.carriers;\n      });\n  }\n\n  goBack() {\n    if (this.isWeb) {\n      this.router.navigateByUrl('coverages/all-coverages/tpaclaims');\n    } else {\n      this.router.navigateByUrl('coverages/coverage-tabs/tpaclaims');\n    }\n  }\n\n  addCarrier() {\n    this.tpaStreamService.openTPAConnect();\n  }\n\n  async revoke(policyHolderId: number, carrierName: string) {\n    const modal = await this.modalController.create({\n      component: AlertComponent,\n      cssClass: 'modal-not-fullscreen',\n      swipeToClose: false,\n      componentProps: {\n        titleMessage:\n          this.pageText.areYouSure + carrierName + this.pageText.qmark,\n        yesButtonTxt: this.pageText.revoke,\n        noButtonTxt: this.pageText.cancel,\n        saveFunction: async (): Promise<boolean> => {\n          return new Promise(res => {\n            this.tpaStreamService\n              .revokeCarrier(policyHolderId, this.memberId)\n              .then(result => {\n                if (result) {\n                  this.carriers = null;\n                  this.tpaStreamService.getTPAData(true);\n                }\n                res(result);\n              })\n              .catch(() => {\n                res(false);\n              });\n          });\n        },\n      },\n    });\n    return modal.present();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {Component, Input} from '@angular/core';\nimport {\n  TPAWarning,\n  TPAWarningType,\n} from '../../../../services/tpa-stream/models/tpa.model';\nimport * as pageText from './constants/text-data.json';\n\n@Component({\n  selector: 'app-tpawarning',\n  templateUrl: './tpawarning.component.html',\n  styleUrls: ['./tpawarning.component.scss'],\n})\nexport class TPAWarningComponent {\n  pageText: Record<string, string> = pageText;\n  warnType = TPAWarningType;\n  @Input() warning: TPAWarning;\n}\n","import {\n  Component,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {ConsentService} from '@shared-lib/services/consent/consent.service';\nimport {NoBenefitContent} from '@shared-lib/services/benefits/models/noBenefit.model';\nimport {SharedUtilityService} from '../../services/utility/utility.service';\nimport {Subscription} from 'rxjs';\n\ninterface ThankYouAuthContent {\n  title: string;\n  message: string;\n}\n\n@Component({\n  selector: 'app-got-consent',\n  templateUrl: './got-consent.component.html',\n  styleUrls: ['./got-consent.component.scss'],\n})\nexport class GotConsentComponent implements OnInit, OnDestroy {\n  isWeb = false;\n  show = true;\n  content: ThankYouAuthContent;\n  subscription: Subscription;\n  @Output() visibilityChanged = new EventEmitter<boolean>();\n\n  constructor(\n    private benefitsService: BenefitsService,\n    private consentService: ConsentService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.subscription = this.consentService.justGaveConsent.subscribe(\n      (justGave: boolean) => {\n        this.show = justGave;\n        this.visibilityChanged.emit(this.show);\n      }\n    );\n    this.benefitsService\n      .getNoBenefitContents()\n      .then((benContent: NoBenefitContent) => {\n        this.content = JSON.parse(benContent.Insights_ThankYouforAuth_Banner);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {GotConsentComponent} from './got-consent.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [GotConsentComponent],\n  exports: [GotConsentComponent],\n})\nexport class GotConsentComponentModule {}\n","import {\n  GroupingCategoryDetails,\n  NameCategory,\n} from '../../../components/coverages/models/chart.model';\n\nexport interface TPACarrier {\n  carrierName: string;\n  carrierId: number;\n  payerId: number;\n  logoUrl: string;\n  connectionStatus: string;\n  loginProblem: string;\n  loginMessage?: string;\n  crawlStatus: string;\n  crawlCount: number;\n  totalOutOfPocketAmount: number;\n  claimsCount: number;\n}\n\nexport interface TPAClaimsData {\n  carriers: TPACarrier[];\n  claims: NameCategory[];\n  groupingCategoryDetails: GroupingCategoryDetails;\n  memberId: number;\n  groupingClaimsByYear?: GroupingClaimsByYear;\n}\n\nexport interface GroupingClaimsByYear {\n  [key: string]: GroupedClaims;\n}\n\nexport interface GroupedClaims {\n  claimTotalCount: number;\n  inNetworkTotalCount: number;\n  outNetworkTotalCount: number;\n  outOfPocketAmountTotal: number;\n  year: string;\n  aggregateServiceNameClaims?: AggregateServiceNameClaims;\n}\n\nexport interface AggregateServiceNameClaims {\n  [key: string]: {\n    claimTotalCount: number;\n    inNetworkTotalCount: number;\n    outNetworkTotalCount: number;\n    outOfPocketAmountTotal: number;\n    serviceName: string;\n  };\n}\n\nexport interface Abcd {\n  [key: string]: YearCategory;\n}\n\nexport interface YearCategory {\n  name: string;\n}\n\nexport enum TPAWarningType {\n  IN_PROCCESS,\n  CONNECTION_ERROR,\n}\n\nexport interface TPAWarning {\n  warningType: TPAWarningType;\n  errorMessage?: string;\n  carrier: string;\n}\n\nexport interface TPAInsightContent {\n  colors: Colors;\n  serviceName: ServiceNameTPA;\n}\n\nexport interface Colors {\n  medical: string;\n  dental: string;\n  vision: string;\n  rx: string;\n  facility: string;\n}\n\nexport interface ServiceNameTPA {\n  medical: string;\n  dental: string;\n  vision: string;\n  rx: string;\n  facility: string;\n}\n","export default \"<ion-tabs>\\n  <ion-tab-bar slot=\\\"top\\\">\\n    <ion-tab-button\\n      *ngFor=\\\"let tab of tabs\\\"\\n      [ngClass]=\\\"{'selectedRipple': selectedTab === tab.link || selectedTab === tab.routerLink}\\\"\\n      (click)=\\\"handleClick(tab)\\\"\\n      class=\\\"lightgrey\\\"\\n      [tab]=\\\"tab.link\\\"\\n    >\\n      <ion-label>{{tab.label}}</ion-label>\\n    </ion-tab-button>\\n  </ion-tab-bar>\\n</ion-tabs>\\n\";","export default \"<ion-card [ngClass]=\\\"{'web-card': isWeb}\\\">\\n  <ion-grid>\\n    <ion-row class=\\\"title-row\\\">\\n      <img\\n        class=\\\"title-img\\\"\\n        src=\\\"{{ content?.title_img_url }}\\\"\\n        alt=\\\"{{ content?.title_img_alt }}\\\"\\n      />\\n      <span class=\\\"title\\\">{{ content?.title }}</span>\\n    </ion-row>\\n    <ion-row class=\\\"body-row\\\">\\n      <div>\\n        <span class=\\\"body\\\" innerHTML=\\\"{{ content?.body }}\\\"></span>\\n        <img\\n          class=\\\"body-img\\\"\\n          src=\\\"{{ content?.body_img_url }}\\\"\\n          alt=\\\"{{ content?.body_img_alt }}\\\"\\n        />\\n      </div>\\n    </ion-row>\\n    <ion-row class=\\\"footer-row\\\" *ngIf=\\\"content?.footer_text?.length > 0\\\">\\n      {{ content?.footer_text }}\\n    </ion-row>\\n  </ion-grid>\\n</ion-card>\\n\";","export default \"<app-loading [loading]=\\\"loading\\\">\\n  <div class=\\\"half-bg\\\" #topmostElement></div>\\n  <div *ngIf=\\\"tpaData?.claims.length < 1\\\">\\n    <app-consent-required></app-consent-required>\\n  </div>\\n  <div *ngIf=\\\"tpaData?.claims.length > 0\\\">\\n    <div *ngFor=\\\"let warn of warnings\\\" class=\\\"warning-wrap\\\">\\n      <app-tpawarning [warning]=\\\"warn\\\"></app-tpawarning>\\n    </div>\\n    <mobile-plan-transactions\\n      (manageButtonEvent)=\\\"manageProviders()\\\"\\n    ></mobile-plan-transactions>\\n  </div>\\n</app-loading>\\n\";","export default \"<ion-row class=\\\"back-row\\\">\\n  <span (click)=\\\"goBack()\\\" class=\\\"click\\\">{{ pageText.back }}</span>\\n</ion-row>\\n<app-loading [loading]=\\\"carriers === null\\\">\\n  <ion-grid>\\n    <ion-row class=\\\"title\\\">\\n      {{ pageText.manage }}\\n    </ion-row>\\n    <ion-row class=\\\"subtitle\\\">\\n      {{ pageText.selectCarrier }}\\n    </ion-row>\\n    <ion-row class=\\\"provider-row\\\" *ngFor=\\\"let car of carriers\\\">\\n      <ion-col size=\\\"11\\\" class=\\\"main-col\\\">\\n        <img\\n          src=\\\"assets/icon/warning_orange.svg\\\"\\n          class=\\\"warning\\\"\\n          alt=\\\"{{ pageText.warningAlt }}\\\"\\n          *ngIf=\\\"car.crawlStatus !== 'SUCCESS' || car.loginProblem !== 'valid'\\\"\\n        />\\n        <img\\n          src=\\\"{{ car.logoUrl }}\\\"\\n          class=\\\"logo\\\"\\n          alt=\\\"{{ car.carrierName }} Logo\\\"\\n        />\\n      </ion-col>\\n      <ion-col\\n        size=\\\"1\\\"\\n        class=\\\"edit-col\\\"\\n        (click)=\\\"revoke(car.carrierId, car.carrierName)\\\"\\n      >\\n        <img\\n          class=\\\"del-button\\\"\\n          src=\\\"assets/icon/minus-circle.svg\\\"\\n          alt=\\\"{{ pageText.deleteAlt }}\\\"\\n        />\\n      </ion-col>\\n      <div\\n        class=\\\"bottom-text\\\"\\n        *ngIf=\\\"car.crawlStatus !== 'SUCCESS' || car.loginProblem !== 'valid'\\\"\\n      >\\n        {{ car.carrierName }}{{ pageText.claimsInvalid }}\\n        <a (click)=\\\"addCarrier()\\\">{{ pageText.fix }}</a>\\n      </div>\\n    </ion-row>\\n    <ion-row class=\\\"bottom-row\\\">\\n      <ion-button\\n        id=\\\"add-carrier\\\"\\n        (click)=\\\"addCarrier()\\\"\\n        class=\\\"font-18 save-button\\\"\\n        name=\\\"submit\\\"\\n        shape=\\\"round\\\"\\n        expand=\\\"block\\\"\\n        type=\\\"submit\\\"\\n        color=\\\"btncolor\\\"\\n      >\\n        <img\\n          class=\\\"add-icon\\\"\\n          src=\\\"assets/icon/add_outline.png\\\"\\n          alt=\\\"{{ pageText.addAlt }}\\\"\\n        />\\n        {{ pageText.add }}\\n      </ion-button>\\n    </ion-row>\\n  </ion-grid>\\n</app-loading>\\n\";","export default \"<ion-card>\\n  <div class=\\\"wrapper\\\">\\n    <img src=\\\"assets/icon/warning_orange.svg\\\" alt=\\\"{{ pageText.warningAlt }}\\\" />\\n    <span *ngIf=\\\"warning?.warningType == warnType.IN_PROCCESS\\\">\\n      {{ pageText.inProccess1 }} {{ warning.carrier }}\\n      {{ pageText.inProccess2 }}\\n    </span>\\n    <span *ngIf=\\\"warning?.warningType == warnType.CONNECTION_ERROR\\\">\\n      {{ warning.errorMessage }}\\n    </span>\\n  </div>\\n</ion-card>\\n\";","export default \"<ion-card *ngIf=\\\"show\\\" class=\\\"mobile\\\">\\n  <ion-row class=\\\"top-row\\\">\\n    <div class=\\\"title\\\">\\n      {{ content?.title }}\\n    </div>\\n    <div class=\\\"dec-img\\\">\\n      <img src=\\\"assets/icon/unlocked_folder.svg\\\" alt=\\\"\\\" />\\n    </div>\\n  </ion-row>\\n  <ion-row class=\\\"message\\\">\\n    {{ content?.message }}\\n  </ion-row>\\n</ion-card>\\n<ion-card *ngIf=\\\"show\\\" class=\\\"web\\\">\\n  <div class=\\\"dec-img\\\">\\n    <img src=\\\"assets/icon/unlocked_folder.svg\\\" alt=\\\"\\\" />\\n  </div>\\n  <div>\\n    <ion-row class=\\\"title\\\">\\n      {{ content?.title }}\\n    </ion-row>\\n    <ion-row class=\\\"message\\\">\\n      {{ content?.message }}\\n    </ion-row>\\n  </div>\\n</ion-card>\\n\";"],"names":[],"sourceRoot":"webpack:///"}