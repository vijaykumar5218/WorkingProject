{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UACaA;;;;;AACTC,6BAAc;AAAA;;AAAA;;AACV;;AACA,iBAAKC,OAAL;;AAFU;AAGb;;;;iBACKC,4BAAmB;AAAA;AAAA;AAAA;AAAA;AAAA,qDACd;AAAEC,6BAAO,EAAE;AAAX,qBADc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAExB;;;iBACKC,8BAAqB;AAAA;AAAA;AAAA;AAAA;AAAA,sDAChB;AAAED,6BAAO,EAAE;AAAX,qBADgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE1B;;;iBACKE,eAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AACFC,yBADE,GACMC,YAAY,CAACC,OAAbD,CAAqBR,SAAQ,CAACU,WAA9BF,CADN;AAEFG,yBAFE,GAEMJ,KAAK,GAAGK,QAAQ,CAACL,KAAD,EAAQ,EAAR,CAAX,GAAyB,CAFpC;AAAA,sDAGD;AAAEI;AAAF,qBAHC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIX;;;iBACKE,aAAIC,OAAJD,EAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AACTF,yBADS,GACDG,OAAO,CAACH,KADP;;AAAA,0BAEXA,KAAK,KAAK,CAFC;AAAA;AAAA;AAAA;;AAAA;AAGX,2BAAMI,SAAS,CAACC,aAAVD,EAAN;;AAHW;AAAA;AAAA;;AAAA;AAAA;AAMX,2BAAMA,SAAS,CAACE,WAAVF,CAAsBJ,KAAtBI,CAAN;;AANW;AAQTR,yBARS,GAQDI,KAAK,CAACO,QAANP,EARC;AASfH,gCAAY,CAACW,OAAbX,CAAqBR,SAAQ,CAACU,WAA9BF,EAA2CD,KAA3CC;;AATe;AAAA;AAAA;AAAA;AAAA;AAAA;AAUlB;;;iBACKY,oBAAW;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACP,2BAAkBC,KAAI,CAACf,GAAL,EAAlB;;AADO;AAAA;AACLK,yBADK,oBACLA,KADK;AAAA;AAEb,2BAAMU,KAAI,CAACR,GAAL,CAAS;AAAEF,2BAAK,EAAEA,KAAK,GAAG;AAAjB,qBAAT,CAAN;;AAFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAGhB;;;iBACKW,oBAAW;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACP,2BAAkBC,MAAI,CAACjB,GAAL,EAAlB;;AADO;AAAA;AACLK,yBADK,qBACLA,KADK;;AAAA,0BAETA,KAAK,GAAG,CAFC;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAKb,2BAAMY,MAAI,CAACV,GAAL,CAAS;AAAEF,2BAAK,EAAEA,KAAK,GAAG;AAAjB,qBAAT,CAAN;;AALa;AAAA;AAAA;AAAA;AAAA;AAAA;AAMhB;;;iBACKa,iBAAQ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACV,2BAAMC,MAAI,CAACZ,GAAL,CAAS;AAAEF,2BAAK,EAAE;AAAT,qBAAT,CAAN;;AADU;AAAA;AAAA;AAAA;AAAA;AAAA;AAEb;;;iBACKe,uBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,0BADU,GACD;AACXD,iCAAW,EAAE,iBAAiBX;AADnB,qBADC;AAAA,sDAITY,MAJS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKnB;;;iBACKzB,mBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AACNK,yBADM,GACEC,YAAY,CAACC,OAAbD,CAAqBR,SAAQ,CAACU,WAA9BF,CADF;;AAAA,wBAEPD,KAFO;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKNI,yBALM,GAKEC,QAAQ,CAACL,KAAD,EAAQ,EAAR,CALV;AAAA;AAMZ,2BAAMQ,SAAS,CAACE,WAAVF,CAAsBJ,KAAtBI,CAAN;;AANY;AAAA;AAAA;AAAA;AAAA;AAAA;AAOf;;;;QAtDyBa;;AAwD9B5B,eAAQ,CAACU,WAATV,GAAuB,iBAAvBA;;;","names":["BadgeWeb","constructor","restore","checkPermissions","display","requestPermissions","get","value","localStorage","getItem","STORAGE_KEY","count","parseInt","set","options","navigator","clearAppBadge","setAppBadge","toString","setItem","increase","_this","decrease","_this2","clear","_this3","isSupported","result","WebPlugin"],"sources":["webpack:///node_modules/@capawesome/capacitor-badge/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class BadgeWeb extends WebPlugin {\n    constructor() {\n        super();\n        this.restore();\n    }\n    async checkPermissions() {\n        return { display: 'granted' };\n    }\n    async requestPermissions() {\n        return { display: 'granted' };\n    }\n    async get() {\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\n        const count = value ? parseInt(value, 10) : 0;\n        return { count };\n    }\n    async set(options) {\n        const count = options.count;\n        if (count === 0) {\n            await navigator.clearAppBadge();\n        }\n        else {\n            await navigator.setAppBadge(count);\n        }\n        const value = count.toString();\n        localStorage.setItem(BadgeWeb.STORAGE_KEY, value);\n    }\n    async increase() {\n        const { count } = await this.get();\n        await this.set({ count: count + 1 });\n    }\n    async decrease() {\n        const { count } = await this.get();\n        if (count < 1) {\n            return;\n        }\n        await this.set({ count: count - 1 });\n    }\n    async clear() {\n        await this.set({ count: 0 });\n    }\n    async isSupported() {\n        const result = {\n            isSupported: 'setAppBadge' in navigator,\n        };\n        return result;\n    }\n    async restore() {\n        const value = localStorage.getItem(BadgeWeb.STORAGE_KEY);\n        if (!value) {\n            return;\n        }\n        const count = parseInt(value, 10);\n        await navigator.setAppBadge(count);\n    }\n}\nBadgeWeb.STORAGE_KEY = 'capacitor.badge';\n"]}