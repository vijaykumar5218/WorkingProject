{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAWaA,yBAAwB;AAInC,0CACSC,WADT,EAEUC,cAFV,EAEyC;AAAA;;AADhC;AACC;AAGV,+BAAoCC,qDAApC;AAEO,+BAAgB,EAAhB;AACA,iCAAkB,EAAlB;AALH;;AAP+B;AAAA;AAAA,iBAcnC,oBAAQ;AACN,iBAAKC,eAAL,GAAuB,KAAKC,aAA5B;AACD;AAhBkC;AAAA;AAAA,iBAkBnC,qBAAYC,IAAZ,EAAyB;AACvB,gBAAIA,IAAI,IAAI,KAAKF,eAAjB,EAAkC;AAChC,mBAAKF,cAAL,CAAoBK,iBAApB,CAAsC,KAAKH,eAA3C;AACD;;AACD,iBAAKH,WAAL,CAAiBO,OAAjB;AACD;AAvBkC;AAAA;AAAA,iBAyBnC,oBAAQ;AACN,iBAAKH,aAAL,GAAqB,KAAKI,YAA1B;AACD;AA3BkC;;AAAA;AAAA;;;;gBAT7BC;;gBACAC;;;;;;gBASLC;;;gBACAA;;;AAFUZ,+BAAwB,uDALpC,0DAAU;AACTa,gBAAQ,EAAE,uBADD;AAETC,+LAFS;;AAAA,OAAV,CAKoC,GAAxBd,yBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCoCAe,0BAAyB;AA4CpC,2CACUC,eADV,EAEUC,cAFV,EAGUC,cAHV,EAISjB,WAJT,EAKUkB,UALV,EAMUC,aANV,EAMsC;AAAA;;AAL5B;AACA;AACA;AACD;AACC;AACA;AAjDD,sBAAO,KAAP;AACA,yBAAU,KAAV;AACT,uBAAQ,KAAR;AACU,yBAAU,IAAIC,wDAAJ,EAAV;AACA,mCAAoB,IAAIA,wDAAJ,EAApB;AACV,0BAA2BC,sFAA3B;AACA,2BAA2B,EAA3B;AACA,mCAAmC,EAAnC;AACA,4BAAa,KAAb;AAGA,4BAAa,KAAb;AAIA,+BAAoCC,qDAApC;AAIA,+BAA+B,KAAKC,aAAL,CAAmBC,gBAAlD;AAQA,0BAAW,EAAX;AACA,wBAAS,EAAT;AAGA,oCAAqB;AACnBC,kBAAM,EAAE,KAAKF,aAAL,CAAmBG,YADR;AAEnBC,uBAAW,EAAE,IAFM;AAGnBC,oBAAQ,EAAE;AAHS,WAArB;AAOA,mCAAoB,EAApB;AAGA,8BAAyB,EAAzB;AASI;;AAnDgC;AAAA;AAAA,iBAqD9B,oBAAQ;;;;;;AACZ,2BAAM,KAAKC,YAAL,EAAN;;;AACA,yBAAKC,iBAAL,GAAyB,UAAzB;AACA,yBAAKC,KAAL,GAAa,KAAKd,cAAL,CAAoBe,QAApB,EAAb;AACA,yBAAKC,gBAAL;AACA,yBAAKC,cAAL;AACA,yBAAKC,eAAL;AACA,yBAAKC,cAAL;AACA,yBAAKC,kBAAL;AACA,yBAAKtB,eAAL,CAAqBuB,aAArB,CAAmC,KAAKC,iBAAxC;;;;;;;;AACD;AA/DmC;AAAA;AAAA,iBAiE9B,wBAAY;;;;;;;AACD,2BAAM,KAAKpB,aAAL,CAAmBqB,mBAAnB,EAAN;;;AAATC;AACN,yBAAKC,KAAL,GAAaD,MAAM,CAACE,SAAP,KAAqB,GAAlC;;;;;;;;AACD;AApEmC;AAAA;AAAA,iBAsEpC,6BAAiB;AAAA;;AACf,iBAAKC,WAAL,GAAmB,EAAnB;AACA,iBAAKC,mBAAL,CAAyBC,OAAzB,CAAiC,iBAAO,EAAG;AACzC,qBAAOC,OAAO,CAACC,MAAR,CAAeC,IAAf,CAAoB,cAAI,EAAG;AAChC,qBAAI,CAACL,WAAL,CAAiBM,IAAjB,CAAsBC,IAAtB;AACD,eAFM,CAAP;AAGD,aAJD;AAKD;AA7EmC;AAAA;AAAA,iBA+EpC,uBAAcC,WAAd,EAAuC;AACrC,iBAAKR,WAAL,GAAmB,KAAKA,WAAL,CAAiBS,MAAjB,CAAwB,UAASF,IAAT,EAAa;AACtD,qBAAOA,IAAI,CAACG,GAAL,KAAaF,WAAW,CAACE,GAAhC;AACD,aAFkB,CAAnB;AAIA,iBAAKT,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBU,GAAzB,CAA6B,eAAK;AAAA,qBAAIC,gCAC5DC,KAD4D,GACvD;AACRT,sBAAM,EAAES,KAAK,CAACT,MAAN,CAAaK,MAAb,CAAoB,YAAE;AAAA,yBAAIK,EAAE,CAACJ,GAAH,IAAUF,WAAW,CAACE,GAA1B;AAAA,iBAAtB;AADA,eADuD,CAAJ;AAAA,aAAlC,CAA3B;AAKA,iBAAKK,UAAL,CAAgB,KAAKd,mBAArB;AAEA,iBAAKe,YAAL,GAAoB,KAAK7C,eAAL,CAAqB8C,aAArB,EAApB;;AAEA,gBAAI,KAAKD,YAAL,CAAkBE,QAAlB,CAA2BV,WAAW,CAACE,GAAvC,CAAJ,EAAiD;AAC/C,mBAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBP,MAAlB,CAAyB,UAASF,IAAT,EAAa;AACxD,uBAAOA,IAAI,KAAKC,WAAW,CAACE,GAA5B;AACD,eAFmB,CAApB;AAGD,aAJD,MAIO;AACL;AACD;;AAED,iBAAKvC,eAAL,CAAqBgD,aAArB,CAAmC,KAAKH,YAAxC;AACD;AAtGmC;AAAA;AAAA,iBAwGpC,yBAAa;AACX,iBAAKf,mBAAL,GAA2B,EAA3B;AACA,iBAAKD,WAAL,GAAmB,EAAnB;AACA,iBAAK7B,eAAL,CAAqBgD,aAArB,CAAmC,EAAnC;AACA,iBAAKJ,UAAL,CAAgB,KAAKd,mBAArB;AACD;AA7GmC;AAAA;AAAA,iBA+GpC,2BAAe;AAAA;;AACb,iBAAK9B,eAAL,CAAqBiD,gBAArB,GAAwCC,IAAxC,CAA6C,UAACC,IAAD,EAAuB;AAClE,kBAAMb,MAAM,GAAGa,IAAI,CAACC,UAApB;AACA,kBAAMC,IAAI,GAAGF,IAAI,CAACG,QAAlB;;AACA,kBAAI,MAAI,CAAC3B,KAAT,EAAgB;AACdW,sBAAM,CAAC,CAAD,CAAN,CAAUL,MAAV,GAAmB,MAAI,CAACzB,aAAL,CAAmB+C,gBAAtC;AACAF,oBAAI,CAAC,CAAD,CAAJ,CAAQpB,MAAR,GAAiB,MAAI,CAACzB,aAAL,CAAmBgD,cAApC;AACD;;AACD,oBAAI,CAACJ,UAAL,GAAkBd,MAAlB;;AACA,oBAAI,CAACmB,sBAAL;;AACA,oBAAI,CAACH,QAAL,GAAgBD,IAAhB;AACD,aAVD;AAWD;AA3HmC;AAAA;AAAA,iBA6HpC,4BAAgB;AAAA;;AACd,iBAAKK,kBAAL,GAA0B,KAAK1D,eAAL,CACvB2D,aADuB,GAEvBC,SAFuB,CAEb,cAAI,EAAG;AAChB,oBAAI,CAAC9B,mBAAL,GAA2BqB,IAA3B;;AACA,oBAAI,CAACU,iBAAL;;AACA,oBAAI,CAACjB,UAAL,CAAgBO,IAAhB;AACD,aANuB,CAA1B;AAOD;AArImC;AAAA;AAAA,iBAuIpC,0BAAc;AAAA;;AACZ,iBAAKW,gBAAL,GAAwB,KAAK9D,eAAL,CACrB+D,WADqB,GAErBH,SAFqB,CAEX,cAAI,EAAG;AAChB,oBAAI,CAACI,UAAL,GAAkBb,IAAlB;;AACA,oBAAI,CAACP,UAAL,CAAgB,MAAI,CAACd,mBAArB;AACD,aALqB,CAAxB;AAMD;AA9ImC;AAAA;AAAA,iBAgJpC,0BAAc;AAAA;;AACZ,iBAAKmC,gBAAL,GAAwB,KAAKjE,eAAL,CACrBkE,cADqB,GAErBN,SAFqB,CAEX,cAAI,EAAG;AAChB,oBAAI,CAAC7C,iBAAL,GAAyBoC,IAAzB;;AACA,oBAAI,CAACgB,cAAL;AACD,aALqB,CAAxB;AAMD;AAvJmC;AAAA;AAAA,iBAyJpC,kBAAShB,IAAT,EAAqB;AACnB,gBAAIA,IAAI,IAAI,KAAZ,EAAmB;AACjB,mBAAKiB,iBAAL,CAAuBf,IAAvB,CAA4B,UAACgB,CAAD,EAAIC,CAAJ,EAAS;AACnC,uBAAO,IAAIC,IAAJ,CAASF,CAAC,CAACG,IAAX,EAAiBC,OAAjB,KAA6B,IAAIF,IAAJ,CAASD,CAAC,CAACE,IAAX,EAAiBC,OAAjB,EAApC;AACD,eAFD;AAGA,qBAAO,KAAKL,iBAAL,CAAuBrC,OAAvB,CAA+B,cAAI,EAAG;AAC3C,uBAAOK,IAAI,CAACsC,IAAL,CAAUrB,IAAV,CACL,UAACgB,CAAD,EAAIC,CAAJ;AAAA,yBACE,IAAIC,IAAJ,CAASF,CAAC,CAACM,WAAX,EAAwBF,OAAxB,KACA,IAAIF,IAAJ,CAASD,CAAC,CAACK,WAAX,EAAwBF,OAAxB,EAFF;AAAA,iBADK,CAAP;AAKD,eANM,CAAP;AAOD;;AACD,gBAAItB,IAAI,IAAI,KAAZ,EAAmB;AACjB,mBAAKiB,iBAAL,CAAuBf,IAAvB,CAA4B,UAACgB,CAAD,EAAIC,CAAJ,EAAS;AACnC,uBAAO,IAAIC,IAAJ,CAASD,CAAC,CAACE,IAAX,EAAiBC,OAAjB,KAA6B,IAAIF,IAAJ,CAASF,CAAC,CAACG,IAAX,EAAiBC,OAAjB,EAApC;AACD,eAFD;AAGA,qBAAO,KAAKL,iBAAL,CAAuBrC,OAAvB,CAA+B,cAAI,EAAG;AAC3C,uBAAOK,IAAI,CAACsC,IAAL,CAAUrB,IAAV,CACL,UAACgB,CAAD,EAAIC,CAAJ;AAAA,yBACE,IAAIC,IAAJ,CAASD,CAAC,CAACK,WAAX,EAAwBF,OAAxB,KACA,IAAIF,IAAJ,CAASF,CAAC,CAACM,WAAX,EAAwBF,OAAxB,EAFF;AAAA,iBADK,CAAP;AAKD,eANM,CAAP;AAOD;;AACD,gBAAItB,IAAI,IAAI,KAAZ,EAAmB;AACjB,mBAAKyB,gBAAL;AACA,mBAAKR,iBAAL,CAAuBrC,OAAvB,CAA+B,cAAI,EAAG;AACpC,uBAAOK,IAAI,CAACsC,IAAL,CAAUrB,IAAV,CAAe,UAACgB,CAAD,EAAIC,CAAJ;AAAA,yBAAUD,CAAC,CAACQ,eAAF,GAAoBP,CAAC,CAACO,eAAhC;AAAA,iBAAf,CAAP;AACD,eAFD;AAGD;;AAED,gBAAI1B,IAAI,IAAI,MAAZ,EAAoB;AAClB,mBAAKyB,gBAAL;AACA,mBAAKR,iBAAL,CAAuBrC,OAAvB,CAA+B,cAAI,EAAG;AACpC,uBAAOK,IAAI,CAACsC,IAAL,CAAUrB,IAAV,CAAe,UAACgB,CAAD,EAAIC,CAAJ;AAAA,yBAAUA,CAAC,CAACO,eAAF,GAAoBR,CAAC,CAACQ,eAAhC;AAAA,iBAAf,CAAP;AACD,eAFD;AAGD;AACF;AA/LmC;AAAA;AAAA,iBAiMpC,4BAAgB;AACd,gBAAMC,YAAY,GAAG,EAArB;AACA,gBAAMC,WAAW,GAAG,EAApB;AAEA,iBAAKX,iBAAL,CAAuBrC,OAAvB,CAA+B,cAAI,EAAG;AACpC+C,0BAAY,CAAC3C,IAAb,mBAAY,qBAASC,IAAI,CAACsC,IAAd,EAAZ;AACD,aAFD;AAIAK,uBAAW,CAAC5C,IAAZ,CAAiB;AACfuC,kBAAI,EAAEI;AADS,aAAjB;AAIA,iBAAKV,iBAAL,GAAyBW,WAAzB;AACD;AA9MmC;AAAA;AAAA,iBAgNpC,uBAAc5B,IAAd,EAAkCR,EAAlC,EAAkD;AAChD,gBAAIqC,IAAI,GAAG,KAAX;;AACA,gBAAI7B,IAAI,CAAC,CAAD,CAAJ,CAAQlB,MAAR,CAAegD,MAAf,GAAwB,CAA5B,EAA+B;AAC7BD,kBAAI,GAAG,IAAP;AACD,aAFD,MAEO;AACL7B,kBAAI,CAAC,CAAD,CAAJ,CAAQlB,MAAR,CAAeF,OAAf,CAAuB,iBAAO,EAAG;AAC/B,oBAAIiD,IAAJ,EAAU;AACR;AACD;;AACD,oBAAIE,OAAO,CAAC3C,GAAR,IAAe,WAAnB,EAAgC;AAC9ByC,sBAAI,GAAGrC,EAAE,CAACwC,SAAH,IAAgB,IAAvB;AACD;;AACD,oBAAID,OAAO,CAAC3C,GAAR,IAAe,YAAnB,EAAiC;AAC/ByC,sBAAI,GAAGrC,EAAE,CAACwC,SAAH,IAAgB,KAAvB;AACD;AACF,eAVD;AAWD;;AACD,mBAAOH,IAAP;AACD;AAlOmC;AAAA;AAAA,iBAoOpC,+BAAsB5C,IAAtB,EAAyCe,IAAzC,EAA2D;AAAA;;AACzD,mBAAOf,IAAI,CAACsC,IAAL,CAAUpC,MAAV,CAAiB,YAAE,EAAG;AAC3B,kBAAM0C,IAAI,GAAG,MAAI,CAACI,aAAL,CAAmBjC,IAAnB,EAAyBR,EAAzB,CAAb;;AACA,kBAAIqC,IAAJ,EAAU;AACR,oBAAI7B,IAAI,CAAC,CAAD,CAAJ,CAAQlB,MAAR,CAAegD,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,yBAAO,IAAP;AACD;;AACD,oBAAII,GAAG,GAAG,KAAV;AACAlC,oBAAI,CAAC,CAAD,CAAJ,CAAQlB,MAAR,CAAeF,OAAf,CAAuB,iBAAO,EAAG;AAC/B,sBAAImD,OAAO,CAAC3C,GAAR,IAAeI,EAAE,CAAC2C,WAAtB,EAAmC;AACjCD,uBAAG,GAAG,IAAN;AACD;AACF,iBAJD;AAKA,uBAAOA,GAAP;AACD;;AAED,qBAAOL,IAAP;AACD,aAhBM,CAAP;AAiBD;AAtPmC;AAAA;AAAA,iBAwPpC,oBAAW7B,IAAX,EAA6B;AAAA;;;;AAC3B,gBACEA,IAAI,CAAC8B,MAAL,GAAc,CAAd,IACC,WAAI,CAAC,CAAD,CAAJ,MAAO,IAAP,IAAOM,aAAP,GAAO,MAAP,GAAOA,GAAEtD,MAAF,CAASgD,MAAhB,IAAyB,CAAzB,IAA8B,WAAI,CAAC,CAAD,CAAJ,MAAO,IAAP,IAAOO,aAAP,GAAO,MAAP,GAAOA,GAAEvD,MAAF,CAASgD,MAAhB,IAAyB,CAF1D,EAGE;AACA,mBAAKb,iBAAL,GAAyB,KAAKqB,SAA9B;AACD,aALD,MAKO;AACL,kBAAMC,YAAY,GAAG,EAArB;AACA,mBAAKD,SAAL,CAAe1D,OAAf,CAAuB,cAAI,EAAG;AAC5B,oBAAM4D,GAAG,GAAG,MAAI,CAACC,qBAAL,CAA2BxD,IAA3B,EAAiCe,IAAjC,CAAZ;;AACA,uBAAOuC,YAAY,CAACvD,IAAb,CAAkB;AACvBqC,sBAAI,EAAEpC,IAAI,CAACoC,IADY;AAEvBE,sBAAI,EAAEiB;AAFiB,iBAAlB,CAAP;AAID,eAND;AAQA,mBAAKvB,iBAAL,GAAyBsB,YAAzB;AACD;;AAED,iBAAKG,iBAAL,CAAuB,KAAKzB,iBAA5B;AACA,iBAAK0B,QAAL,CAAc,KAAK9B,UAAnB;AACD;AA7QmC;AAAA;AAAA,iBA+QpC,4BAAgB;AACd,gBAAI,CAAC,KAAK+B,mBAAV,EAA+B;AAC7B,mBAAKzE,kBAAL;AACD;AACF;AAnRmC;AAAA;AAAA,iBAqR9B,8BAAkB;;;;;;;AACtB,wBAAI,KAAKK,KAAT,EAAgB;AACd,2BAAKqE,UAAL,GAAkB,IAAlB;AACA,2BAAKC,WAAL;AACD,qBAHD,MAGO;AACL,2BAAKF,mBAAL,GAA2B,KAAK9F,cAAL,CACxBiG,iBADwB,GAExBtC,SAFwB,CAEd,UAAOuC,OAAP;AAAA,+BAA4B;AAAA;AAAA;AAAA;AACrC,qCAAKH,UAAL,GAAkBG,OAAlB;;AACA,oCAAI,KAAKnF,KAAT,EAAgB;AACd,uCAAKd,cAAL,CAAoBkG,WAApB,CAAgC,KAAKC,cAArC;AACD;;AACD,oCAAI,KAAKL,UAAT,EAAqB;AACnB,uCAAKG,OAAL,CAAaG,IAAb,CAAkB,IAAlB;AACA,uCAAKL,WAAL;AACD,iCAHD,MAGO;AACL,uCAAKE,OAAL,CAAaG,IAAb,CAAkB,KAAlB;AACD;;AAVoC;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA5B;AAAA,uBAFc,CAA3B;AAcD;;;;;;;;AACF;AAzSmC;AAAA;AAAA,iBA2SpC,0BAAc;AACZ,gBAAI,KAAKvF,iBAAL,IAA0B,QAA9B,EAAwC;AACtC,mBAAKwF,WAAL,GAAmB;AACjBC,yBAAS,EAAEC,gDACRC,QADQ,CACC,EADD,EACK,MADL,EAERC,MAFQ,CAED,YAFC,CADM;AAIjBC,uBAAO,EAAEH,gDAASE,MAAT,CAAgB,YAAhB;AAJQ,eAAnB;AAMD;;AACD,gBAAI,KAAK5F,iBAAL,IAA0B,SAA9B,EAAyC;AACvC,mBAAKwF,WAAL,GAAmB;AACjBC,yBAAS,EAAEC,gDACRC,QADQ,CACC,EADD,EACK,MADL,EAERC,MAFQ,CAED,YAFC,CADM;AAIjBC,uBAAO,EAAEH,gDAASE,MAAT,CAAgB,YAAhB;AAJQ,eAAnB;AAMD;;AACD,gBAAI,KAAK5F,iBAAL,IAA0B,SAA9B,EAAyC;AACvC,mBAAKwF,WAAL,GAAmB;AACjBC,yBAAS,EAAEC,gDACRC,QADQ,CACC,GADD,EACM,MADN,EAERC,MAFQ,CAED,YAFC,CADM;AAIjBC,uBAAO,EAAEH,gDAASE,MAAT,CAAgB,YAAhB;AAJQ,eAAnB;AAMD;;AACD,gBAAI,KAAK5F,iBAAL,IAA0B,UAA9B,EAA0C;AACxC,mBAAKwF,WAAL,GAAmB;AACjBC,yBAAS,EAAEC,gDACRC,QADQ,CACC,GADD,EACM,MADN,EAERC,MAFQ,CAED,YAFC,CADM;AAIjBC,uBAAO,EAAEH,gDAASE,MAAT,CAAgB,YAAhB;AAJQ,eAAnB;AAMD;;AAED,gBAAI,KAAK5F,iBAAL,IAA0B,UAA9B,EAA0C;AACxC,mBAAKwF,WAAL,GAAmB;AACjBC,yBAAS,EAAEC,gDACRI,OADQ,CACA,MADA,EAERH,QAFQ,CAEC,CAFD,EAEI,OAFJ,EAGRC,MAHQ,CAGD,YAHC,CADM;AAKjBC,uBAAO,EAAEH,gDACNK,KADM,CACA,MADA,EAENJ,QAFM,CAEG,CAFH,EAEM,OAFN,EAGNC,MAHM,CAGC,YAHD;AALQ,eAAnB;AAUD,aAXD,MAWO,IAAI,KAAK5F,iBAAL,IAA0B,UAA9B,EAA0C;AAC/C,mBAAKwF,WAAL,GAAmB;AACjBC,yBAAS,EAAEC,gDACRI,OADQ,CACA,MADA,EAERF,MAFQ,CAED,YAFC,CADM;AAIjBC,uBAAO,EAAEH,gDACNK,KADM,CACA,MADA,EAENH,MAFM,CAEC,YAFD;AAJQ,eAAnB;AAQD;;AACD,iBAAK/D,UAAL,CAAgB,KAAKd,mBAArB;AACD;AAnWmC;AAAA;AAAA,iBAqWpC,2BAAkBqB,IAAlB,EAAqC;AAAA;;AACnC,gBAAM4D,cAAc,GAAG,EAAvB;AAEA5D,gBAAI,CAACpB,OAAL,CAAa,cAAI,EAAG;AAClB,kBAAMsD,GAAG,GAAGjD,IAAI,CAACsC,IAAL,CAAUpC,MAAV,CAAiB,WAAC,EAAG;AAC/B,uBACE0E,CAAC,CAACrC,WAAF,IAAiB,MAAI,CAAC4B,WAAL,CAAiBC,SAAlC,IACAQ,CAAC,CAACrC,WAAF,IAAiB,MAAI,CAAC4B,WAAL,CAAiBK,OAFpC;AAID,eALW,CAAZ;AAMA,qBAAOG,cAAc,CAAC5E,IAAf,CAAoB;AACzBqC,oBAAI,EAAEpC,IAAI,CAACoC,IADc;AAEzBE,oBAAI,EAAEW;AAFmB,eAApB,CAAP;AAID,aAXD;AAaA,iBAAKjB,iBAAL,GAAyB2C,cAAzB;AACD;AAtXmC;AAAA;AAAA,iBAwXpC,uBAAW;AACT,gBAAI,KAAKpF,KAAT,EAAgB;AACd,mBAAKsF,cAAL;AACD,aAFD,MAEO;AACL,mBAAKC,kBAAL;AACD;AACF;AA9XmC;AAAA;AAAA,iBAgYpC,0BAAc;AACZ,iBAAKC,iBAAL,CAAuBb,IAAvB;AACD;AAlYmC;AAAA;AAAA,iBAoYpC,0BAAc;AAAA;;AACZ,iBAAKc,eAAL,GAAuB,KAAKjH,UAAL,CACpBkH,UADoB,GAEpBzD,SAFoB,CAEV,UAAC0D,OAAD,EAA2B;AACpC,qBAAI,CAACC,YAAL,GAAoB,IAApB;;AACA,qBAAI,CAACC,kBAAL,CAAwBF,OAAO,CAACG,uBAAhC;AACD,aALoB,CAAvB;AAMD;AA3YmC;AAAA;AAAA,iBA6YpC,8BAAkB;AAAA;;AAChB,iBAAKlB,WAAL,GAAmB;AACjBC,uBAAS,EAAEC,gDACRI,OADQ,CACA,MADA,EAERa,GAFQ,CAEJ,CAAC,CAFG,EAEA,OAFA,EAGRf,MAHQ,CAGD,YAHC,CADM;AAKjBC,qBAAO,EAAEH,gDACNK,KADM,CACA,MADA,EAENH,MAFM,CAEC,YAFD;AALQ,aAAnB;AAUA,iBAAK3G,eAAL,CACG2H,aADH,CACiB,KAAKpB,WADtB,EACmC,IADnC,EAEGrD,IAFH,CAEQ,UAAC0E,IAAD,EAA2B;AAC/B,qBAAI,CAACL,YAAL,GAAoB,IAApB;;AACA,qBAAI,CAACC,kBAAL,CAAwBI,IAAI,CAACH,uBAA7B;AACD,aALH,WAMS,YAAK;AACV,qBAAI,CAACF,YAAL,GAAoB,IAApB;AACD,aARH;AASD;AAjamC;AAAA;AAAA,iBAmapC,4BAAmBE,uBAAnB,EAAmE;AAAA;;AACjE,gBAAIA,uBAAJ,EAA6B;AAC3B,mBAAKhC,SAAL,GAAiB,EAAjB;AACAhD,oBAAM,CAACoF,IAAP,CAAYJ,uBAAZ,EAAqC1F,OAArC,CAA6C,aAAG,EAAG;AACjD,oBAAMoB,IAAI,GAAG,EAAb;AACAA,oBAAI,CAAC,MAAD,CAAJ,GAAeZ,GAAf;AACAY,oBAAI,CAAC,MAAD,CAAJ,GAAe,EAAf;;AAHiD,2DAI3BsE,uBAAuB,CAAClF,GAAD,CAJI;AAAA;;AAAA;AAIjD,sEAAoD;AAAA,wBAAzC2C,OAAyC;AAClD/B,wBAAI,CAAC,MAAD,CAAJ,CAAahB,IAAb,CAAkB+C,OAAlB;AACD;AANgD;AAAA;AAAA;AAAA;AAAA;;AAOjD,uBAAI,CAACO,SAAL,CAAetD,IAAf,CAAoBgB,IAApB;AACD,eARD;AASA,mBAAKM,sBAAL;AACA,mBAAKW,iBAAL,GAAyB,KAAKqB,SAA9B;AACA,mBAAK7C,UAAL,CAAgB,KAAKd,mBAArB;AACA,mBAAKqC,cAAL;AACD;;AACD,iBAAKnE,eAAL,CAAqBgD,aAArB,CAAmC,EAAnC;AACD;AArbmC;AAAA;AAAA,iBAub5B,6BAAoB8E,SAApB,EAA6CC,CAA7C,EAAsD;AAC5D,gBAAIC,MAAM,GAAG,KAAb;AACA,iBAAKvC,SAAL,CAAe1D,OAAf,CAAuB,UAAC0D,SAAD,EAA2B;AAChDA,uBAAS,CAACf,IAAV,CAAe3C,OAAf,CAAuB,UAACkG,KAAD,EAAwB;AAC7C,oBAAIF,CAAC,IAAI,CAAT,EAAY;AACV,sBAAID,SAAS,CAACvF,GAAV,IAAiB,WAArB,EAAkC;AAChCyF,0BAAM,GAAGC,KAAK,CAAC9C,SAAf;AACD,mBAFD,MAEO,IAAI2C,SAAS,CAACvF,GAAV,IAAiB,YAArB,EAAmC;AACxCyF,0BAAM,GAAG,CAACC,KAAK,CAAC9C,SAAhB;AACD;AACF,iBAND,MAMO;AACL,sBAAI2C,SAAS,CAACvF,GAAV,IAAiB0F,KAAK,CAAC3C,WAA3B,EAAwC;AACtC0C,0BAAM,GAAG,IAAT;AACD;AACF;;AACD,oBAAIA,MAAJ,EAAY;AACV;AACD;AACF,eAfD;AAgBD,aAjBD;AAkBA,mBAAOA,MAAP;AACD;AA5cmC;AAAA;AAAA,iBA8cpC,kCAAsB;AAAA;;AACpB,gBAAI,CAAC,KAAK5E,UAAN,IAAoB,CAAC,KAAKqC,SAA9B,EAAyC;AACvC;AACD;;AACD,gBAAIsC,CAAC,GAAG,CAAR;AACA,iBAAK3E,UAAL,CAAgBrB,OAAhB,CAAwB,aAAG,EAAG;AAC5BmG,iBAAG,CAACjG,MAAJ,CAAWF,OAAX,CAAmB,mBAAS,EAAG;AAC7B+F,yBAAS,CAACK,OAAV,GAAoB,OAAI,CAACC,mBAAL,CAAyBN,SAAzB,EAAoCC,CAApC,CAApB;AACD,eAFD;AAGAA,eAAC;AACF,aALD;AAMD;AAzdmC;AAAA;AAAA,iBA2d9B,mBAAUM,CAAV,EAAkB;;;;;;;AACN,2BAAM,KAAKpJ,WAAL,CAAiBqJ,MAAjB,CAAwB;AAC5CC,+BAAS,EAAEC,4FADiC;AAE5CC,2BAAK,EAAEJ,CAFqC;AAG5CxH,8BAAQ,EAAE,gBAHkC;AAI5C6H,oCAAc,EAAE;AACdtF,kCAAU,EAAE,KAAKA,UADH;AAEduF,+BAAO,EAAE,KAAK3I;AAFA,uBAJ4B;AAQ5C4I,0BAAI,EAAE;AARsC,qBAAxB,CAAN;;;AAAVC;sDAWCA,OAAO,CAACC,OAAR;;;;;;;;AACR;AAxemC;AAAA;AAAA,iBA0e9B,oBAAWT,CAAX,EAAmB;;;;;;;AACP,2BAAM,KAAKpJ,WAAL,CAAiBqJ,MAAjB,CAAwB;AAC5CC,+BAAS,EAAEQ,uFADiC;AAE5CN,2BAAK,EAAEJ,CAFqC;AAG5CxH,8BAAQ,EAAE,gBAHkC;AAI5C6H,oCAAc,EAAE;AACdpF,gCAAQ,EAAE,KAAKA,QADD;AAEdqF,+BAAO,EAAE,KAAK3I;AAFA,uBAJ4B;AAQ5C4I,0BAAI,EAAE;AARsC,qBAAxB,CAAN;;;AAAVC;sDAWCA,OAAO,CAACC,OAAR;;;;;;;;AACR;AAvfmC;AAAA;AAAA,iBAyf9B,4BAAmBT,CAAnB,EAA2B;;;;;;;AACf,2BAAM,KAAKpJ,WAAL,CAAiBqJ,MAAjB,CAAwB;AAC5CC,+BAAS,EAAES,oGADiC;AAE5CP,2BAAK,EAAEJ,CAFqC;AAG5CxH,8BAAQ,EAAE,gBAHkC;AAI5C6H,oCAAc,EAAE;AACdO,qCAAa,EAAE,KAAKA,aADN;AAEdxJ,oCAAY,EAAE,KAAKsB;AAFL,uBAJ4B;AAQ5C6H,0BAAI,EAAE;AARsC,qBAAxB,CAAN;;;AAAVC;sDAWCA,OAAO,CAACC,OAAR;;;;;;;;AACR;AAtgBmC;AAAA;AAAA,iBAwgBpC,yBAAgBI,QAAhB,EAAkCC,MAAlC,EAAgD;AAC9C,iBAAK5C,WAAL,GAAmB;AACjBC,uBAAS,EAAEC,8CAAOyC,QAAP,EAAiBvC,MAAjB,CAAwB,YAAxB,CADM;AAEjBC,qBAAO,EAAEH,8CAAO0C,MAAP,EAAexC,MAAf,CAAsB,YAAtB;AAFQ,aAAnB;AAKA,iBAAKd,iBAAL,CAAuB,KAAKJ,SAA5B;AACD;AA/gBmC;AAAA;AAAA,iBAihBpC,4BAAgB;AACd,iBAAKM,mBAAL,CAAyBqD,WAAzB;AACA,iBAAKrD,mBAAL,GAA2B,IAA3B;AACD;AAphBmC;AAAA;AAAA,iBAshBpC,uBAAW;AACT,iBAAKrC,kBAAL,CAAwB0F,WAAxB;AACA,iBAAKtF,gBAAL,CAAsBsF,WAAtB;AACA,iBAAKnF,gBAAL,CAAsBmF,WAAtB;;AACA,gBAAI,KAAKhC,eAAT,EAA0B;AACxB,mBAAKA,eAAL,CAAqBgC,WAArB;AACD;;AACD,gBAAI,KAAKrD,mBAAT,EAA8B;AAC5B,mBAAKA,mBAAL,CAAyBqD,WAAzB;AACD;AACF;AAhiBmC;;AAAA;AAAA;;;;gBApC9BzJ;;gBAUA0J;;gBACAC;;gBACAC;;gBAcAC;;gBAGAC;;;;;;gBAQLpJ;;;gBACAA;;;gBAEAA;;;gBACAA;;;gBASAA;AAASqJ,iBAAC,gBAAD,EAAmB;AAACC,gBAAI,EAAEtJ;AAAP,WAAnB;;;AAdCN,gCAAyB,wDALrC,2DAAU;AACTF,gBAAQ,EAAE,0BADD;AAETC,+LAFS;;AAAA,OAAV,CAKqC,GAAzBC,0BAAyB,CAAzB;;;;;;;;;;;;;AC/Cb;;;AAAA6J,uCAAe,gtCAAf;;;;;;;;;;;;;ACAA;;;AAAAA,uCAAe,s8OAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;","names":["DateRangeFilterComponent","popoverCtrl","benefitService","_constants_pageText_json__WEBPACK_IMPORTED_MODULE_2__","selectedDateOpt","selectedValue","save","changeDateOptions","dismiss","selectedDate","_ionic_angular__WEBPACK_IMPORTED_MODULE_4__","_shared_lib_services_benefits_benefits_service__WEBPACK_IMPORTED_MODULE_3__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","selector","template","PlanTransactionsComponent","benefitServices","consentService","utilityService","tpaService","accessService","_angular_core__WEBPACK_IMPORTED_MODULE_13__","_shared_lib_components_coverages_constants_chartData_json__WEBPACK_IMPORTED_MODULE_2__","_constants_pageText_json__WEBPACK_IMPORTED_MODULE_8__","filterContent","dateRangeOptions","header","dateRangeLbl","translucent","cssClass","determineTPA","selectedRangeType","isWeb","getIsWeb","getFilterOptions","getSortOptions","getSectionValue","getDateOptions","checkAuthorization","setSortSlcted","selectedSortValue","checkMyvoyageAccess","access","isTpa","enableTPA","filterChips","storeSelectedFilter","forEach","product","values","some","push","item","clickedItem","filter","key","map","Object","items","el","filterData","storedKeyArr","getFiltSlcted","includes","setFiltSlcted","getSectionValues","then","data","filterList","sort","sortList","tpaFilterOptions","tpaSortOptions","checkAndDisableFilters","subscriptionFilter","currentFilter","subscribe","createFilterChips","subscriptionSort","currentSort","sortOption","subscriptionDate","currentDateOpt","gethealthDates","filteredGroupData","a","b","Date","date","getTime","name","serviceDate","listWithoutMonth","outOfPocketCost","transactions","mergedArray","show","length","element","inNetwork","filterNetwork","res","serviceName","_a","_b","groupData","filteredData","arr","filterAllCategoryItem","filterByDateRange","sortData","consentSubscription","hasConsent","getSpending","getMedicalConsent","consent","scrollToTop","topmostElement","emit","healthDates","startDate","moment__WEBPACK_IMPORTED_MODULE_4___default","subtract","format","endDate","startOf","endOf","dataWithinDate","d","getSpendingTPA","getSpendingRegular","manageButtonEvent","tpaSubscription","getTPAData","tpaData","isDataLoaded","createGroupDetails","groupingCategoryDetails","add","fetchSpending","resp","keys","filterVal","i","hasVal","value","dat","enabled","checkIfFilterHasVal","e","create","component","_filter_popover_filter_popover_component__WEBPACK_IMPORTED_MODULE_9__","event","componentProps","service","mode","popover","present","_sort_popover_sort_popover_component__WEBPACK_IMPORTED_MODULE_11__","_date_range_filter_date_range_filter_component__WEBPACK_IMPORTED_MODULE_7__","dateRangeList","fromDate","toDate","unsubscribe","_shared_lib_services_consent_consent_service__WEBPACK_IMPORTED_MODULE_5__","_shared_lib_services_utility_utility_service__WEBPACK_IMPORTED_MODULE_6__","_ionic_angular__WEBPACK_IMPORTED_MODULE_15__","_shared_lib_services_tpa_stream_tpastream_service__WEBPACK_IMPORTED_MODULE_10__","_shared_lib_services_access_access_service__WEBPACK_IMPORTED_MODULE_12__","args","read","__webpack_exports__"],"sources":["webpack:///shared-lib/components/coverages/plan-tabs/plan-transactions/date-range-filter/date-range-filter.component.ts","webpack:///shared-lib/components/coverages/plan-tabs/plan-transactions/plan-transactions.component.ts","webpack:///shared-lib/components/coverages/plan-tabs/plan-transactions/date-range-filter/date-range-filter.component.html","webpack:///shared-lib/components/coverages/plan-tabs/plan-transactions/plan-transactions.component.html"],"sourcesContent":["import {Component, Input, OnInit} from '@angular/core';\nimport * as pageText from '../constants/pageText.json';\nimport {PopoverController} from '@ionic/angular';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {FilterSortContent} from '@shared-lib/models/filter-sort.model';\n\n@Component({\n  selector: 'app-date-range-filter',\n  templateUrl: './date-range-filter.component.html',\n  styleUrls: ['./date-range-filter.component.scss'],\n})\nexport class DateRangeFilterComponent implements OnInit {\n  @Input() public dateRangeList;\n  @Input() public selectedDate;\n\n  constructor(\n    public popoverCtrl: PopoverController,\n    private benefitService: BenefitsService\n  ) {}\n\n  filterContent: FilterSortContent = (pageText as any).default;\n\n  public selectedValue = '';\n  public selectedDateOpt = '';\n\n  onChange() {\n    this.selectedDateOpt = this.selectedValue;\n  }\n\n  closeDialog(save: boolean) {\n    if (save && this.selectedDateOpt) {\n      this.benefitService.changeDateOptions(this.selectedDateOpt);\n    }\n    this.popoverCtrl.dismiss();\n  }\n\n  ngOnInit(): void {\n    this.selectedValue = this.selectedDate;\n  }\n}\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter,\n  Input,\n} from '@angular/core';\nimport * as chartText from '@shared-lib/components/coverages/constants/chartData.json';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  AllCategory,\n  GroupingCategoryDetails,\n  HealthContent,\n  HealthDates,\n  HealthUtlization,\n  NameCategory,\n} from '@shared-lib/components/coverages/models/chart.model';\nimport moment from 'moment';\nimport {ConsentService} from '@shared-lib/services/consent/consent.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PopoverController} from '@ionic/angular';\n\nimport {DateRangeFilterComponent} from './date-range-filter/date-range-filter.component';\nimport * as pageText from './constants/pageText.json';\nimport {Subscription} from 'rxjs';\nimport {\n  DateOptions,\n  FilterList,\n  FilterModels,\n  FilterSortContent,\n  FilterValues,\n  SortListing,\n} from '../../../../models/filter-sort.model';\nimport {FilterPopoverComponent} from '../../../filter-popover/filter-popover.component';\nimport {TPAStreamService} from '@shared-lib/services/tpa-stream/tpastream.service';\nimport {TPAClaimsData} from '@shared-lib/services/tpa-stream/models/tpa.model';\nimport {SortPopoverComponent} from '../../../sort-popover/sort-popover.component';\nimport {AccessService} from '@shared-lib/services/access/access.service';\n\n@Component({\n  selector: 'mobile-plan-transactions',\n  templateUrl: './plan-transactions.component.html',\n  styleUrls: ['./plan-transactions.component.scss'],\n})\nexport class PlanTransactionsComponent implements OnInit, OnDestroy {\n  @Input() back = false;\n  @Input() isModal = false;\n  isTpa = false;\n  @Output() consent = new EventEmitter<boolean>();\n  @Output() manageButtonEvent = new EventEmitter();\n  contentP: HealthContent = (chartText as any).default;\n  groupData: AllCategory[] = [];\n  filteredGroupData: AllCategory[] = [];\n  sortOption = 'asc';\n\n  healthDates: HealthDates;\n  hasConsent = false;\n  isWeb: boolean;\n  @ViewChild('topmostElement', {read: ElementRef}) topmostElement: ElementRef;\n\n  filterContent: FilterSortContent = (pageText as any).default;\n\n  filterList: FilterList[];\n  sortList: SortListing;\n  dateRangeList: DateOptions[] = this.filterContent.dateRangeOptions;\n\n  subscriptionFilter: Subscription;\n  subscriptionSort: Subscription;\n  subscriptionDate: Subscription;\n  tpaSubscription: Subscription;\n  isDataLoaded: boolean;\n  selectedRangeType: string;\n  fromDate = '';\n  toDate = '';\n  storeSelectedFilter: FilterList[];\n\n  customAlertOptions = {\n    header: this.filterContent.dateRangeLbl,\n    translucent: true,\n    cssClass: 'pop-over-class',\n  };\n\n  consentSubscription: Subscription;\n  selectedSortValue = '';\n\n  filterChips: FilterValues[];\n  storedKeyArr: string[] = [];\n\n  constructor(\n    private benefitServices: BenefitsService,\n    private consentService: ConsentService,\n    private utilityService: SharedUtilityService,\n    public popoverCtrl: PopoverController,\n    private tpaService: TPAStreamService,\n    private accessService: AccessService\n  ) {}\n\n  async ngOnInit() {\n    await this.determineTPA();\n    this.selectedRangeType = 'thisYear';\n    this.isWeb = this.utilityService.getIsWeb();\n    this.getFilterOptions();\n    this.getSortOptions();\n    this.getSectionValue();\n    this.getDateOptions();\n    this.checkAuthorization();\n    this.benefitServices.setSortSlcted(this.selectedSortValue);\n  }\n\n  async determineTPA() {\n    const access = await this.accessService.checkMyvoyageAccess();\n    this.isTpa = access.enableTPA === 'Y';\n  }\n\n  createFilterChips() {\n    this.filterChips = [];\n    this.storeSelectedFilter.forEach(product => {\n      return product.values.some(item => {\n        this.filterChips.push(item);\n      });\n    });\n  }\n\n  onRemoveChips(clickedItem: FilterValues) {\n    this.filterChips = this.filterChips.filter(function(item) {\n      return item.key !== clickedItem.key;\n    });\n\n    this.storeSelectedFilter = this.storeSelectedFilter.map(items => ({\n      ...items,\n      values: items.values.filter(el => el.key != clickedItem.key),\n    }));\n\n    this.filterData(this.storeSelectedFilter);\n\n    this.storedKeyArr = this.benefitServices.getFiltSlcted();\n\n    if (this.storedKeyArr.includes(clickedItem.key)) {\n      this.storedKeyArr = this.storedKeyArr.filter(function(item) {\n        return item !== clickedItem.key;\n      });\n    } else {\n      return;\n    }\n\n    this.benefitServices.setFiltSlcted(this.storedKeyArr);\n  }\n\n  clearAllChips() {\n    this.storeSelectedFilter = [];\n    this.filterChips = [];\n    this.benefitServices.setFiltSlcted([]);\n    this.filterData(this.storeSelectedFilter);\n  }\n\n  getSectionValue() {\n    this.benefitServices.getSectionValues().then((data: FilterModels) => {\n      const filter = data.filterList;\n      const sort = data.sortList;\n      if (this.isTpa) {\n        filter[1].values = this.filterContent.tpaFilterOptions;\n        sort[0].values = this.filterContent.tpaSortOptions;\n      }\n      this.filterList = filter;\n      this.checkAndDisableFilters();\n      this.sortList = sort;\n    });\n  }\n\n  getFilterOptions() {\n    this.subscriptionFilter = this.benefitServices\n      .currentFilter()\n      .subscribe(data => {\n        this.storeSelectedFilter = data;\n        this.createFilterChips();\n        this.filterData(data);\n      });\n  }\n\n  getSortOptions() {\n    this.subscriptionSort = this.benefitServices\n      .currentSort()\n      .subscribe(data => {\n        this.sortOption = data;\n        this.filterData(this.storeSelectedFilter);\n      });\n  }\n\n  getDateOptions() {\n    this.subscriptionDate = this.benefitServices\n      .currentDateOpt()\n      .subscribe(data => {\n        this.selectedRangeType = data;\n        this.gethealthDates();\n      });\n  }\n\n  sortData(data: string) {\n    if (data == 'asc') {\n      this.filteredGroupData.sort((a, b) => {\n        return new Date(a.date).getTime() - new Date(b.date).getTime();\n      });\n      return this.filteredGroupData.forEach(item => {\n        return item.name.sort(\n          (a, b) =>\n            new Date(a.serviceDate).getTime() -\n            new Date(b.serviceDate).getTime()\n        );\n      });\n    }\n    if (data == 'dsc') {\n      this.filteredGroupData.sort((a, b) => {\n        return new Date(b.date).getTime() - new Date(a.date).getTime();\n      });\n      return this.filteredGroupData.forEach(item => {\n        return item.name.sort(\n          (a, b) =>\n            new Date(b.serviceDate).getTime() -\n            new Date(a.serviceDate).getTime()\n        );\n      });\n    }\n    if (data == 'low') {\n      this.listWithoutMonth();\n      this.filteredGroupData.forEach(item => {\n        return item.name.sort((a, b) => a.outOfPocketCost - b.outOfPocketCost);\n      });\n    }\n\n    if (data == 'high') {\n      this.listWithoutMonth();\n      this.filteredGroupData.forEach(item => {\n        return item.name.sort((a, b) => b.outOfPocketCost - a.outOfPocketCost);\n      });\n    }\n  }\n\n  listWithoutMonth() {\n    const transactions = [];\n    const mergedArray = [];\n\n    this.filteredGroupData.forEach(item => {\n      transactions.push(...item.name);\n    });\n\n    mergedArray.push({\n      name: transactions,\n    });\n\n    this.filteredGroupData = mergedArray;\n  }\n\n  filterNetwork(data: FilterList[], el: NameCategory) {\n    let show = false;\n    if (data[0].values.length < 1) {\n      show = true;\n    } else {\n      data[0].values.forEach(element => {\n        if (show) {\n          return;\n        }\n        if (element.key == 'inNetwork') {\n          show = el.inNetwork == true;\n        }\n        if (element.key == 'OutNetwork') {\n          show = el.inNetwork == false;\n        }\n      });\n    }\n    return show;\n  }\n\n  filterAllCategoryItem(item: AllCategory, data: FilterList[]): any {\n    return item.name.filter(el => {\n      const show = this.filterNetwork(data, el);\n      if (show) {\n        if (data[1].values.length < 1) {\n          return true;\n        }\n        let res = false;\n        data[1].values.forEach(element => {\n          if (element.key == el.serviceName) {\n            res = true;\n          }\n        });\n        return res;\n      }\n\n      return show;\n    });\n  }\n\n  filterData(data: FilterList[]) {\n    if (\n      data.length < 1 ||\n      (data[0]?.values.length < 1 && data[1]?.values.length < 1)\n    ) {\n      this.filteredGroupData = this.groupData;\n    } else {\n      const filteredData = [];\n      this.groupData.forEach(item => {\n        const arr = this.filterAllCategoryItem(item, data);\n        return filteredData.push({\n          date: item.date,\n          name: arr,\n        });\n      });\n\n      this.filteredGroupData = filteredData;\n    }\n\n    this.filterByDateRange(this.filteredGroupData);\n    this.sortData(this.sortOption);\n  }\n\n  ionViewWillEnter() {\n    if (!this.consentSubscription) {\n      this.checkAuthorization();\n    }\n  }\n\n  async checkAuthorization() {\n    if (this.isTpa) {\n      this.hasConsent = true;\n      this.getSpending();\n    } else {\n      this.consentSubscription = this.consentService\n        .getMedicalConsent()\n        .subscribe(async (consent: boolean) => {\n          this.hasConsent = consent;\n          if (this.isWeb) {\n            this.utilityService.scrollToTop(this.topmostElement);\n          }\n          if (this.hasConsent) {\n            this.consent.emit(true);\n            this.getSpending();\n          } else {\n            this.consent.emit(false);\n          }\n        });\n    }\n  }\n\n  gethealthDates() {\n    if (this.selectedRangeType == '30Days') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(30, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n    if (this.selectedRangeType == '3Months') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(90, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n    if (this.selectedRangeType == '6Months') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(180, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n    if (this.selectedRangeType == '12Months') {\n      this.healthDates = {\n        startDate: moment()\n          .subtract(360, 'days')\n          .format('YYYY-MM-DD'),\n        endDate: moment().format('YYYY-MM-DD'),\n      };\n    }\n\n    if (this.selectedRangeType == 'lastYear') {\n      this.healthDates = {\n        startDate: moment()\n          .startOf('year')\n          .subtract(1, 'years')\n          .format('YYYY-MM-DD'),\n        endDate: moment()\n          .endOf('year')\n          .subtract(1, 'years')\n          .format('YYYY-MM-DD'),\n      };\n    } else if (this.selectedRangeType == 'thisYear') {\n      this.healthDates = {\n        startDate: moment()\n          .startOf('year')\n          .format('YYYY-MM-DD'),\n        endDate: moment()\n          .endOf('year')\n          .format('YYYY-MM-DD'),\n      };\n    }\n    this.filterData(this.storeSelectedFilter);\n  }\n\n  filterByDateRange(data: AllCategory[]) {\n    const dataWithinDate = [];\n\n    data.forEach(item => {\n      const res = item.name.filter(d => {\n        return (\n          d.serviceDate >= this.healthDates.startDate &&\n          d.serviceDate <= this.healthDates.endDate\n        );\n      });\n      return dataWithinDate.push({\n        date: item.date,\n        name: res,\n      });\n    });\n\n    this.filteredGroupData = dataWithinDate;\n  }\n\n  getSpending() {\n    if (this.isTpa) {\n      this.getSpendingTPA();\n    } else {\n      this.getSpendingRegular();\n    }\n  }\n\n  manageCarriers() {\n    this.manageButtonEvent.emit();\n  }\n\n  getSpendingTPA() {\n    this.tpaSubscription = this.tpaService\n      .getTPAData()\n      .subscribe((tpaData: TPAClaimsData) => {\n        this.isDataLoaded = true;\n        this.createGroupDetails(tpaData.groupingCategoryDetails);\n      });\n  }\n\n  getSpendingRegular() {\n    this.healthDates = {\n      startDate: moment()\n        .startOf('year')\n        .add(-2, 'years')\n        .format('MM/DD/YYYY'),\n      endDate: moment()\n        .endOf('year')\n        .format('MM/DD/YYYY'),\n    };\n\n    this.benefitServices\n      .fetchSpending(this.healthDates, true)\n      .then((resp: HealthUtlization) => {\n        this.isDataLoaded = true;\n        this.createGroupDetails(resp.groupingCategoryDetails);\n      })\n      .catch(() => {\n        this.isDataLoaded = true;\n      });\n  }\n\n  createGroupDetails(groupingCategoryDetails: GroupingCategoryDetails) {\n    if (groupingCategoryDetails) {\n      this.groupData = [];\n      Object.keys(groupingCategoryDetails).forEach(key => {\n        const data = {};\n        data['date'] = key;\n        data['name'] = [];\n        for (const element of groupingCategoryDetails[key]) {\n          data['name'].push(element);\n        }\n        this.groupData.push(data);\n      });\n      this.checkAndDisableFilters();\n      this.filteredGroupData = this.groupData;\n      this.filterData(this.storeSelectedFilter);\n      this.gethealthDates();\n    }\n    this.benefitServices.setFiltSlcted([]);\n  }\n\n  private checkIfFilterHasVal(filterVal: FilterValues, i: number) {\n    let hasVal = false;\n    this.groupData.forEach((groupData: AllCategory) => {\n      groupData.name.forEach((value: NameCategory) => {\n        if (i == 0) {\n          if (filterVal.key == 'inNetwork') {\n            hasVal = value.inNetwork;\n          } else if (filterVal.key == 'OutNetwork') {\n            hasVal = !value.inNetwork;\n          }\n        } else {\n          if (filterVal.key == value.serviceName) {\n            hasVal = true;\n          }\n        }\n        if (hasVal) {\n          return;\n        }\n      });\n    });\n    return hasVal;\n  }\n\n  checkAndDisableFilters() {\n    if (!this.filterList || !this.groupData) {\n      return;\n    }\n    let i = 0;\n    this.filterList.forEach(dat => {\n      dat.values.forEach(filterVal => {\n        filterVal.enabled = this.checkIfFilterHasVal(filterVal, i);\n      });\n      i++;\n    });\n  }\n\n  async opnFilter(e: Event) {\n    const popover = await this.popoverCtrl.create({\n      component: FilterPopoverComponent,\n      event: e,\n      cssClass: 'pop-over-class',\n      componentProps: {\n        filterList: this.filterList,\n        service: this.benefitServices,\n      },\n      mode: 'ios',\n    });\n\n    return popover.present();\n  }\n\n  async opnSorting(e: Event) {\n    const popover = await this.popoverCtrl.create({\n      component: SortPopoverComponent,\n      event: e,\n      cssClass: 'pop-over-class',\n      componentProps: {\n        sortList: this.sortList,\n        service: this.benefitServices,\n      },\n      mode: 'ios',\n    });\n\n    return popover.present();\n  }\n\n  async opnDateRangeFilter(e: Event) {\n    const popover = await this.popoverCtrl.create({\n      component: DateRangeFilterComponent,\n      event: e,\n      cssClass: 'pop-over-class',\n      componentProps: {\n        dateRangeList: this.dateRangeList,\n        selectedDate: this.selectedRangeType,\n      },\n      mode: 'ios',\n    });\n\n    return popover.present();\n  }\n\n  customDateRange(fromDate: string, toDate: string) {\n    this.healthDates = {\n      startDate: moment(fromDate).format('YYYY-MM-DD'),\n      endDate: moment(toDate).format('YYYY-MM-DD'),\n    };\n\n    this.filterByDateRange(this.groupData);\n  }\n\n  ionViewWillLeave() {\n    this.consentSubscription.unsubscribe();\n    this.consentSubscription = null;\n  }\n\n  ngOnDestroy() {\n    this.subscriptionFilter.unsubscribe();\n    this.subscriptionSort.unsubscribe();\n    this.subscriptionDate.unsubscribe();\n    if (this.tpaSubscription) {\n      this.tpaSubscription.unsubscribe();\n    }\n    if (this.consentSubscription) {\n      this.consentSubscription.unsubscribe();\n    }\n  }\n}\n","export default \"<div class=\\\"list-wrap sort-wrap\\\">\\n  <ion-list>\\n    <h5>{{ filterContent.dateRangeLbl }}</h5>\\n    <ion-radio-group [(ngModel)]=\\\"selectedValue\\\" (ionChange)=\\\"onChange()\\\">\\n      <ion-item\\n        class=\\\"ion-no-padding \\\"\\n        lines=\\\"none\\\"\\n        *ngFor=\\\"let data of dateRangeList\\\"\\n      >\\n        <ion-radio\\n          mode=\\\"ios\\\"\\n          value=\\\"{{ data.id }}\\\"\\n          color=\\\"btndarkblue\\\"\\n        ></ion-radio>\\n        <img\\n          src=\\\"assets/icon/check.svg\\\"\\n          alt=\\\"check mark\\\"\\n          srcset=\\\"\\\"\\n          class=\\\"checkmark\\\"\\n          [class.active]=\\\"this.selectedValue == data.id\\\"\\n        />\\n        <ion-label>{{ data.value }} </ion-label>\\n      </ion-item>\\n    </ion-radio-group>\\n  </ion-list>\\n</div>\\n\\n<div class=\\\"btn-wrap\\\">\\n  <ion-button\\n    (click)=\\\"closeDialog(false)\\\"\\n    class=\\\"font-18 save-button\\\"\\n    expand=\\\"block\\\"\\n    fill=\\\"clear\\\"\\n    color=\\\"btndarkblue\\\"\\n  >\\n    {{ filterContent.cancelLabel }}\\n  </ion-button>\\n  <ion-button\\n    (click)=\\\"closeDialog(true)\\\"\\n    class=\\\"font-18 save-button\\\"\\n    expand=\\\"block\\\"\\n    fill=\\\"clear\\\"\\n    color=\\\"btndarkblue\\\"\\n  >\\n    {{ filterContent.okLable }}\\n  </ion-button>\\n</div>\\n\";","export default \"<app-modal-header\\n  *ngIf=\\\"isModal\\\"\\n  [headerText]=\\\"'Claims'\\\"\\n  [back]=\\\"false\\\"\\n></app-modal-header>\\n<div [ngClass]=\\\"isWeb ? 'web-plan-transactions' : 'mobile-plan-transactions'\\\">\\n  <div #topmostElement></div>\\n  <app-consent-required\\n    *ngIf=\\\"!hasConsent\\\"\\n    [back]=\\\"back\\\"\\n  ></app-consent-required>\\n  <div *ngIf=\\\"hasConsent\\\">\\n    <div class=\\\"calim-transaction-card\\\">\\n      <div class=\\\"filter-row\\\">\\n        <ion-button\\n          (click)=\\\"opnFilter($event)\\\"\\n          #filter\\n          size=\\\"small\\\"\\n          fill=\\\"outline\\\"\\n          class=\\\"filt-button font-14\\\"\\n          id=\\\"filter-button\\\"\\n          >{{ filterContent.filterLable }}\\n          <ion-icon class=\\\"ml-10\\\" name=\\\"filter-outline\\\"></ion-icon>\\n        </ion-button>\\n\\n        <ion-button\\n          (click)=\\\"opnSorting($event)\\\"\\n          size=\\\"small\\\"\\n          fill=\\\"outline\\\"\\n          class=\\\"filt-button font-14\\\"\\n          id=\\\"sort-button\\\"\\n          >{{ filterContent.sortLable }}\\n          <ion-icon class=\\\"ml-10\\\" name=\\\"chevron-down-outline\\\"></ion-icon>\\n        </ion-button>\\n        <div\\n          (click)=\\\"manageCarriers()\\\"\\n          class=\\\"manage-button\\\"\\n          *ngIf=\\\"isTpa && !isModal\\\"\\n          tabindex=\\\"0\\\"\\n          (keydown.enter)=\\\"manageCarriers()\\\"\\n        >\\n          {{ filterContent.manage }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"chip-wrap\\\" *ngIf=\\\"isWeb && filterChips.length\\\">\\n        <app-chips\\n          [item]=\\\"filterChips\\\"\\n          (outPutData)=\\\"onRemoveChips($event)\\\"\\n          (clearOutPutFn)=\\\"clearAllChips()\\\"\\n        ></app-chips>\\n      </div>\\n\\n      <div class=\\\"date-range-row\\\">\\n        <ion-text class=\\\"font-w-600\\\"\\n          >{{ filterContent.dateRangeLbl }} :\\n        </ion-text>\\n        <ion-text\\n          class=\\\"option-name\\\"\\n          *ngFor=\\\"let data of filterContent.dateRangeOptions; let i = index\\\"\\n          [hidden]=\\\"data.id != selectedRangeType\\\"\\n          tabindex=\\\"0\\\"\\n          (keydown.enter)=\\\"opnDateRangeFilter($event)\\\"\\n          (click)=\\\"opnDateRangeFilter($event)\\\"\\n        >\\n          <span class=\\\"value-wrap\\\">\\n            {{ data.value }}\\n            <ion-icon name=\\\"caret-down-outline\\\"></ion-icon>\\n          </span>\\n        </ion-text>\\n      </div>\\n\\n      <div class=\\\"custom-date-range\\\" *ngIf=\\\"this.selectedRangeType == 'custom'\\\">\\n        <div class=\\\"cdr-block\\\">\\n          <ion-text class=\\\"font-w-600\\\">{{ filterContent.fromTxt }}</ion-text>\\n          <ion-datetime\\n            mode=\\\"ios\\\"\\n            placeholder=\\\"mm/dd/yyyy\\\"\\n            displayFormat=\\\"MM/DD/YYYY\\\"\\n            pickerFormat=\\\"MMM/DD/YYYY\\\"\\n            presentation=\\\"fromDate\\\"\\n            [(ngModel)]=\\\"fromDate\\\"\\n            (ionChange)=\\\"customDateRange(this.fromDate, this.toDate)\\\"\\n          ></ion-datetime>\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\n        </div>\\n        <div class=\\\"cdr-block\\\">\\n          <ion-text class=\\\"font-w-600\\\">{{ filterContent.toTxt }}</ion-text>\\n          <ion-datetime\\n            mode=\\\"ios\\\"\\n            placeholder=\\\"mm/dd/yyyy\\\"\\n            displayFormat=\\\"MM/DD/YYYY\\\"\\n            pickerFormat=\\\"MMM/DD/YYYY\\\"\\n            presentation=\\\"toDate\\\"\\n            [(ngModel)]=\\\"toDate\\\"\\n            (ionChange)=\\\"customDateRange(this.fromDate, this.toDate)\\\"\\n          ></ion-datetime>\\n          <ion-icon name=\\\"chevron-down-outline\\\"></ion-icon>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"data-wrapper\\\">\\n        <app-loading [loading]=\\\"!isDataLoaded\\\">\\n          <div *ngFor=\\\"let data of filteredGroupData\\\">\\n            <div class=\\\"frame\\\" *ngIf=\\\"data?.date && data?.name?.length\\\">\\n              <span class=\\\"title\\\">\\n                {{ data?.date | date: 'MMMM y' }}\\n              </span>\\n            </div>\\n            <ion-list *ngFor=\\\"let info of data.name\\\">\\n              <ion-row *ngIf=\\\"info.carrierName\\\">\\n                <ion-col class=\\\"carrier\\\">\\n                  {{ info.carrierName }}\\n                </ion-col>\\n              </ion-row>\\n              <ion-row>\\n                <ion-col\\n                  class=\\\"ion-text-start lastdays\\\"\\n                  [ngClass]=\\\"{'tpa-col': isTpa}\\\"\\n                  size=\\\"8\\\"\\n                >\\n                  {{ info.providerName }}\\n                </ion-col>\\n                <ion-col\\n                  class=\\\"ion-text-end color\\\"\\n                  [ngClass]=\\\"{'tpa-col': isTpa}\\\"\\n                  size=\\\"4\\\"\\n                >\\n                  {{ -info.outOfPocketCost | currency: 'USD':'symbol' }}\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n                <ion-col class=\\\"ion-text-start subdate\\\" size=\\\"6\\\">\\n                  {{ info.serviceDate | date: 'MMMM d, y' }}\\n                </ion-col>\\n                <ion-col class=\\\"ion-text-end sub-name\\\" size=\\\"6\\\">\\n                  {{ contentP.myBill }}\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row class=\\\"dep-row\\\" *ngIf=\\\"info.firstName && info.lastName\\\">\\n                <div class=\\\"label\\\">Patient Name</div>\\n                <div class=\\\"colon\\\">:</div>\\n                <div class=\\\"value\\\">\\n                  {{ info.firstName + ' ' + info.lastName }}\\n                </div>\\n              </ion-row>\\n\\n              <ion-row class=\\\"dep-row\\\" *ngIf=\\\"info.relationship\\\">\\n                <div class=\\\"label\\\">Relationship</div>\\n                <div class=\\\"colon second\\\">:</div>\\n                <div class=\\\"value\\\">{{ info.relationship }}</div>\\n              </ion-row>\\n\\n              <div\\n                *ngIf=\\\"\\n                  info.serviceName === 'genericDrugs' ||\\n                  info.serviceName === 'preferredDrugs' ||\\n                  info.serviceName === 'rx'\\n                \\\"\\n              >\\n                <ion-row>\\n                  <ion-col class=\\\"drugname\\\">\\n                    {{ contentP.drugNames }} {{ info.drugName }}\\n                  </ion-col>\\n                </ion-row>\\n\\n                <ion-row *ngIf=\\\"info.lastFilledDate\\\">\\n                  <ion-col class=\\\"lastfilled\\\">\\n                    {{ contentP.lastFilled }}\\n                    {{\\n                      info.lastFilledDate\\n                        ? (info.lastFilledDate | date: 'MMMM d, y')\\n                        : filterContent.na\\n                    }}\\n                  </ion-col>\\n                </ion-row>\\n              </div>\\n              <ion-row *ngIf=\\\"info.patientName\\\">\\n                <ion-col class=\\\"patient\\\">\\n                  {{ contentP.patientName }}: {{ info.patientName }}\\n                </ion-col>\\n              </ion-row>\\n\\n              <ion-row>\\n                <div\\n                  class=\\\"dot\\\"\\n                  [ngStyle]=\\\"{\\n                    background: this.contentP.colors[info.serviceName]\\n                  }\\\"\\n                ></div>\\n                <ion-col class=\\\"ion-text-start sub-category\\\">\\n                  {{ this.contentP.outNetworkCostNames[info.serviceName] }}\\n                  {{\\n                    info.inNetwork == true\\n                      ? '(' + this.contentP.inNetwork + ')'\\n                      : '(' + this.contentP.outOfNetwork + ')'\\n                  }}\\n                </ion-col>\\n              </ion-row>\\n              <hr class=\\\"divider\\\" />\\n            </ion-list>\\n          </div>\\n        </app-loading>\\n      </div>\\n    </div>\\n    <app-med-disclaimer></app-med-disclaimer>\\n  </div>\\n</div>\\n\";"]}