{"version":3,"file":"default-shared-lib_components_mx-error_mxerror_module_ts-shared-lib_components_net-worth_net--11d783-es2015.js","mappings":"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","sources":["./shared-lib/components/mx-error/mxerror.component.ts","./shared-lib/components/mx-error/mxerror.module.ts","./shared-lib/components/net-worth/net-worth.component.ts","./shared-lib/components/net-worth/net-worth.module.ts","./shared-lib/services/event-tracker/event-tracking.service.ts","./shared-lib/components/mx-error/mxerror.component.html","./shared-lib/components/net-worth/net-worth.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit, Input} from '@angular/core';\nimport {AccessService} from '@shared-lib/services/access/access.service';\nimport {MXService} from '@shared-lib/services/mx-service/mx.service';\nimport {\n  MXRootMemberObject,\n  Member,\n} from '@shared-lib/services/mx-service/models/mx.model';\nimport * as mxErrorContent from './constants/content.json';\nimport {Subscription} from 'rxjs';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {PlatformService} from '@shared-lib/services/platform/platform.service';\n\n@Component({\n  selector: 'app-mxerror',\n  templateUrl: './mxerror.component.html',\n  styleUrls: ['./mxerror.component.scss'],\n})\nexport class MXErrorComponent implements OnInit, OnDestroy {\n  @Input() noLeftPadding: boolean;\n  content = mxErrorContent;\n  hasMXError = false;\n  private subscription: Subscription;\n  isWeb: boolean;\n  isDesktop: boolean;\n  isMxUser: boolean;\n  constructor(\n    private accessService: AccessService,\n    private mxService: MXService,\n    private utilityService: SharedUtilityService,\n    private platformService: PlatformService\n  ) {}\n\n  async ngOnInit() {\n    this.isWeb = this.utilityService.getIsWeb();\n    const accessData = await this.accessService.checkMyvoyageAccess();\n    this.isMxUser = accessData.isMxUser;\n    if (!this.isWeb || this.isMxUser) {\n      this.checkForErrors();\n    }\n    this.platformService.isDesktop().subscribe(data => {\n      this.isDesktop = data;\n    });\n  }\n\n  checkForErrors() {\n    this.subscription = this.mxService\n      .getMxMemberConnect()\n      .subscribe((memConnect: MXRootMemberObject) => {\n        this.hasMXError = false;\n        memConnect.members.forEach((account: Member) => {\n          if (\n            account.connection_status != null &&\n            account.connection_status !== 'CONNECTED'\n          ) {\n            this.hasMXError = true;\n          }\n        });\n      });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) this.subscription.unsubscribe();\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {MXErrorComponent} from './mxerror.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [MXErrorComponent],\n  exports: [MXErrorComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class MXErrorComponentModule {}\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {NetWorthContent} from '@shared-lib/models/net-worth.model';\nimport * as nwContent from '@shared-lib/constants/net-worth.json';\nimport {MXWidgetComponent} from '../mx-widget/mx-widget.component';\nimport {WidgetType} from '@shared-lib/services/mx-service/models/widget-type.enum';\nimport {Platform} from '@ionic/angular';\nimport {Router} from '@angular/router';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\n\n@Component({\n  selector: 'app-net-worth',\n  templateUrl: './net-worth.component.html',\n  styleUrls: ['./net-worth.component.scss'],\n})\nexport class NetWorthComponent implements OnInit {\n  readonly widgetType = WidgetType;\n  netWorthContent: NetWorthContent = (nwContent as any).default;\n\n  @Input() tagName: string;\n  @Input() isMiniWidget: boolean;\n  isTablet = false;\n  isWeb: boolean;\n  currentUrl: string;\n\n  @ViewChild(MXWidgetComponent) widget: MXWidgetComponent;\n\n  constructor(\n    private platform: Platform,\n    private router: Router,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit(): void {\n    this.isTablet = this.isMiniWidget ? false : this.platform.is('tablet');\n    this.isWeb = this.utilityService.getIsWeb();\n    this.currentUrl = this.router.url;\n  }\n\n  netWorthClicked() {\n    this.router.navigateByUrl('net-worth');\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {IonicModule} from '@ionic/angular';\nimport {NetWorthComponent} from './net-worth.component';\nimport {MXWidgetModule} from '../mx-widget/mx-widget.module';\n\n@NgModule({\n  imports: [CommonModule, IonicModule, MXWidgetModule],\n  declarations: [NetWorthComponent],\n  exports: [NetWorthComponent],\n})\nexport class NetWorthModule {}\n","import {Injectable} from '@angular/core';\nimport {endPoints} from '@shared-lib/services/account/constants/endpoints';\nimport {BaseService} from '@shared-lib/services/base/base-factory-provider';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {EventTrackingEvent, SFMCUserInfo} from './models/event-tracking.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EventTrackingService {\n  endPoints = endPoints;\n  private subscriberKeyPromise: Promise<SFMCUserInfo>;\n\n  constructor(\n    private baseService: BaseService,\n    private utilityService: SharedUtilityService\n  ) {\n    this.endPoints = this.utilityService.appendBaseUrlToEndpoints(endPoints);\n  }\n\n  async eventTracking(postData: EventTrackingEvent): Promise<void> {\n    postData.createdBy = 'myvoyage';\n    postData.subscriberKey = (await this.getSubscriberKey()).subscriberKey;\n    postData.passThruAttributes = [\n      ...(postData.passThruAttributes || []),\n      {\n        attributeName: 'platform',\n        attributeValue: this.utilityService.getIsWeb() ? 'web' : 'mobile',\n      },\n    ];\n    await this.baseService.post(this.endPoints.eventTracking, postData);\n  }\n\n  getSubscriberKey(): Promise<SFMCUserInfo> {\n    if (!this.subscriberKeyPromise) {\n      this.subscriberKeyPromise = this.baseService.get(\n        this.endPoints.subscriberKey\n      );\n    }\n    return this.subscriberKeyPromise;\n  }\n}\n","export default \"<ion-card\\n  *ngIf=\\\"hasMXError\\\"\\n  [ngClass]=\\\"isWeb && isDesktop ? 'web-content' : ''\\\"\\n  class=\\\"mx-error\\\"\\n>\\n  <ion-card-content [ngClass]=\\\"noLeftPadding ? 'no-left-padding' : ''\\\">\\n    <div id=\\\"mx-error-img\\\" class=\\\"img-div\\\">\\n      <img tabindex=\\\"0\\\" src=\\\"assets/icon/error_circle.svg\\\" alt=\\\"error\\\" />\\n    </div>\\n    <div class=\\\"txt-div\\\" tabindex=\\\"1\\\">\\n      {{ content.mxError\\n      }}<a\\n        class=\\\"mx-error-link\\\"\\n        id=\\\"mx-error-link-mob\\\"\\n        *ngIf=\\\"!isWeb\\\"\\n        tabindex=\\\"2\\\"\\n        routerLink=\\\"/account/manage-accounts\\\"\\n        >{{ content.mxErrorLink }}</a\\n      >\\n      <a\\n        class=\\\"mx-error-link\\\"\\n        id=\\\"mx-error-link-web\\\"\\n        *ngIf=\\\"isWeb\\\"\\n        tabindex=\\\"3\\\"\\n        routerLink=\\\"/accounts/manage-accounts\\\"\\n        >{{ content.mxErrorLink }}</a\\n      >\\n    </div>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<ion-card class=\\\"net-worth\\\">\\n  <ng-container\\n    *ngIf=\\\"isWeb === true && currentUrl !== '/home'; else NetWorthHeader\\\"\\n  >\\n    <ion-card-header>{{ netWorthContent.header }}</ion-card-header>\\n  </ng-container>\\n  <ng-template #NetWorthHeader>\\n    <ion-card-header>{{ netWorthContent.header }}</ion-card-header>\\n  </ng-template>\\n\\n  <app-mx-widget\\n    [widgetType]=\\\"isTablet ? widgetType.NET_WORTH : widgetType.NET_WORTH_MINI\\\"\\n    [height]=\\\"isTablet ? '475px' : '400px'\\\"\\n    [tagName]=\\\"tagName\\\"\\n    #widget\\n  ></app-mx-widget>\\n  <ion-button\\n    id=\\\"view-net-worth-btn\\\"\\n    class=\\\"font-18\\\"\\n    name=\\\"sign-out\\\"\\n    shape=\\\"round\\\"\\n    expand=\\\"block\\\"\\n    color=\\\"btncolor\\\"\\n    fill=\\\"outline\\\"\\n    (click)=\\\"netWorthClicked()\\\"\\n  >\\n    {{ netWorthContent.viewNetWorth }}\\n  </ion-button>\\n</ion-card>\\n\";"],"names":[],"sourceRoot":"webpack:///"}