{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UACaA;;;;;;;;;;;;;iBACHC,qBAAY;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,0BACRC,KAAI,CAACC,WAAL,CAAiB,+CAAjB,CADQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEjB;;;iBACKC,eAAMC,OAAND,EAAe;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACX,qBAAqBE,MADV;AAAA;AAAA;AAAA;;AAAA,0BAEPC,MAAI,CAACJ,WAAL,CAAiB,kDAAjB,CAFO;;AAAA;AAIXK,6BAJW,GAIC,IAAIC,wBAAJ,CAA6BJ,OAAO,CAACK,KAArC,CAJD;;AAKjB,wBAAIL,OAAO,CAACM,QAAZ,EAAsB;AAClBH,+BAAS,CAACI,IAAVJ,GAAiBH,OAAO,CAACM,QAAzBH;AACH;;AACDK,mCAAe,CAACT,KAAhBS,CAAsBL,SAAtBK;;AARiB;AAAA;AAAA;AAAA;AAAA;AAAA;AASpB;;;;QAbgCC;;;;","names":["ScreenReaderWeb","isEnabled","_this","unavailable","speak","options","window","_this2","utterance","SpeechSynthesisUtterance","value","language","lang","speechSynthesis","WebPlugin"],"sources":["webpack:///node_modules/@capacitor/screen-reader/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class ScreenReaderWeb extends WebPlugin {\n    async isEnabled() {\n        throw this.unavailable('This feature is not available in the browser.');\n    }\n    async speak(options) {\n        if (!('speechSynthesis' in window)) {\n            throw this.unavailable('Browser does not support the SpeechSynthesis API');\n        }\n        const utterance = new SpeechSynthesisUtterance(options.value);\n        if (options.language) {\n            utterance.lang = options.language;\n        }\n        speechSynthesis.speak(utterance);\n    }\n}\n"]}