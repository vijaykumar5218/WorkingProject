{"version":3,"file":"shared-lib_components_settings_components_summary_summary_module_ts-es2015.js","mappings":"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","sources":["./shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.component.ts","./shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.module.ts","./shared-lib/components/settings/components/summary/summary-routing.module.ts","./shared-lib/components/settings/components/summary/summary.module.ts","./shared-lib/components/settings/components/summary/summary.page.ts","./shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.component.html","./shared-lib/components/settings/components/summary/summary.page.html"],"sourcesContent":["import {Component, Input} from '@angular/core';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {\n  Benefit,\n  BenefitsSummaryContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\n\n@Component({\n  selector: 'app-summary-benefits-list',\n  templateUrl: './benefits-list.component.html',\n  styleUrls: ['./benefits-list.component.scss'],\n})\nexport class BenefitsListComponent {\n  @Input() header: string;\n  @Input() benefitsList: Benefit[];\n  @Input() displayPremiumAndCoverage: boolean;\n  content: BenefitsSummaryContent;\n\n  constructor(private benefitService: BenefitsService) {}\n\n  ngOnInit() {\n    this.getBenefitContent();\n  }\n\n  async getBenefitContent(): Promise<void> {\n    return this.benefitService\n      .getBenefitContent()\n      .then((res: BenefitsSummaryContent) => {\n        this.content = res;\n      });\n  }\n}\n","import {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {IonicModule} from '@ionic/angular';\nimport {BenefitsListComponent} from './benefits-list.component';\n\n@NgModule({\n  imports: [CommonModule, IonicModule],\n  declarations: [BenefitsListComponent],\n  exports: [BenefitsListComponent],\n})\nexport class BenefitsListComponentModule {}\n","import {NgModule} from '@angular/core';\nimport {Routes, RouterModule} from '@angular/router';\n\nimport {SummaryPage} from './summary.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SummaryPage,\n  },\n  {\n    path: 'add-benefits',\n    loadChildren: () =>\n      import('./components/add-benefits/add-benefits.module').then(\n        m => m.AddBenefitsPageModule\n      ),\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class SummaryPageRoutingModule {}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\nimport {IonicModule} from '@ionic/angular';\nimport {SummaryPageRoutingModule} from './summary-routing.module';\nimport {SummaryPage} from './summary.page';\nimport {BenefitsListComponentModule} from '@shared-lib/components/coverages/benefit-elections/benefit-list/benefits-list.module';\nimport {NoBenefitsComponentModule} from '@shared-lib/components/coverages/benefit-elections/no-benefits/no-benefits.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    SummaryPageRoutingModule,\n    NoBenefitsComponentModule,\n    BenefitsListComponentModule,\n  ],\n  declarations: [SummaryPage],\n})\nexport class SummaryPageModule {}\n","import {HeaderTypeService} from '@shared-lib/services/header-type/header-type.service';\nimport {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {\n  Benefits,\n  BenefitsSummaryContent,\n} from '@shared-lib/services/benefits/models/benefits.model';\nimport {BenefitsService} from '@shared-lib/services/benefits/benefits.service';\nimport {SharedUtilityService} from '@shared-lib/services/utility/utility.service';\nimport {ActionOptions} from '../../../../models/ActionOptions.model';\nimport {HeaderType} from '@shared-lib/constants/headerType.enum';\n\n@Component({\n  selector: 'app-summary',\n  templateUrl: './summary.page.html',\n  styleUrls: ['./summary.page.scss'],\n})\nexport class SummaryPage {\n  benefitsContent: BenefitsSummaryContent;\n  actionOption: ActionOptions = {\n    headername: undefined,\n    btnleft: true,\n    btnright: true,\n    buttonLeft: {\n      name: '',\n      link: 'settings',\n    },\n    buttonRight: {\n      name: '',\n      link: 'notification',\n    },\n  };\n  benefits: Benefits;\n  hasBenefits: boolean;\n  isWeb: boolean;\n\n  constructor(\n    private headerType: HeaderTypeService,\n    private router: Router,\n    private benefitService: BenefitsService,\n    private utilityService: SharedUtilityService\n  ) {}\n\n  ngOnInit(): void {\n    this.isWeb = this.utilityService.getIsWeb();\n    this.getBenefitData();\n  }\n\n  async getBenefitData(): Promise<void> {\n    return this.benefitService\n      .getNextYearBenefits()\n      .then(async (res: Benefits) => {\n        this.benefits = res;\n        this.hasBenefits =\n          this.benefits?.enrolled?.length > 0 ||\n          this.benefits?.provided?.length > 0 ||\n          this.benefits?.declined?.length > 0;\n      });\n  }\n\n  async ionViewWillEnter() {\n    this.benefitsContent = await this.benefitService.getBenefitContent();\n    this.actionOption.headername = this.benefitsContent.header;\n    this.actionOption.buttonLeft.link = this.benefitService.getBenefitSummaryBackButton();\n    this.headerType.publish({\n      type: HeaderType.navbar,\n      actionOption: this.actionOption,\n    });\n    this.benefitService.setBenefitSummaryBackButton('settings');\n  }\n\n  goToAddBenefits() {\n    this.router.navigateByUrl('/settings/summary/add-benefits');\n  }\n}\n","export default \"<div class=\\\"header\\\">{{ header }}</div>\\n<ion-card *ngFor=\\\"let benefit of benefitsList\\\">\\n  <ion-card-content>\\n    <ion-row>\\n      <ion-col class=\\\"img-col\\\">\\n        <img\\n          alt=\\\"\\\"\\n          src=\\\"{{\\n            (content?.iconMapping)[benefit.type] ||\\n              'assets/icon/benefits/benadminflag.svg'\\n          }}\\\"\\n        />\\n      </ion-col>\\n      <ion-col>\\n        <ion-text\\n          [ngClass]=\\\"\\n            displayPremiumAndCoverage &&\\n            (benefit.coverageType || benefit.premium || benefit.premium === 0)\\n              ? 'name'\\n              : 'declined'\\n          \\\"\\n          >{{ benefit.name }}</ion-text\\n        >\\n        <ion-row *ngIf=\\\"displayPremiumAndCoverage\\\">\\n          <ion-col size=\\\"5\\\" class=\\\"mt-0\\\">\\n            <ng-container *ngIf=\\\"benefit.coverageType\\\">\\n              <ion-text class=\\\"label\\\">\\n                {{ content?.coverageLabel }}\\n              </ion-text>\\n              <ion-text class=\\\"amt\\\">{{ benefit?.coverageType }}</ion-text>\\n            </ng-container>\\n          </ion-col>\\n          <ion-col size=\\\"7\\\" class=\\\"m-auto\\\">\\n            <ng-container *ngIf=\\\"benefit.premium || benefit.premium === 0\\\">\\n              <ion-text class=\\\"label\\\">\\n                {{ content?.premiumLabel }}\\n              </ion-text>\\n              <ion-text class=\\\"amt\\\"\\n                >{{ benefit.premium || 0 | currency: 'USD':'symbol' }}\\n                <ng-container *ngIf=\\\"benefit.premium > 0\\\"\\n                  >/{{ benefit.premiumFrequency }}</ng-container\\n                >\\n              </ion-text>\\n            </ng-container>\\n          </ion-col>\\n        </ion-row>\\n      </ion-col>\\n    </ion-row>\\n  </ion-card-content>\\n</ion-card>\\n\";","export default \"<div [ngClass]=\\\"isWeb? 'web-benefit-summary':'mobile-benefit-summary'\\\">\\n  <ng-container *ngIf=\\\"hasBenefits; else noBenefits\\\">\\n    <section\\n      class=\\\"header-section\\\"\\n      *ngIf=\\\"benefits?.payrollDeduction?.total_deduction || benefits?.payrollDeduction?.total_deduction === 0\\\"\\n    >\\n      <p class=\\\"header-text\\\">\\n        {{benefitsContent?.payrollText}}\\n        {{benefits.payrollDeduction.cycle_time}}\\n      </p>\\n      <p class=\\\"header-text-amount\\\">\\n        {{benefits.payrollDeduction.total_deduction | currency:'USD'}}\\n      </p>\\n    </section>\\n    <app-summary-benefits-list\\n      *ngIf=\\\"benefits?.enrolled?.length > 0\\\"\\n      [header]=\\\"benefitsContent?.enrolledSectionTitle\\\"\\n      [benefitsList]=\\\"benefits.enrolled\\\"\\n      [displayPremiumAndCoverage]=\\\"true\\\"\\n    ></app-summary-benefits-list>\\n    <app-summary-benefits-list\\n      *ngIf=\\\"benefits?.provided?.length > 0\\\"\\n      [header]=\\\"benefitsContent?.providedSectionTitle\\\"\\n      [benefitsList]=\\\"benefits.provided\\\"\\n      [displayPremiumAndCoverage]=\\\"false\\\"\\n    ></app-summary-benefits-list>\\n    <app-summary-benefits-list\\n      *ngIf=\\\"benefits?.declined?.length > 0\\\"\\n      [header]=\\\"benefitsContent?.declinedSectionTitle\\\"\\n      [benefitsList]=\\\"benefits.declined\\\"\\n      [displayPremiumAndCoverage]=\\\"false\\\"\\n    ></app-summary-benefits-list>\\n  </ng-container>\\n</div>\\n<ng-template #noBenefits> <app-no-benefits></app-no-benefits></ng-template>\\n\";"],"names":[],"sourceRoot":"webpack:///"}