require_relative '../../../node_modules/@capacitor/ios/scripts/pods_helpers'

platform :ios, '13.0'
use_frameworks!

# workaround to avoid Xcode caching of Pods that requires
# Product -> Clean Build Folder after new Cordova plugins installed
# Requires CocoaPods 1.6 or newer
install! 'cocoapods', :disable_input_output_paths => true

def capacitor_pods
  pod 'Capacitor', :path => '../../../node_modules/@capacitor/ios'
  pod 'CapacitorCordova', :path => '../../../node_modules/@capacitor/ios'
  pod 'CapacitorCommunityFirebaseAnalytics', :path => '../../../node_modules/@capacitor-community/firebase-analytics'
  pod 'CapacitorApp', :path => '../../../node_modules/@capacitor/app'
  pod 'CapacitorCamera', :path => '../../../node_modules/@capacitor/camera'
  pod 'CapacitorDevice', :path => '../../../node_modules/@capacitor/device'
  pod 'CapacitorKeyboard', :path => '../../../node_modules/@capacitor/keyboard'
  pod 'CapacitorNetwork', :path => '../../../node_modules/@capacitor/network'
  pod 'CapacitorScreenReader', :path => '../../../node_modules/@capacitor/screen-reader'
  pod 'CapacitorStatusBar', :path => '../../../node_modules/@capacitor/status-bar'
  pod 'CapacitorNativeSettings', :path => '../../../node_modules/capacitor-native-settings'
  pod 'CapawesomeCapacitorBadge', :path => '../../../node_modules/@capawesome/capacitor-badge'
  pod 'CapacitorAttestation', :path => '../../../node_modules/capacitor-attestation'
  pod 'CapacitorQualtrics', :path => '../../../node_modules/capacitor-qualtrics'
  pod 'CordovaPlugins', :path => '../capacitor-cordova-ios-plugins'
  pod 'CordovaPluginsStatic', :path => '../capacitor-cordova-ios-plugins'
end

target 'App' do
  capacitor_pods
  # Add your Pods here
  pod 'Firebase/Messaging'
  pod 'CropViewController'
end


post_install do |installer|
  assertDeploymentTarget(installer)
  installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
        target.build_configurations.each do |config|
            config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
      end
    end
  end
end
